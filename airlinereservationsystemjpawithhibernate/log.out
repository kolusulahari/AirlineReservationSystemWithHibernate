************* Welcome To Airline Reservation System *************
1. Search Flight By Source
2. Search Flight By Destination
3. Search Flight By Name
4. View All Flight Details
5. Register
6. Login
Search Flight Details by Source : 
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=TestPersistence, explicit-provider=null] against incoming persistence unit name [TestPersistence]
No PersistenceProvider explicitly requested, assuming Hibernate
PersistenceUnitInfo [
	name: TestPersistence
	persistence provider classname: null
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/DELL/eclipse-workspace/airlinereservationsystemjpawithhibernate/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: rootpassword
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: update
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate Core {5.4.2.Final}
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@2de56eb2
Adding type registration boolean -> org.hibernate.type.BooleanType@2de56eb2
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2de56eb2
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3cce5371
Adding type registration true_false -> org.hibernate.type.TrueFalseType@5b38c1ec
Adding type registration yes_no -> org.hibernate.type.YesNoType@55cb6996
Adding type registration byte -> org.hibernate.type.ByteType@38467116
Adding type registration byte -> org.hibernate.type.ByteType@38467116
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@38467116
Adding type registration character -> org.hibernate.type.CharacterType@5e7cd6cc
Adding type registration char -> org.hibernate.type.CharacterType@5e7cd6cc
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5e7cd6cc
Adding type registration short -> org.hibernate.type.ShortType@3feb2dda
Adding type registration short -> org.hibernate.type.ShortType@3feb2dda
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3feb2dda
Adding type registration integer -> org.hibernate.type.IntegerType@69c81773
Adding type registration int -> org.hibernate.type.IntegerType@69c81773
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@69c81773
Adding type registration long -> org.hibernate.type.LongType@5884a914
Adding type registration long -> org.hibernate.type.LongType@5884a914
Adding type registration java.lang.Long -> org.hibernate.type.LongType@5884a914
Adding type registration float -> org.hibernate.type.FloatType@aba625
Adding type registration float -> org.hibernate.type.FloatType@aba625
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@aba625
Adding type registration double -> org.hibernate.type.DoubleType@3932c79a
Adding type registration double -> org.hibernate.type.DoubleType@3932c79a
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3932c79a
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5db6b9cd
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5db6b9cd
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@58e1d9d
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@58e1d9d
Adding type registration string -> org.hibernate.type.StringType@69504ae9
Adding type registration java.lang.String -> org.hibernate.type.StringType@69504ae9
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7eecb5b8
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5c86a017
Adding type registration url -> org.hibernate.type.UrlType@4dc27487
Adding type registration java.net.URL -> org.hibernate.type.UrlType@4dc27487
Adding type registration Duration -> org.hibernate.type.DurationType@7dfb0c0f
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7dfb0c0f
Adding type registration Instant -> org.hibernate.type.InstantType@14bdbc74
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@14bdbc74
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@24c1b2d2
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@24c1b2d2
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1df8da7a
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1df8da7a
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1c9b0314
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1c9b0314
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f58853c
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f58853c
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@13d73f29
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@13d73f29
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5be1d0a4
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5be1d0a4
Adding type registration date -> org.hibernate.type.DateType@4470fbd6
Adding type registration java.sql.Date -> org.hibernate.type.DateType@4470fbd6
Adding type registration time -> org.hibernate.type.TimeType@3b6d844d
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3b6d844d
Adding type registration timestamp -> org.hibernate.type.TimestampType@4ee203eb
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4ee203eb
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4ee203eb
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3e78b6a5
Adding type registration calendar -> org.hibernate.type.CalendarType@18f8cd79
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@18f8cd79
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@18f8cd79
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6cc4cdb9
Adding type registration locale -> org.hibernate.type.LocaleType@6bb4dd34
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6bb4dd34
Adding type registration currency -> org.hibernate.type.CurrencyType@4a07d605
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4a07d605
Adding type registration timezone -> org.hibernate.type.TimeZoneType@68878f6d
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@68878f6d
Adding type registration class -> org.hibernate.type.ClassType@78fa769e
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@78fa769e
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@238d68ff
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@238d68ff
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@9cb8225
Adding type registration binary -> org.hibernate.type.BinaryType@7d61eb55
Adding type registration byte[] -> org.hibernate.type.BinaryType@7d61eb55
Adding type registration [B -> org.hibernate.type.BinaryType@7d61eb55
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@638ef7ed
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@638ef7ed
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@638ef7ed
Adding type registration row_version -> org.hibernate.type.RowVersionType@1f760b47
Adding type registration image -> org.hibernate.type.ImageType@33f676f6
Adding type registration characters -> org.hibernate.type.CharArrayType@81d9a72
Adding type registration char[] -> org.hibernate.type.CharArrayType@81d9a72
Adding type registration [C -> org.hibernate.type.CharArrayType@81d9a72
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@13df2a8c
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@13df2a8c
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@13df2a8c
Adding type registration text -> org.hibernate.type.TextType@7de62196
Adding type registration ntext -> org.hibernate.type.NTextType@35a3d49f
Adding type registration blob -> org.hibernate.type.BlobType@19b843ba
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@19b843ba
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e13529a
Adding type registration clob -> org.hibernate.type.ClobType@dc9876b
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@dc9876b
Adding type registration nclob -> org.hibernate.type.NClobType@3b5fad2d
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3b5fad2d
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@102cec62
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@43015c69
Adding type registration serializable -> org.hibernate.type.SerializableType@cd1e646
Adding type registration object -> org.hibernate.type.ObjectType@44be0077
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@44be0077
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5e21e98f
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@51a9ad5e
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5f20155b
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@72ade7e3
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@239105a8
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3fce8fd9
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@609bcfb6
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7d94beb9
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@5d43661b] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@12299890] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2fba3fc4]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
HHH10001001: Connection properties: {password=rootpassword, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.47 ( Revision: fe1903b1ecb4a96a917f7ed3190d80c049b1de29 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@40c80397] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4b672daa]
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name AirlineUsers
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers on table airline_users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=email_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property emailId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:emailId]
building SimpleValue for emailId
Building property emailId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=mobile_no, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property mobileNo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:mobileNo]
building SimpleValue for mobileNo
Building property mobileNo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=role, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property role with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:role]
building SimpleValue for role
Building property role
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name BookingStatus
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus on table booking_status
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=ticket_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property ticketId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:ticketId]
building SimpleValue for ticketId
Building property ticketId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(ticket_id)]), ticketId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=airlineUsers, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property airlineUsers with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:airlineUsers]
building SimpleValue for airlineUsers
Building property airlineUsers
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flightDetails, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightDetails with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightDetails]
building SimpleValue for flightDetails
Building property flightDetails
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightId]
building SimpleValue for flightId
Building property flightId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=no_of_seats_booked, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsbooked with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:noofseatsbooked]
building SimpleValue for noofseatsbooked
Building property noofseatsbooked
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name FlightDetails
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails on table flight_details
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightId]
building SimpleValue for flightId
Building property flightId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(flight_id)]), flightId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalDate]
building SimpleValue for arrivalDate
Building property arrivalDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalTime]
building SimpleValue for arrivalTime
Building property arrivalTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departure_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureDate]
building SimpleValue for departureDate
Building property departureDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departur_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureTime]
building SimpleValue for departureTime
Building property departureTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=destination, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property destination with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:destination]
building SimpleValue for destination
Building property destination
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightName]
building SimpleValue for flightName
Building property flightName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=seats_available, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsavailable with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:noofseatsavailable]
building SimpleValue for noofseatsavailable
Building property noofseatsavailable
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=source, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property source with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:source]
building SimpleValue for source
Building property source
Starting fillSimpleValue for id
Starting fillSimpleValue for emailId
Starting fillSimpleValue for mobileNo
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for role
Starting fillSimpleValue for ticketId
Starting fillSimpleValue for airlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Starting fillSimpleValue for flightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Starting fillSimpleValue for flightId
Starting fillSimpleValue for id
Starting fillSimpleValue for noofseatsbooked
Starting fillSimpleValue for flightId
Starting fillSimpleValue for arrivalDate
Starting fillSimpleValue for arrivalTime
Starting fillSimpleValue for departureDate
Starting fillSimpleValue for departureTime
Starting fillSimpleValue for destination
Starting fillSimpleValue for flightName
Starting fillSimpleValue for noofseatsavailable
Starting fillSimpleValue for source
Forcing column [id] to be non-null as it is part of the primary key for table [airline_users]
Forcing column [ticket_id] to be non-null as it is part of the primary key for table [booking_status]
Forcing column [flight_id] to be non-null as it is part of the primary key for table [flight_details]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: disabled
JPA compliance - query : 
JPA compliance - closed-handling : 
JPA compliance - lists : 
JPA compliance - transactions : 
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate\target\classes;C:\Users\DELL\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\DELL\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\DELL\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\DELL\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\DELL\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\DELL\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\DELL\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\DELL\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\DELL\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\DELL\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\DELL\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\DELL\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\DELL\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\DELL\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-entitymanager\5.4.2.Final\hibernate-entitymanager-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\projectlombok\lombok\1.18.8\lombok-1.18.8.jar;C:\Users\DELL\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, javax.persistence.jdbc.user=****, java.vm.specification.version=14, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.1\bin, sun.java.command=com.javafullstackfeb.airlinereservationsystem.controller.MainController, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\DELL, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=C:\Program Files\Java\jdk-14.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.1+7, user.name=DELL, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=TestPersistence, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\DELL\AppData\Local\Temp\, java.version=14.0.1, user.dir=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@328572f0, java.library.path=C:\Program Files\Java\jdk-14.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_251/bin/server;C:/Program Files/Java/jre1.8.0_251/bin;C:/Program Files/Java/jre1.8.0_251/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_251\bin;C:\Program Files\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\Users\DELL\AppData\Local\Microsoft\WindowsApps;;C:\Users\DELL\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.1+7, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@40c80397] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4a951911]
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
 Version select: select id from airline_users where id =?
 Snapshot select: select airlineuse_.id, airlineuse_.email_id as email_id2_0_, airlineuse_.mobile_no as mobile_n3_0_, airlineuse_.name as name4_0_, airlineuse_.password as password5_0_, airlineuse_.role as role6_0_ from airline_users airlineuse_ where airlineuse_.id=?
 Insert 0: insert into airline_users (email_id, mobile_no, name, password, role, id) values (?, ?, ?, ?, ?, ?)
 Update 0: update airline_users set email_id=?, mobile_no=?, name=?, password=?, role=? where id=?
 Delete 0: delete from airline_users where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@118102ee]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [NONE]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@186cb891]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [READ]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
 Version select: select ticket_id from booking_status where ticket_id =?
 Snapshot select: select bookingsta_.ticket_id, bookingsta_.airlineUsers as airlineU2_1_, bookingsta_.flightDetails as flightDe3_1_, bookingsta_.flight_id as flight_i4_1_, bookingsta_.id as id5_1_, bookingsta_.no_of_seats_booked as no_of_se6_1_ from booking_status bookingsta_ where bookingsta_.ticket_id=?
 Insert 0: insert into booking_status (airlineUsers, flightDetails, flight_id, id, no_of_seats_booked, ticket_id) values (?, ?, ?, ?, ?, ?)
 Update 0: update booking_status set airlineUsers=?, flightDetails=?, flight_id=?, id=?, no_of_seats_booked=? where ticket_id=?
 Delete 0: delete from booking_status where ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a8cbffe]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [NONE]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61e7bf2f]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [READ]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
 Version select: select flight_id from flight_details where flight_id =?
 Snapshot select: select flightdeta_.flight_id, flightdeta_.arrival_date as arrival_2_2_, flightdeta_.arrival_time as arrival_3_2_, flightdeta_.departure_date as departur4_2_, flightdeta_.departur_time as departur5_2_, flightdeta_.destination as destinat6_2_, flightdeta_.flight_name as flight_n7_2_, flightdeta_.seats_available as seats_av8_2_, flightdeta_.source as source9_2_ from flight_details flightdeta_ where flightdeta_.flight_id=?
 Insert 0: insert into flight_details (arrival_date, arrival_time, departure_date, departur_time, destination, flight_name, seats_available, source, flight_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update flight_details set arrival_date=?, arrival_time=?, departure_date=?, departur_time=?, destination=?, flight_name=?, seats_available=?, source=? where flight_id=?
 Delete 0: delete from flight_details where flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25e49cb2]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [NONE]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23382f76]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [READ]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6c42f2a1] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : airline_users

    
    alter table booking_status 
       add column airlineUsers tinyblob

    
    alter table booking_status 
       add column flightDetails tinyblob
No alter strings for table : flight_details
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5e048149
Registering SessionFactory: 565fd3e6-d5b4-4baf-9661-c386d7a54df0 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2d9dff65
parse() - HQL: Select f from com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails f where source=:source
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'javafullstackfeb'
    |  |     |  |  |  \-[IDENT] Node: 'airlinereservationsystem'
    |  |     |  |  \-[IDENT] Node: 'dto'
    |  |     |  \-[IDENT] Node: 'FlightDetails'
    |  |     \-[ALIAS] Node: 'f'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'f'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'source'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'source'

select << begin [level=1, statement=select]
FromClause{level=1} : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails (f) -> flightdeta0_
Resolved : f -> flightdeta0_.flight_id
Resolved : {synthetic-alias} -> {synthetic-alias}
getDataType() : source -> org.hibernate.type.StringType@69504ae9
Resolved : {synthetic-alias}.source -> flightdeta0_.source
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} flightdeta0_.flight_id ) ( FromClause{level=1} flight_details flightdeta0_ ) ( where ( = ( flightdeta0_.source {synthetic-alias} source ) ? ) ) )
Using FROM fragment [flight_details flightdeta0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (flight_details)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'flightdeta0_.flight_id as flight_i1_2_' {alias=f, className=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, tableAlias=flightdeta0_}
    |  \-[SQL_TOKEN] SqlFragment: 'flightdeta0_.arrival_date as arrival_2_2_, flightdeta0_.arrival_time as arrival_3_2_, flightdeta0_.departure_date as departur4_2_, flightdeta0_.departur_time as departur5_2_, flightdeta0_.destination as destinat6_2_, flightdeta0_.flight_name as flight_n7_2_, flightdeta0_.seats_available as seats_av8_2_, flightdeta0_.source as source9_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[f], fromElementByTableAlias=[flightdeta0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'flight_details flightdeta0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=f,role=null,tableName=flight_details,tableAlias=flightdeta0_,origin=null,columns={,className=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'flightdeta0_.source' {propertyName=source,dereferenceType=PRIMITIVE,getPropertyPath=source,path={synthetic-alias}.source,tableAlias=flightdeta0_,className=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails,classAlias=f}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'source' {originalText=source}
          \-[NAMED_PARAM] ParameterNode: '?' {name=source, expectedType=org.hibernate.type.StringType@69504ae9}

throwQueryException() : no errors
HQL: Select f from com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails f where source=:source
SQL: select flightdeta0_.flight_id as flight_i1_2_, flightdeta0_.arrival_date as arrival_2_2_, flightdeta0_.arrival_time as arrival_3_2_, flightdeta0_.departure_date as departur4_2_, flightdeta0_.departur_time as departur5_2_, flightdeta0_.destination as destinat6_2_, flightdeta0_.flight_name as flight_n7_2_, flightdeta0_.seats_available as seats_av8_2_, flightdeta0_.source as source9_2_ from flight_details flightdeta0_ where flightdeta0_.source=?
throwQueryException() : no errors

    select
        flightdeta0_.flight_id as flight_i1_2_,
        flightdeta0_.arrival_date as arrival_2_2_,
        flightdeta0_.arrival_time as arrival_3_2_,
        flightdeta0_.departure_date as departur4_2_,
        flightdeta0_.departur_time as departur5_2_,
        flightdeta0_.destination as destinat6_2_,
        flightdeta0_.flight_name as flight_n7_2_,
        flightdeta0_.seats_available as seats_av8_2_,
        flightdeta0_.source as source9_2_ 
    from
        flight_details flightdeta0_ 
    where
        flightdeta0_.source=?
Result set row: 0
Result row: EntityKey[com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2000]
Result set row: 1
Result row: EntityKey[com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2001]
Resolving associations for [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2000]
Done materializing entity [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2000]
Resolving associations for [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2001]
Done materializing entity [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2001]
Initiating JDBC connection release from afterTransaction
HHH000031: Closing
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@15405bd6] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4a951911]
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2000       Indigo        Vizag   to    Banglore        2020-07-08        09:00:00      2020-07-08     11:00:00    10(Seats Available)
2001       AirAsia        Vizag   to    Hyderabd        2020-12-01        08:00:00      2020-12-01     10:00:00    20(Seats Available)
************* Welcome To Airline Reservation System *************
1. Search Flight By Source
2. Search Flight By Destination
3. Search Flight By Name
4. View All Flight Details
5. Register
6. Login
Search flight by Destination : 
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=TestPersistence, explicit-provider=null] against incoming persistence unit name [TestPersistence]
No PersistenceProvider explicitly requested, assuming Hibernate
PersistenceUnitInfo [
	name: TestPersistence
	persistence provider classname: null
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/DELL/eclipse-workspace/airlinereservationsystemjpawithhibernate/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: rootpassword
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: update
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@2de56eb2
Adding type registration boolean -> org.hibernate.type.BooleanType@2de56eb2
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2de56eb2
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3cce5371
Adding type registration true_false -> org.hibernate.type.TrueFalseType@5b38c1ec
Adding type registration yes_no -> org.hibernate.type.YesNoType@55cb6996
Adding type registration byte -> org.hibernate.type.ByteType@38467116
Adding type registration byte -> org.hibernate.type.ByteType@38467116
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@38467116
Adding type registration character -> org.hibernate.type.CharacterType@5e7cd6cc
Adding type registration char -> org.hibernate.type.CharacterType@5e7cd6cc
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5e7cd6cc
Adding type registration short -> org.hibernate.type.ShortType@3feb2dda
Adding type registration short -> org.hibernate.type.ShortType@3feb2dda
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3feb2dda
Adding type registration integer -> org.hibernate.type.IntegerType@69c81773
Adding type registration int -> org.hibernate.type.IntegerType@69c81773
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@69c81773
Adding type registration long -> org.hibernate.type.LongType@5884a914
Adding type registration long -> org.hibernate.type.LongType@5884a914
Adding type registration java.lang.Long -> org.hibernate.type.LongType@5884a914
Adding type registration float -> org.hibernate.type.FloatType@aba625
Adding type registration float -> org.hibernate.type.FloatType@aba625
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@aba625
Adding type registration double -> org.hibernate.type.DoubleType@3932c79a
Adding type registration double -> org.hibernate.type.DoubleType@3932c79a
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3932c79a
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5db6b9cd
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5db6b9cd
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@58e1d9d
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@58e1d9d
Adding type registration string -> org.hibernate.type.StringType@69504ae9
Adding type registration java.lang.String -> org.hibernate.type.StringType@69504ae9
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7eecb5b8
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5c86a017
Adding type registration url -> org.hibernate.type.UrlType@4dc27487
Adding type registration java.net.URL -> org.hibernate.type.UrlType@4dc27487
Adding type registration Duration -> org.hibernate.type.DurationType@7dfb0c0f
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7dfb0c0f
Adding type registration Instant -> org.hibernate.type.InstantType@14bdbc74
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@14bdbc74
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@24c1b2d2
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@24c1b2d2
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1df8da7a
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1df8da7a
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1c9b0314
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1c9b0314
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f58853c
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f58853c
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@13d73f29
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@13d73f29
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5be1d0a4
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5be1d0a4
Adding type registration date -> org.hibernate.type.DateType@4470fbd6
Adding type registration java.sql.Date -> org.hibernate.type.DateType@4470fbd6
Adding type registration time -> org.hibernate.type.TimeType@3b6d844d
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3b6d844d
Adding type registration timestamp -> org.hibernate.type.TimestampType@4ee203eb
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4ee203eb
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4ee203eb
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3e78b6a5
Adding type registration calendar -> org.hibernate.type.CalendarType@18f8cd79
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@18f8cd79
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@18f8cd79
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6cc4cdb9
Adding type registration locale -> org.hibernate.type.LocaleType@6bb4dd34
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6bb4dd34
Adding type registration currency -> org.hibernate.type.CurrencyType@4a07d605
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4a07d605
Adding type registration timezone -> org.hibernate.type.TimeZoneType@68878f6d
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@68878f6d
Adding type registration class -> org.hibernate.type.ClassType@78fa769e
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@78fa769e
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@238d68ff
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@238d68ff
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@9cb8225
Adding type registration binary -> org.hibernate.type.BinaryType@7d61eb55
Adding type registration byte[] -> org.hibernate.type.BinaryType@7d61eb55
Adding type registration [B -> org.hibernate.type.BinaryType@7d61eb55
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@638ef7ed
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@638ef7ed
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@638ef7ed
Adding type registration row_version -> org.hibernate.type.RowVersionType@1f760b47
Adding type registration image -> org.hibernate.type.ImageType@33f676f6
Adding type registration characters -> org.hibernate.type.CharArrayType@81d9a72
Adding type registration char[] -> org.hibernate.type.CharArrayType@81d9a72
Adding type registration [C -> org.hibernate.type.CharArrayType@81d9a72
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@13df2a8c
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@13df2a8c
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@13df2a8c
Adding type registration text -> org.hibernate.type.TextType@7de62196
Adding type registration ntext -> org.hibernate.type.NTextType@35a3d49f
Adding type registration blob -> org.hibernate.type.BlobType@19b843ba
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@19b843ba
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e13529a
Adding type registration clob -> org.hibernate.type.ClobType@dc9876b
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@dc9876b
Adding type registration nclob -> org.hibernate.type.NClobType@3b5fad2d
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3b5fad2d
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@102cec62
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@43015c69
Adding type registration serializable -> org.hibernate.type.SerializableType@cd1e646
Adding type registration object -> org.hibernate.type.ObjectType@44be0077
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@44be0077
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3722c145
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4cbc2e3b
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2975a9e
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@765ffb14
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@57562473
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7a360554
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@424de326
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4bc33720
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@2dd0f797] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@67064bdc] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4a7fd0c9]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
HHH10001001: Connection properties: {password=rootpassword, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.47 ( Revision: fe1903b1ecb4a96a917f7ed3190d80c049b1de29 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@d7109be] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5e0ec41f]
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name AirlineUsers
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers on table airline_users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=email_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property emailId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:emailId]
building SimpleValue for emailId
Building property emailId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=mobile_no, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property mobileNo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:mobileNo]
building SimpleValue for mobileNo
Building property mobileNo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=role, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property role with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:role]
building SimpleValue for role
Building property role
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name BookingStatus
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus on table booking_status
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=ticket_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property ticketId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:ticketId]
building SimpleValue for ticketId
Building property ticketId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(ticket_id)]), ticketId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=airlineUsers, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property airlineUsers with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:airlineUsers]
building SimpleValue for airlineUsers
Building property airlineUsers
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flightDetails, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightDetails with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightDetails]
building SimpleValue for flightDetails
Building property flightDetails
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightId]
building SimpleValue for flightId
Building property flightId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=no_of_seats_booked, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsbooked with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:noofseatsbooked]
building SimpleValue for noofseatsbooked
Building property noofseatsbooked
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name FlightDetails
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails on table flight_details
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightId]
building SimpleValue for flightId
Building property flightId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(flight_id)]), flightId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalDate]
building SimpleValue for arrivalDate
Building property arrivalDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalTime]
building SimpleValue for arrivalTime
Building property arrivalTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departure_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureDate]
building SimpleValue for departureDate
Building property departureDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departur_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureTime]
building SimpleValue for departureTime
Building property departureTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=destination, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property destination with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:destination]
building SimpleValue for destination
Building property destination
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightName]
building SimpleValue for flightName
Building property flightName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=seats_available, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsavailable with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:noofseatsavailable]
building SimpleValue for noofseatsavailable
Building property noofseatsavailable
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=source, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property source with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:source]
building SimpleValue for source
Building property source
Starting fillSimpleValue for id
Starting fillSimpleValue for emailId
Starting fillSimpleValue for mobileNo
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for role
Starting fillSimpleValue for ticketId
Starting fillSimpleValue for airlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Starting fillSimpleValue for flightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Starting fillSimpleValue for flightId
Starting fillSimpleValue for id
Starting fillSimpleValue for noofseatsbooked
Starting fillSimpleValue for flightId
Starting fillSimpleValue for arrivalDate
Starting fillSimpleValue for arrivalTime
Starting fillSimpleValue for departureDate
Starting fillSimpleValue for departureTime
Starting fillSimpleValue for destination
Starting fillSimpleValue for flightName
Starting fillSimpleValue for noofseatsavailable
Starting fillSimpleValue for source
Forcing column [id] to be non-null as it is part of the primary key for table [airline_users]
Forcing column [ticket_id] to be non-null as it is part of the primary key for table [booking_status]
Forcing column [flight_id] to be non-null as it is part of the primary key for table [flight_details]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: disabled
JPA compliance - query : 
JPA compliance - closed-handling : 
JPA compliance - lists : 
JPA compliance - transactions : 
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate\target\classes;C:\Users\DELL\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\DELL\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\DELL\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\DELL\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\DELL\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\DELL\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\DELL\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\DELL\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\DELL\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\DELL\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\DELL\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\DELL\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\DELL\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\DELL\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-entitymanager\5.4.2.Final\hibernate-entitymanager-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\projectlombok\lombok\1.18.8\lombok-1.18.8.jar;C:\Users\DELL\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, javax.persistence.jdbc.user=****, java.vm.specification.version=14, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.1\bin, sun.java.command=com.javafullstackfeb.airlinereservationsystem.controller.MainController, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\DELL, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=C:\Program Files\Java\jdk-14.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.1+7, user.name=DELL, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=TestPersistence, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\DELL\AppData\Local\Temp\, java.version=14.0.1, user.dir=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2abe9173, java.library.path=C:\Program Files\Java\jdk-14.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_251/bin/server;C:/Program Files/Java/jre1.8.0_251/bin;C:/Program Files/Java/jre1.8.0_251/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_251\bin;C:\Program Files\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\Users\DELL\AppData\Local\Microsoft\WindowsApps;;C:\Users\DELL\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.1+7, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@d7109be] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@235d29d6]
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
 Version select: select id from airline_users where id =?
 Snapshot select: select airlineuse_.id, airlineuse_.email_id as email_id2_0_, airlineuse_.mobile_no as mobile_n3_0_, airlineuse_.name as name4_0_, airlineuse_.password as password5_0_, airlineuse_.role as role6_0_ from airline_users airlineuse_ where airlineuse_.id=?
 Insert 0: insert into airline_users (email_id, mobile_no, name, password, role, id) values (?, ?, ?, ?, ?, ?)
 Update 0: update airline_users set email_id=?, mobile_no=?, name=?, password=?, role=? where id=?
 Delete 0: delete from airline_users where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4317850d]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [NONE]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cd64b3f]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [READ]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
 Version select: select ticket_id from booking_status where ticket_id =?
 Snapshot select: select bookingsta_.ticket_id, bookingsta_.airlineUsers as airlineU2_1_, bookingsta_.flightDetails as flightDe3_1_, bookingsta_.flight_id as flight_i4_1_, bookingsta_.id as id5_1_, bookingsta_.no_of_seats_booked as no_of_se6_1_ from booking_status bookingsta_ where bookingsta_.ticket_id=?
 Insert 0: insert into booking_status (airlineUsers, flightDetails, flight_id, id, no_of_seats_booked, ticket_id) values (?, ?, ?, ?, ?, ?)
 Update 0: update booking_status set airlineUsers=?, flightDetails=?, flight_id=?, id=?, no_of_seats_booked=? where ticket_id=?
 Delete 0: delete from booking_status where ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ef0dd86]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [NONE]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6de6faa6]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [READ]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
 Version select: select flight_id from flight_details where flight_id =?
 Snapshot select: select flightdeta_.flight_id, flightdeta_.arrival_date as arrival_2_2_, flightdeta_.arrival_time as arrival_3_2_, flightdeta_.departure_date as departur4_2_, flightdeta_.departur_time as departur5_2_, flightdeta_.destination as destinat6_2_, flightdeta_.flight_name as flight_n7_2_, flightdeta_.seats_available as seats_av8_2_, flightdeta_.source as source9_2_ from flight_details flightdeta_ where flightdeta_.flight_id=?
 Insert 0: insert into flight_details (arrival_date, arrival_time, departure_date, departur_time, destination, flight_name, seats_available, source, flight_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update flight_details set arrival_date=?, arrival_time=?, departure_date=?, departur_time=?, destination=?, flight_name=?, seats_available=?, source=? where flight_id=?
 Delete 0: delete from flight_details where flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14998e21]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [NONE]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43c87306]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [READ]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6dab01d9] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : airline_users
No alter strings for table : booking_status
No alter strings for table : flight_details
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 47e1a40f-0ae9-49ac-8611-2a4e097c3ffc (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2d9dff65
parse() - HQL: Select f from com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails f where destination=:destination
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'javafullstackfeb'
    |  |     |  |  |  \-[IDENT] Node: 'airlinereservationsystem'
    |  |     |  |  \-[IDENT] Node: 'dto'
    |  |     |  \-[IDENT] Node: 'FlightDetails'
    |  |     \-[ALIAS] Node: 'f'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'f'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'destination'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'destination'

select << begin [level=1, statement=select]
FromClause{level=1} : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails (f) -> flightdeta0_
Resolved : f -> flightdeta0_.flight_id
Resolved : {synthetic-alias} -> {synthetic-alias}
getDataType() : destination -> org.hibernate.type.StringType@69504ae9
Resolved : {synthetic-alias}.destination -> flightdeta0_.destination
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} flightdeta0_.flight_id ) ( FromClause{level=1} flight_details flightdeta0_ ) ( where ( = ( flightdeta0_.destination {synthetic-alias} destination ) ? ) ) )
Using FROM fragment [flight_details flightdeta0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (flight_details)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'flightdeta0_.flight_id as flight_i1_2_' {alias=f, className=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, tableAlias=flightdeta0_}
    |  \-[SQL_TOKEN] SqlFragment: 'flightdeta0_.arrival_date as arrival_2_2_, flightdeta0_.arrival_time as arrival_3_2_, flightdeta0_.departure_date as departur4_2_, flightdeta0_.departur_time as departur5_2_, flightdeta0_.destination as destinat6_2_, flightdeta0_.flight_name as flight_n7_2_, flightdeta0_.seats_available as seats_av8_2_, flightdeta0_.source as source9_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[f], fromElementByTableAlias=[flightdeta0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'flight_details flightdeta0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=f,role=null,tableName=flight_details,tableAlias=flightdeta0_,origin=null,columns={,className=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'flightdeta0_.destination' {propertyName=destination,dereferenceType=PRIMITIVE,getPropertyPath=destination,path={synthetic-alias}.destination,tableAlias=flightdeta0_,className=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails,classAlias=f}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'destination' {originalText=destination}
          \-[NAMED_PARAM] ParameterNode: '?' {name=destination, expectedType=org.hibernate.type.StringType@69504ae9}

throwQueryException() : no errors
HQL: Select f from com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails f where destination=:destination
SQL: select flightdeta0_.flight_id as flight_i1_2_, flightdeta0_.arrival_date as arrival_2_2_, flightdeta0_.arrival_time as arrival_3_2_, flightdeta0_.departure_date as departur4_2_, flightdeta0_.departur_time as departur5_2_, flightdeta0_.destination as destinat6_2_, flightdeta0_.flight_name as flight_n7_2_, flightdeta0_.seats_available as seats_av8_2_, flightdeta0_.source as source9_2_ from flight_details flightdeta0_ where flightdeta0_.destination=?
throwQueryException() : no errors

    select
        flightdeta0_.flight_id as flight_i1_2_,
        flightdeta0_.arrival_date as arrival_2_2_,
        flightdeta0_.arrival_time as arrival_3_2_,
        flightdeta0_.departure_date as departur4_2_,
        flightdeta0_.departur_time as departur5_2_,
        flightdeta0_.destination as destinat6_2_,
        flightdeta0_.flight_name as flight_n7_2_,
        flightdeta0_.seats_available as seats_av8_2_,
        flightdeta0_.source as source9_2_ 
    from
        flight_details flightdeta0_ 
    where
        flightdeta0_.destination=?
Initiating JDBC connection release from afterTransaction
HHH000031: Closing
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@120d3fd] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@235d29d6]
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
************* Welcome To Airline Reservation System *************
1. Search Flight By Source
2. Search Flight By Destination
3. Search Flight By Name
4. View All Flight Details
5. Register
6. Login
 Search Flight by Name : 
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=TestPersistence, explicit-provider=null] against incoming persistence unit name [TestPersistence]
No PersistenceProvider explicitly requested, assuming Hibernate
PersistenceUnitInfo [
	name: TestPersistence
	persistence provider classname: null
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/DELL/eclipse-workspace/airlinereservationsystemjpawithhibernate/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: rootpassword
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: update
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@2de56eb2
Adding type registration boolean -> org.hibernate.type.BooleanType@2de56eb2
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2de56eb2
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3cce5371
Adding type registration true_false -> org.hibernate.type.TrueFalseType@5b38c1ec
Adding type registration yes_no -> org.hibernate.type.YesNoType@55cb6996
Adding type registration byte -> org.hibernate.type.ByteType@38467116
Adding type registration byte -> org.hibernate.type.ByteType@38467116
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@38467116
Adding type registration character -> org.hibernate.type.CharacterType@5e7cd6cc
Adding type registration char -> org.hibernate.type.CharacterType@5e7cd6cc
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5e7cd6cc
Adding type registration short -> org.hibernate.type.ShortType@3feb2dda
Adding type registration short -> org.hibernate.type.ShortType@3feb2dda
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3feb2dda
Adding type registration integer -> org.hibernate.type.IntegerType@69c81773
Adding type registration int -> org.hibernate.type.IntegerType@69c81773
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@69c81773
Adding type registration long -> org.hibernate.type.LongType@5884a914
Adding type registration long -> org.hibernate.type.LongType@5884a914
Adding type registration java.lang.Long -> org.hibernate.type.LongType@5884a914
Adding type registration float -> org.hibernate.type.FloatType@aba625
Adding type registration float -> org.hibernate.type.FloatType@aba625
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@aba625
Adding type registration double -> org.hibernate.type.DoubleType@3932c79a
Adding type registration double -> org.hibernate.type.DoubleType@3932c79a
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3932c79a
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5db6b9cd
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5db6b9cd
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@58e1d9d
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@58e1d9d
Adding type registration string -> org.hibernate.type.StringType@69504ae9
Adding type registration java.lang.String -> org.hibernate.type.StringType@69504ae9
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7eecb5b8
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5c86a017
Adding type registration url -> org.hibernate.type.UrlType@4dc27487
Adding type registration java.net.URL -> org.hibernate.type.UrlType@4dc27487
Adding type registration Duration -> org.hibernate.type.DurationType@7dfb0c0f
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7dfb0c0f
Adding type registration Instant -> org.hibernate.type.InstantType@14bdbc74
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@14bdbc74
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@24c1b2d2
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@24c1b2d2
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1df8da7a
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1df8da7a
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1c9b0314
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1c9b0314
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f58853c
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f58853c
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@13d73f29
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@13d73f29
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5be1d0a4
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5be1d0a4
Adding type registration date -> org.hibernate.type.DateType@4470fbd6
Adding type registration java.sql.Date -> org.hibernate.type.DateType@4470fbd6
Adding type registration time -> org.hibernate.type.TimeType@3b6d844d
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3b6d844d
Adding type registration timestamp -> org.hibernate.type.TimestampType@4ee203eb
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4ee203eb
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4ee203eb
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3e78b6a5
Adding type registration calendar -> org.hibernate.type.CalendarType@18f8cd79
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@18f8cd79
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@18f8cd79
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6cc4cdb9
Adding type registration locale -> org.hibernate.type.LocaleType@6bb4dd34
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6bb4dd34
Adding type registration currency -> org.hibernate.type.CurrencyType@4a07d605
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4a07d605
Adding type registration timezone -> org.hibernate.type.TimeZoneType@68878f6d
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@68878f6d
Adding type registration class -> org.hibernate.type.ClassType@78fa769e
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@78fa769e
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@238d68ff
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@238d68ff
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@9cb8225
Adding type registration binary -> org.hibernate.type.BinaryType@7d61eb55
Adding type registration byte[] -> org.hibernate.type.BinaryType@7d61eb55
Adding type registration [B -> org.hibernate.type.BinaryType@7d61eb55
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@638ef7ed
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@638ef7ed
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@638ef7ed
Adding type registration row_version -> org.hibernate.type.RowVersionType@1f760b47
Adding type registration image -> org.hibernate.type.ImageType@33f676f6
Adding type registration characters -> org.hibernate.type.CharArrayType@81d9a72
Adding type registration char[] -> org.hibernate.type.CharArrayType@81d9a72
Adding type registration [C -> org.hibernate.type.CharArrayType@81d9a72
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@13df2a8c
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@13df2a8c
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@13df2a8c
Adding type registration text -> org.hibernate.type.TextType@7de62196
Adding type registration ntext -> org.hibernate.type.NTextType@35a3d49f
Adding type registration blob -> org.hibernate.type.BlobType@19b843ba
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@19b843ba
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e13529a
Adding type registration clob -> org.hibernate.type.ClobType@dc9876b
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@dc9876b
Adding type registration nclob -> org.hibernate.type.NClobType@3b5fad2d
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3b5fad2d
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@102cec62
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@43015c69
Adding type registration serializable -> org.hibernate.type.SerializableType@cd1e646
Adding type registration object -> org.hibernate.type.ObjectType@44be0077
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@44be0077
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7c112f5f
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5961e92d
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4fd05028
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3a2d3909
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4fb392c4
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@194d329e
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@54d1608f
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7e7fe6d
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@541179e7] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@24386839] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7b32b129]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
HHH10001001: Connection properties: {password=rootpassword, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.47 ( Revision: fe1903b1ecb4a96a917f7ed3190d80c049b1de29 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4667c4c1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2f9a4401]
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name AirlineUsers
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers on table airline_users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=email_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property emailId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:emailId]
building SimpleValue for emailId
Building property emailId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=mobile_no, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property mobileNo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:mobileNo]
building SimpleValue for mobileNo
Building property mobileNo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=role, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property role with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:role]
building SimpleValue for role
Building property role
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name BookingStatus
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus on table booking_status
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=ticket_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property ticketId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:ticketId]
building SimpleValue for ticketId
Building property ticketId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(ticket_id)]), ticketId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=airlineUsers, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property airlineUsers with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:airlineUsers]
building SimpleValue for airlineUsers
Building property airlineUsers
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flightDetails, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightDetails with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightDetails]
building SimpleValue for flightDetails
Building property flightDetails
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightId]
building SimpleValue for flightId
Building property flightId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=no_of_seats_booked, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsbooked with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:noofseatsbooked]
building SimpleValue for noofseatsbooked
Building property noofseatsbooked
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name FlightDetails
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails on table flight_details
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightId]
building SimpleValue for flightId
Building property flightId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(flight_id)]), flightId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalDate]
building SimpleValue for arrivalDate
Building property arrivalDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalTime]
building SimpleValue for arrivalTime
Building property arrivalTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departure_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureDate]
building SimpleValue for departureDate
Building property departureDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departur_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureTime]
building SimpleValue for departureTime
Building property departureTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=destination, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property destination with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:destination]
building SimpleValue for destination
Building property destination
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightName]
building SimpleValue for flightName
Building property flightName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=seats_available, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsavailable with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:noofseatsavailable]
building SimpleValue for noofseatsavailable
Building property noofseatsavailable
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=source, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property source with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:source]
building SimpleValue for source
Building property source
Starting fillSimpleValue for id
Starting fillSimpleValue for emailId
Starting fillSimpleValue for mobileNo
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for role
Starting fillSimpleValue for ticketId
Starting fillSimpleValue for airlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Starting fillSimpleValue for flightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Starting fillSimpleValue for flightId
Starting fillSimpleValue for id
Starting fillSimpleValue for noofseatsbooked
Starting fillSimpleValue for flightId
Starting fillSimpleValue for arrivalDate
Starting fillSimpleValue for arrivalTime
Starting fillSimpleValue for departureDate
Starting fillSimpleValue for departureTime
Starting fillSimpleValue for destination
Starting fillSimpleValue for flightName
Starting fillSimpleValue for noofseatsavailable
Starting fillSimpleValue for source
Forcing column [id] to be non-null as it is part of the primary key for table [airline_users]
Forcing column [ticket_id] to be non-null as it is part of the primary key for table [booking_status]
Forcing column [flight_id] to be non-null as it is part of the primary key for table [flight_details]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: disabled
JPA compliance - query : 
JPA compliance - closed-handling : 
JPA compliance - lists : 
JPA compliance - transactions : 
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate\target\classes;C:\Users\DELL\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\DELL\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\DELL\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\DELL\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\DELL\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\DELL\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\DELL\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\DELL\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\DELL\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\DELL\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\DELL\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\DELL\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\DELL\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\DELL\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-entitymanager\5.4.2.Final\hibernate-entitymanager-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\projectlombok\lombok\1.18.8\lombok-1.18.8.jar;C:\Users\DELL\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, javax.persistence.jdbc.user=****, java.vm.specification.version=14, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.1\bin, sun.java.command=com.javafullstackfeb.airlinereservationsystem.controller.MainController, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\DELL, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=C:\Program Files\Java\jdk-14.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.1+7, user.name=DELL, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=TestPersistence, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\DELL\AppData\Local\Temp\, java.version=14.0.1, user.dir=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@23a918c7, java.library.path=C:\Program Files\Java\jdk-14.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_251/bin/server;C:/Program Files/Java/jre1.8.0_251/bin;C:/Program Files/Java/jre1.8.0_251/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_251\bin;C:\Program Files\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\Users\DELL\AppData\Local\Microsoft\WindowsApps;;C:\Users\DELL\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.1+7, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4667c4c1] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7a45d714]
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
 Version select: select id from airline_users where id =?
 Snapshot select: select airlineuse_.id, airlineuse_.email_id as email_id2_0_, airlineuse_.mobile_no as mobile_n3_0_, airlineuse_.name as name4_0_, airlineuse_.password as password5_0_, airlineuse_.role as role6_0_ from airline_users airlineuse_ where airlineuse_.id=?
 Insert 0: insert into airline_users (email_id, mobile_no, name, password, role, id) values (?, ?, ?, ?, ?, ?)
 Update 0: update airline_users set email_id=?, mobile_no=?, name=?, password=?, role=? where id=?
 Delete 0: delete from airline_users where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5377414a]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [NONE]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17aa8a11]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [READ]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
 Version select: select ticket_id from booking_status where ticket_id =?
 Snapshot select: select bookingsta_.ticket_id, bookingsta_.airlineUsers as airlineU2_1_, bookingsta_.flightDetails as flightDe3_1_, bookingsta_.flight_id as flight_i4_1_, bookingsta_.id as id5_1_, bookingsta_.no_of_seats_booked as no_of_se6_1_ from booking_status bookingsta_ where bookingsta_.ticket_id=?
 Insert 0: insert into booking_status (airlineUsers, flightDetails, flight_id, id, no_of_seats_booked, ticket_id) values (?, ?, ?, ?, ?, ?)
 Update 0: update booking_status set airlineUsers=?, flightDetails=?, flight_id=?, id=?, no_of_seats_booked=? where ticket_id=?
 Delete 0: delete from booking_status where ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18a25bbd]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [NONE]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ee27d73]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [READ]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
 Version select: select flight_id from flight_details where flight_id =?
 Snapshot select: select flightdeta_.flight_id, flightdeta_.arrival_date as arrival_2_2_, flightdeta_.arrival_time as arrival_3_2_, flightdeta_.departure_date as departur4_2_, flightdeta_.departur_time as departur5_2_, flightdeta_.destination as destinat6_2_, flightdeta_.flight_name as flight_n7_2_, flightdeta_.seats_available as seats_av8_2_, flightdeta_.source as source9_2_ from flight_details flightdeta_ where flightdeta_.flight_id=?
 Insert 0: insert into flight_details (arrival_date, arrival_time, departure_date, departur_time, destination, flight_name, seats_available, source, flight_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update flight_details set arrival_date=?, arrival_time=?, departure_date=?, departur_time=?, destination=?, flight_name=?, seats_available=?, source=? where flight_id=?
 Delete 0: delete from flight_details where flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5807efad]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [NONE]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ce85af2]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [READ]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1e60b459] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : airline_users
No alter strings for table : booking_status
No alter strings for table : flight_details
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: d5f7454b-d7f4-45b6-abe4-87c99d0541f3 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2d9dff65
parse() - HQL: Select f from com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails f where flightName=:name
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'javafullstackfeb'
    |  |     |  |  |  \-[IDENT] Node: 'airlinereservationsystem'
    |  |     |  |  \-[IDENT] Node: 'dto'
    |  |     |  \-[IDENT] Node: 'FlightDetails'
    |  |     \-[ALIAS] Node: 'f'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'f'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'flightName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'name'

select << begin [level=1, statement=select]
FromClause{level=1} : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails (f) -> flightdeta0_
Resolved : f -> flightdeta0_.flight_id
Resolved : {synthetic-alias} -> {synthetic-alias}
getDataType() : flightName -> org.hibernate.type.StringType@69504ae9
Resolved : {synthetic-alias}.flightName -> flightdeta0_.flight_name
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} flightdeta0_.flight_id ) ( FromClause{level=1} flight_details flightdeta0_ ) ( where ( = ( flightdeta0_.flight_name {synthetic-alias} flightName ) ? ) ) )
Using FROM fragment [flight_details flightdeta0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (flight_details)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'flightdeta0_.flight_id as flight_i1_2_' {alias=f, className=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, tableAlias=flightdeta0_}
    |  \-[SQL_TOKEN] SqlFragment: 'flightdeta0_.arrival_date as arrival_2_2_, flightdeta0_.arrival_time as arrival_3_2_, flightdeta0_.departure_date as departur4_2_, flightdeta0_.departur_time as departur5_2_, flightdeta0_.destination as destinat6_2_, flightdeta0_.flight_name as flight_n7_2_, flightdeta0_.seats_available as seats_av8_2_, flightdeta0_.source as source9_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[f], fromElementByTableAlias=[flightdeta0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'flight_details flightdeta0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=f,role=null,tableName=flight_details,tableAlias=flightdeta0_,origin=null,columns={,className=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'flightdeta0_.flight_name' {propertyName=flightName,dereferenceType=PRIMITIVE,getPropertyPath=flightName,path={synthetic-alias}.flightName,tableAlias=flightdeta0_,className=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails,classAlias=f}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'flightName' {originalText=flightName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=name, expectedType=org.hibernate.type.StringType@69504ae9}

throwQueryException() : no errors
HQL: Select f from com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails f where flightName=:name
SQL: select flightdeta0_.flight_id as flight_i1_2_, flightdeta0_.arrival_date as arrival_2_2_, flightdeta0_.arrival_time as arrival_3_2_, flightdeta0_.departure_date as departur4_2_, flightdeta0_.departur_time as departur5_2_, flightdeta0_.destination as destinat6_2_, flightdeta0_.flight_name as flight_n7_2_, flightdeta0_.seats_available as seats_av8_2_, flightdeta0_.source as source9_2_ from flight_details flightdeta0_ where flightdeta0_.flight_name=?
throwQueryException() : no errors

    select
        flightdeta0_.flight_id as flight_i1_2_,
        flightdeta0_.arrival_date as arrival_2_2_,
        flightdeta0_.arrival_time as arrival_3_2_,
        flightdeta0_.departure_date as departur4_2_,
        flightdeta0_.departur_time as departur5_2_,
        flightdeta0_.destination as destinat6_2_,
        flightdeta0_.flight_name as flight_n7_2_,
        flightdeta0_.seats_available as seats_av8_2_,
        flightdeta0_.source as source9_2_ 
    from
        flight_details flightdeta0_ 
    where
        flightdeta0_.flight_name=?
Result set row: 0
Result row: EntityKey[com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2000]
Resolving associations for [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2000]
Done materializing entity [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2000]
Initiating JDBC connection release from afterTransaction
HHH000031: Closing
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@254449bb] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7a45d714]
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2000       Indigo        Vizag   to    Banglore        2020-07-08        09:00:00      2020-07-08     11:00:00    10(Seats Available)
************* Welcome To Airline Reservation System *************
1. Search Flight By Source
2. Search Flight By Destination
3. Search Flight By Name
4. View All Flight Details
5. Register
6. Login
Enter ID : 
Enter Your Name : 
Enter Your MobileNumber : 
Enter Email to Register : 
************* Welcome To Airline Reservation System *************
1. Search Flight By Source
2. Search Flight By Destination
3. Search Flight By Name
4. View All Flight Details
5. Register
6. Login
Search Flight Details by Source : 
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=TestPersistence, explicit-provider=null] against incoming persistence unit name [TestPersistence]
No PersistenceProvider explicitly requested, assuming Hibernate
PersistenceUnitInfo [
	name: TestPersistence
	persistence provider classname: null
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/DELL/eclipse-workspace/airlinereservationsystemjpawithhibernate/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: rootpassword
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false
		hibernate.hbm2ddl.auto: update
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate Core {5.4.2.Final}
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@2de56eb2
Adding type registration boolean -> org.hibernate.type.BooleanType@2de56eb2
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2de56eb2
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3cce5371
Adding type registration true_false -> org.hibernate.type.TrueFalseType@5b38c1ec
Adding type registration yes_no -> org.hibernate.type.YesNoType@55cb6996
Adding type registration byte -> org.hibernate.type.ByteType@38467116
Adding type registration byte -> org.hibernate.type.ByteType@38467116
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@38467116
Adding type registration character -> org.hibernate.type.CharacterType@5e7cd6cc
Adding type registration char -> org.hibernate.type.CharacterType@5e7cd6cc
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5e7cd6cc
Adding type registration short -> org.hibernate.type.ShortType@3feb2dda
Adding type registration short -> org.hibernate.type.ShortType@3feb2dda
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3feb2dda
Adding type registration integer -> org.hibernate.type.IntegerType@69c81773
Adding type registration int -> org.hibernate.type.IntegerType@69c81773
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@69c81773
Adding type registration long -> org.hibernate.type.LongType@5884a914
Adding type registration long -> org.hibernate.type.LongType@5884a914
Adding type registration java.lang.Long -> org.hibernate.type.LongType@5884a914
Adding type registration float -> org.hibernate.type.FloatType@aba625
Adding type registration float -> org.hibernate.type.FloatType@aba625
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@aba625
Adding type registration double -> org.hibernate.type.DoubleType@3932c79a
Adding type registration double -> org.hibernate.type.DoubleType@3932c79a
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3932c79a
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5db6b9cd
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5db6b9cd
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@58e1d9d
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@58e1d9d
Adding type registration string -> org.hibernate.type.StringType@69504ae9
Adding type registration java.lang.String -> org.hibernate.type.StringType@69504ae9
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7eecb5b8
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5c86a017
Adding type registration url -> org.hibernate.type.UrlType@4dc27487
Adding type registration java.net.URL -> org.hibernate.type.UrlType@4dc27487
Adding type registration Duration -> org.hibernate.type.DurationType@7dfb0c0f
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7dfb0c0f
Adding type registration Instant -> org.hibernate.type.InstantType@14bdbc74
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@14bdbc74
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@24c1b2d2
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@24c1b2d2
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1df8da7a
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1df8da7a
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1c9b0314
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1c9b0314
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f58853c
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f58853c
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@13d73f29
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@13d73f29
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5be1d0a4
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5be1d0a4
Adding type registration date -> org.hibernate.type.DateType@4470fbd6
Adding type registration java.sql.Date -> org.hibernate.type.DateType@4470fbd6
Adding type registration time -> org.hibernate.type.TimeType@3b6d844d
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3b6d844d
Adding type registration timestamp -> org.hibernate.type.TimestampType@4ee203eb
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4ee203eb
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4ee203eb
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3e78b6a5
Adding type registration calendar -> org.hibernate.type.CalendarType@18f8cd79
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@18f8cd79
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@18f8cd79
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6cc4cdb9
Adding type registration locale -> org.hibernate.type.LocaleType@6bb4dd34
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6bb4dd34
Adding type registration currency -> org.hibernate.type.CurrencyType@4a07d605
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4a07d605
Adding type registration timezone -> org.hibernate.type.TimeZoneType@68878f6d
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@68878f6d
Adding type registration class -> org.hibernate.type.ClassType@78fa769e
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@78fa769e
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@238d68ff
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@238d68ff
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@9cb8225
Adding type registration binary -> org.hibernate.type.BinaryType@7d61eb55
Adding type registration byte[] -> org.hibernate.type.BinaryType@7d61eb55
Adding type registration [B -> org.hibernate.type.BinaryType@7d61eb55
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@638ef7ed
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@638ef7ed
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@638ef7ed
Adding type registration row_version -> org.hibernate.type.RowVersionType@1f760b47
Adding type registration image -> org.hibernate.type.ImageType@33f676f6
Adding type registration characters -> org.hibernate.type.CharArrayType@81d9a72
Adding type registration char[] -> org.hibernate.type.CharArrayType@81d9a72
Adding type registration [C -> org.hibernate.type.CharArrayType@81d9a72
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@13df2a8c
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@13df2a8c
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@13df2a8c
Adding type registration text -> org.hibernate.type.TextType@7de62196
Adding type registration ntext -> org.hibernate.type.NTextType@35a3d49f
Adding type registration blob -> org.hibernate.type.BlobType@19b843ba
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@19b843ba
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e13529a
Adding type registration clob -> org.hibernate.type.ClobType@dc9876b
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@dc9876b
Adding type registration nclob -> org.hibernate.type.NClobType@3b5fad2d
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3b5fad2d
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@102cec62
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@43015c69
Adding type registration serializable -> org.hibernate.type.SerializableType@cd1e646
Adding type registration object -> org.hibernate.type.ObjectType@44be0077
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@44be0077
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5e21e98f
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@51a9ad5e
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5f20155b
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@72ade7e3
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@239105a8
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3fce8fd9
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@609bcfb6
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7d94beb9
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@5d43661b] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@12299890] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2fba3fc4]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
HHH10001001: Connection properties: {password=rootpassword, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.47 ( Revision: fe1903b1ecb4a96a917f7ed3190d80c049b1de29 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@40c80397] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4b672daa]
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name AirlineUsers
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers on table airline_users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=email_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property emailId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:emailId]
building SimpleValue for emailId
Building property emailId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=mobile_no, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property mobileNo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:mobileNo]
building SimpleValue for mobileNo
Building property mobileNo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=role, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property role with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:role]
building SimpleValue for role
Building property role
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name BookingStatus
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus on table booking_status
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=ticket_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property ticketId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:ticketId]
building SimpleValue for ticketId
Building property ticketId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(ticket_id)]), ticketId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=airlineUsers, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property airlineUsers with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:airlineUsers]
building SimpleValue for airlineUsers
Building property airlineUsers
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flightDetails, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightDetails with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightDetails]
building SimpleValue for flightDetails
Building property flightDetails
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightId]
building SimpleValue for flightId
Building property flightId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=no_of_seats_booked, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsbooked with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:noofseatsbooked]
building SimpleValue for noofseatsbooked
Building property noofseatsbooked
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name FlightDetails
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails on table flight_details
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightId]
building SimpleValue for flightId
Building property flightId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(flight_id)]), flightId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalDate]
building SimpleValue for arrivalDate
Building property arrivalDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalTime]
building SimpleValue for arrivalTime
Building property arrivalTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departure_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureDate]
building SimpleValue for departureDate
Building property departureDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departur_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureTime]
building SimpleValue for departureTime
Building property departureTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=destination, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property destination with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:destination]
building SimpleValue for destination
Building property destination
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightName]
building SimpleValue for flightName
Building property flightName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=seats_available, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsavailable with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:noofseatsavailable]
building SimpleValue for noofseatsavailable
Building property noofseatsavailable
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=source, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property source with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:source]
building SimpleValue for source
Building property source
Starting fillSimpleValue for id
Starting fillSimpleValue for emailId
Starting fillSimpleValue for mobileNo
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for role
Starting fillSimpleValue for ticketId
Starting fillSimpleValue for airlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Starting fillSimpleValue for flightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Starting fillSimpleValue for flightId
Starting fillSimpleValue for id
Starting fillSimpleValue for noofseatsbooked
Starting fillSimpleValue for flightId
Starting fillSimpleValue for arrivalDate
Starting fillSimpleValue for arrivalTime
Starting fillSimpleValue for departureDate
Starting fillSimpleValue for departureTime
Starting fillSimpleValue for destination
Starting fillSimpleValue for flightName
Starting fillSimpleValue for noofseatsavailable
Starting fillSimpleValue for source
Forcing column [id] to be non-null as it is part of the primary key for table [airline_users]
Forcing column [ticket_id] to be non-null as it is part of the primary key for table [booking_status]
Forcing column [flight_id] to be non-null as it is part of the primary key for table [flight_details]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: disabled
JPA compliance - query : 
JPA compliance - closed-handling : 
JPA compliance - lists : 
JPA compliance - transactions : 
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate\target\classes;C:\Users\DELL\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\DELL\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\DELL\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\DELL\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\DELL\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\DELL\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\DELL\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\DELL\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\DELL\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\DELL\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\DELL\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\DELL\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\DELL\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\DELL\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-entitymanager\5.4.2.Final\hibernate-entitymanager-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\projectlombok\lombok\1.18.8\lombok-1.18.8.jar;C:\Users\DELL\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, javax.persistence.jdbc.user=****, java.vm.specification.version=14, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.1\bin, sun.java.command=com.javafullstackfeb.airlinereservationsystem.controller.MainController, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\DELL, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=C:\Program Files\Java\jdk-14.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.1+7, user.name=DELL, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=TestPersistence, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\DELL\AppData\Local\Temp\, java.version=14.0.1, user.dir=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@328572f0, java.library.path=C:\Program Files\Java\jdk-14.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_251/bin/server;C:/Program Files/Java/jre1.8.0_251/bin;C:/Program Files/Java/jre1.8.0_251/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_251\bin;C:\Program Files\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\Users\DELL\AppData\Local\Microsoft\WindowsApps;;C:\Users\DELL\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.1+7, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@40c80397] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4a951911]
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
 Version select: select id from airline_users where id =?
 Snapshot select: select airlineuse_.id, airlineuse_.email_id as email_id2_0_, airlineuse_.mobile_no as mobile_n3_0_, airlineuse_.name as name4_0_, airlineuse_.password as password5_0_, airlineuse_.role as role6_0_ from airline_users airlineuse_ where airlineuse_.id=?
 Insert 0: insert into airline_users (email_id, mobile_no, name, password, role, id) values (?, ?, ?, ?, ?, ?)
 Update 0: update airline_users set email_id=?, mobile_no=?, name=?, password=?, role=? where id=?
 Delete 0: delete from airline_users where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@118102ee]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [NONE]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@186cb891]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [READ]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
 Version select: select ticket_id from booking_status where ticket_id =?
 Snapshot select: select bookingsta_.ticket_id, bookingsta_.airlineUsers as airlineU2_1_, bookingsta_.flightDetails as flightDe3_1_, bookingsta_.flight_id as flight_i4_1_, bookingsta_.id as id5_1_, bookingsta_.no_of_seats_booked as no_of_se6_1_ from booking_status bookingsta_ where bookingsta_.ticket_id=?
 Insert 0: insert into booking_status (airlineUsers, flightDetails, flight_id, id, no_of_seats_booked, ticket_id) values (?, ?, ?, ?, ?, ?)
 Update 0: update booking_status set airlineUsers=?, flightDetails=?, flight_id=?, id=?, no_of_seats_booked=? where ticket_id=?
 Delete 0: delete from booking_status where ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a8cbffe]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [NONE]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61e7bf2f]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [READ]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
 Version select: select flight_id from flight_details where flight_id =?
 Snapshot select: select flightdeta_.flight_id, flightdeta_.arrival_date as arrival_2_2_, flightdeta_.arrival_time as arrival_3_2_, flightdeta_.departure_date as departur4_2_, flightdeta_.departur_time as departur5_2_, flightdeta_.destination as destinat6_2_, flightdeta_.flight_name as flight_n7_2_, flightdeta_.seats_available as seats_av8_2_, flightdeta_.source as source9_2_ from flight_details flightdeta_ where flightdeta_.flight_id=?
 Insert 0: insert into flight_details (arrival_date, arrival_time, departure_date, departur_time, destination, flight_name, seats_available, source, flight_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update flight_details set arrival_date=?, arrival_time=?, departure_date=?, departur_time=?, destination=?, flight_name=?, seats_available=?, source=? where flight_id=?
 Delete 0: delete from flight_details where flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25e49cb2]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [NONE]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23382f76]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [READ]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6c42f2a1] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : airline_users
No alter strings for table : booking_status
No alter strings for table : flight_details
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4d8286c4
Registering SessionFactory: cc68c910-fd3e-461c-a39b-d1f6409a4880 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7e19755a
parse() - HQL: Select f from com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails f where source=:source
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'javafullstackfeb'
    |  |     |  |  |  \-[IDENT] Node: 'airlinereservationsystem'
    |  |     |  |  \-[IDENT] Node: 'dto'
    |  |     |  \-[IDENT] Node: 'FlightDetails'
    |  |     \-[ALIAS] Node: 'f'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'f'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'source'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'source'

select << begin [level=1, statement=select]
FromClause{level=1} : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails (f) -> flightdeta0_
Resolved : f -> flightdeta0_.flight_id
Resolved : {synthetic-alias} -> {synthetic-alias}
getDataType() : source -> org.hibernate.type.StringType@69504ae9
Resolved : {synthetic-alias}.source -> flightdeta0_.source
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} flightdeta0_.flight_id ) ( FromClause{level=1} flight_details flightdeta0_ ) ( where ( = ( flightdeta0_.source {synthetic-alias} source ) ? ) ) )
Using FROM fragment [flight_details flightdeta0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (flight_details)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'flightdeta0_.flight_id as flight_i1_2_' {alias=f, className=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, tableAlias=flightdeta0_}
    |  \-[SQL_TOKEN] SqlFragment: 'flightdeta0_.arrival_date as arrival_2_2_, flightdeta0_.arrival_time as arrival_3_2_, flightdeta0_.departure_date as departur4_2_, flightdeta0_.departur_time as departur5_2_, flightdeta0_.destination as destinat6_2_, flightdeta0_.flight_name as flight_n7_2_, flightdeta0_.seats_available as seats_av8_2_, flightdeta0_.source as source9_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[f], fromElementByTableAlias=[flightdeta0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'flight_details flightdeta0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=f,role=null,tableName=flight_details,tableAlias=flightdeta0_,origin=null,columns={,className=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'flightdeta0_.source' {propertyName=source,dereferenceType=PRIMITIVE,getPropertyPath=source,path={synthetic-alias}.source,tableAlias=flightdeta0_,className=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails,classAlias=f}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'source' {originalText=source}
          \-[NAMED_PARAM] ParameterNode: '?' {name=source, expectedType=org.hibernate.type.StringType@69504ae9}

throwQueryException() : no errors
HQL: Select f from com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails f where source=:source
SQL: select flightdeta0_.flight_id as flight_i1_2_, flightdeta0_.arrival_date as arrival_2_2_, flightdeta0_.arrival_time as arrival_3_2_, flightdeta0_.departure_date as departur4_2_, flightdeta0_.departur_time as departur5_2_, flightdeta0_.destination as destinat6_2_, flightdeta0_.flight_name as flight_n7_2_, flightdeta0_.seats_available as seats_av8_2_, flightdeta0_.source as source9_2_ from flight_details flightdeta0_ where flightdeta0_.source=?
throwQueryException() : no errors

    select
        flightdeta0_.flight_id as flight_i1_2_,
        flightdeta0_.arrival_date as arrival_2_2_,
        flightdeta0_.arrival_time as arrival_3_2_,
        flightdeta0_.departure_date as departur4_2_,
        flightdeta0_.departur_time as departur5_2_,
        flightdeta0_.destination as destinat6_2_,
        flightdeta0_.flight_name as flight_n7_2_,
        flightdeta0_.seats_available as seats_av8_2_,
        flightdeta0_.source as source9_2_ 
    from
        flight_details flightdeta0_ 
    where
        flightdeta0_.source=?
Result set row: 0
Result row: EntityKey[com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2000]
Result set row: 1
Result row: EntityKey[com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2001]
Resolving associations for [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2000]
Done materializing entity [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2000]
Resolving associations for [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2001]
Done materializing entity [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2001]
Initiating JDBC connection release from afterTransaction
HHH000031: Closing
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4af45442] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4a951911]
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2000       Indigo        Vizag   to    Banglore        2020-07-08        09:00:00      2020-07-08     11:00:00    10(Seats Available)
2001       AirAsia        Vizag   to    Hyderabd        2020-12-01        08:00:00      2020-12-01     10:00:00    20(Seats Available)
************* Welcome To Airline Reservation System *************
1. Search Flight By Source
2. Search Flight By Destination
3. Search Flight By Name
4. View All Flight Details
5. Register
6. Login
************* Welcome To Airline Reservation System *************
1. Search Flight By Source
2. Search Flight By Destination
3. Search Flight By Name
4. View All Flight Details
5. Register
6. Login
Search Flight Details by Source : 
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=TestPersistence, explicit-provider=null] against incoming persistence unit name [TestPersistence]
No PersistenceProvider explicitly requested, assuming Hibernate
PersistenceUnitInfo [
	name: TestPersistence
	persistence provider classname: null
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/DELL/eclipse-workspace/airlinereservationsystemjpawithhibernate/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: rootpassword
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false
		javax.persistence.jdbc.user: root]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate Core {5.4.2.Final}
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@2de56eb2
Adding type registration boolean -> org.hibernate.type.BooleanType@2de56eb2
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2de56eb2
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3cce5371
Adding type registration true_false -> org.hibernate.type.TrueFalseType@5b38c1ec
Adding type registration yes_no -> org.hibernate.type.YesNoType@55cb6996
Adding type registration byte -> org.hibernate.type.ByteType@38467116
Adding type registration byte -> org.hibernate.type.ByteType@38467116
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@38467116
Adding type registration character -> org.hibernate.type.CharacterType@5e7cd6cc
Adding type registration char -> org.hibernate.type.CharacterType@5e7cd6cc
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5e7cd6cc
Adding type registration short -> org.hibernate.type.ShortType@3feb2dda
Adding type registration short -> org.hibernate.type.ShortType@3feb2dda
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3feb2dda
Adding type registration integer -> org.hibernate.type.IntegerType@69c81773
Adding type registration int -> org.hibernate.type.IntegerType@69c81773
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@69c81773
Adding type registration long -> org.hibernate.type.LongType@5884a914
Adding type registration long -> org.hibernate.type.LongType@5884a914
Adding type registration java.lang.Long -> org.hibernate.type.LongType@5884a914
Adding type registration float -> org.hibernate.type.FloatType@aba625
Adding type registration float -> org.hibernate.type.FloatType@aba625
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@aba625
Adding type registration double -> org.hibernate.type.DoubleType@3932c79a
Adding type registration double -> org.hibernate.type.DoubleType@3932c79a
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3932c79a
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5db6b9cd
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5db6b9cd
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@58e1d9d
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@58e1d9d
Adding type registration string -> org.hibernate.type.StringType@69504ae9
Adding type registration java.lang.String -> org.hibernate.type.StringType@69504ae9
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7eecb5b8
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5c86a017
Adding type registration url -> org.hibernate.type.UrlType@4dc27487
Adding type registration java.net.URL -> org.hibernate.type.UrlType@4dc27487
Adding type registration Duration -> org.hibernate.type.DurationType@7dfb0c0f
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7dfb0c0f
Adding type registration Instant -> org.hibernate.type.InstantType@14bdbc74
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@14bdbc74
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@24c1b2d2
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@24c1b2d2
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1df8da7a
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1df8da7a
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1c9b0314
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1c9b0314
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f58853c
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f58853c
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@13d73f29
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@13d73f29
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5be1d0a4
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5be1d0a4
Adding type registration date -> org.hibernate.type.DateType@4470fbd6
Adding type registration java.sql.Date -> org.hibernate.type.DateType@4470fbd6
Adding type registration time -> org.hibernate.type.TimeType@3b6d844d
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3b6d844d
Adding type registration timestamp -> org.hibernate.type.TimestampType@4ee203eb
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4ee203eb
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4ee203eb
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3e78b6a5
Adding type registration calendar -> org.hibernate.type.CalendarType@18f8cd79
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@18f8cd79
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@18f8cd79
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6cc4cdb9
Adding type registration locale -> org.hibernate.type.LocaleType@6bb4dd34
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6bb4dd34
Adding type registration currency -> org.hibernate.type.CurrencyType@4a07d605
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4a07d605
Adding type registration timezone -> org.hibernate.type.TimeZoneType@68878f6d
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@68878f6d
Adding type registration class -> org.hibernate.type.ClassType@78fa769e
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@78fa769e
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@238d68ff
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@238d68ff
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@9cb8225
Adding type registration binary -> org.hibernate.type.BinaryType@7d61eb55
Adding type registration byte[] -> org.hibernate.type.BinaryType@7d61eb55
Adding type registration [B -> org.hibernate.type.BinaryType@7d61eb55
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@638ef7ed
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@638ef7ed
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@638ef7ed
Adding type registration row_version -> org.hibernate.type.RowVersionType@1f760b47
Adding type registration image -> org.hibernate.type.ImageType@33f676f6
Adding type registration characters -> org.hibernate.type.CharArrayType@81d9a72
Adding type registration char[] -> org.hibernate.type.CharArrayType@81d9a72
Adding type registration [C -> org.hibernate.type.CharArrayType@81d9a72
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@13df2a8c
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@13df2a8c
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@13df2a8c
Adding type registration text -> org.hibernate.type.TextType@7de62196
Adding type registration ntext -> org.hibernate.type.NTextType@35a3d49f
Adding type registration blob -> org.hibernate.type.BlobType@19b843ba
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@19b843ba
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e13529a
Adding type registration clob -> org.hibernate.type.ClobType@dc9876b
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@dc9876b
Adding type registration nclob -> org.hibernate.type.NClobType@3b5fad2d
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3b5fad2d
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@102cec62
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@43015c69
Adding type registration serializable -> org.hibernate.type.SerializableType@cd1e646
Adding type registration object -> org.hibernate.type.ObjectType@44be0077
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@44be0077
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5e21e98f
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@51a9ad5e
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5f20155b
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@72ade7e3
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@239105a8
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3fce8fd9
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@609bcfb6
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7d94beb9
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@5d43661b] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@12299890] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2fba3fc4]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
HHH10001001: Connection properties: {password=rootpassword, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.47 ( Revision: fe1903b1ecb4a96a917f7ed3190d80c049b1de29 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@40c80397] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4b672daa]
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name AirlineUsers
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers on table airline_users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=email_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property emailId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:emailId]
building SimpleValue for emailId
Building property emailId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=mobile_no, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property mobileNo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:mobileNo]
building SimpleValue for mobileNo
Building property mobileNo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=role, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property role with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:role]
building SimpleValue for role
Building property role
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name BookingStatus
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus on table booking_status
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=ticket_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property ticketId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:ticketId]
building SimpleValue for ticketId
Building property ticketId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(ticket_id)]), ticketId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=airlineUsers, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property airlineUsers with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:airlineUsers]
building SimpleValue for airlineUsers
Building property airlineUsers
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flightDetails, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightDetails with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightDetails]
building SimpleValue for flightDetails
Building property flightDetails
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightId]
building SimpleValue for flightId
Building property flightId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=no_of_seats_booked, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsbooked with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:noofseatsbooked]
building SimpleValue for noofseatsbooked
Building property noofseatsbooked
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name FlightDetails
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails on table flight_details
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightId]
building SimpleValue for flightId
Building property flightId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(flight_id)]), flightId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalDate]
building SimpleValue for arrivalDate
Building property arrivalDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalTime]
building SimpleValue for arrivalTime
Building property arrivalTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departure_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureDate]
building SimpleValue for departureDate
Building property departureDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departur_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureTime]
building SimpleValue for departureTime
Building property departureTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=destination, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property destination with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:destination]
building SimpleValue for destination
Building property destination
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightName]
building SimpleValue for flightName
Building property flightName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=seats_available, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsavailable with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:noofseatsavailable]
building SimpleValue for noofseatsavailable
Building property noofseatsavailable
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=source, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property source with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:source]
building SimpleValue for source
Building property source
Starting fillSimpleValue for id
Starting fillSimpleValue for emailId
Starting fillSimpleValue for mobileNo
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for role
Starting fillSimpleValue for ticketId
Starting fillSimpleValue for airlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Starting fillSimpleValue for flightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Starting fillSimpleValue for flightId
Starting fillSimpleValue for id
Starting fillSimpleValue for noofseatsbooked
Starting fillSimpleValue for flightId
Starting fillSimpleValue for arrivalDate
Starting fillSimpleValue for arrivalTime
Starting fillSimpleValue for departureDate
Starting fillSimpleValue for departureTime
Starting fillSimpleValue for destination
Starting fillSimpleValue for flightName
Starting fillSimpleValue for noofseatsavailable
Starting fillSimpleValue for source
Forcing column [id] to be non-null as it is part of the primary key for table [airline_users]
Forcing column [ticket_id] to be non-null as it is part of the primary key for table [booking_status]
Forcing column [flight_id] to be non-null as it is part of the primary key for table [flight_details]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: disabled
JPA compliance - query : 
JPA compliance - closed-handling : 
JPA compliance - lists : 
JPA compliance - transactions : 
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate\target\classes;C:\Users\DELL\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\DELL\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\DELL\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\DELL\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\DELL\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\DELL\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\DELL\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\DELL\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\DELL\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\DELL\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\DELL\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\DELL\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\DELL\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\DELL\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-entitymanager\5.4.2.Final\hibernate-entitymanager-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\projectlombok\lombok\1.18.8\lombok-1.18.8.jar;C:\Users\DELL\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, javax.persistence.jdbc.user=****, java.vm.specification.version=14, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.1\bin, sun.java.command=com.javafullstackfeb.airlinereservationsystem.controller.MainController, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\DELL, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=C:\Program Files\Java\jdk-14.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.1+7, user.name=DELL, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=TestPersistence, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\DELL\AppData\Local\Temp\, java.version=14.0.1, user.dir=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@328572f0, java.library.path=C:\Program Files\Java\jdk-14.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_251/bin/server;C:/Program Files/Java/jre1.8.0_251/bin;C:/Program Files/Java/jre1.8.0_251/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_251\bin;C:\Program Files\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\Users\DELL\AppData\Local\Microsoft\WindowsApps;;C:\Users\DELL\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.1+7, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@40c80397] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4a951911]
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
 Version select: select id from airline_users where id =?
 Snapshot select: select airlineuse_.id, airlineuse_.email_id as email_id2_0_, airlineuse_.mobile_no as mobile_n3_0_, airlineuse_.name as name4_0_, airlineuse_.password as password5_0_, airlineuse_.role as role6_0_ from airline_users airlineuse_ where airlineuse_.id=?
 Insert 0: insert into airline_users (email_id, mobile_no, name, password, role, id) values (?, ?, ?, ?, ?, ?)
 Update 0: update airline_users set email_id=?, mobile_no=?, name=?, password=?, role=? where id=?
 Delete 0: delete from airline_users where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@118102ee]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [NONE]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@186cb891]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [READ]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
 Version select: select ticket_id from booking_status where ticket_id =?
 Snapshot select: select bookingsta_.ticket_id, bookingsta_.airlineUsers as airlineU2_1_, bookingsta_.flightDetails as flightDe3_1_, bookingsta_.flight_id as flight_i4_1_, bookingsta_.id as id5_1_, bookingsta_.no_of_seats_booked as no_of_se6_1_ from booking_status bookingsta_ where bookingsta_.ticket_id=?
 Insert 0: insert into booking_status (airlineUsers, flightDetails, flight_id, id, no_of_seats_booked, ticket_id) values (?, ?, ?, ?, ?, ?)
 Update 0: update booking_status set airlineUsers=?, flightDetails=?, flight_id=?, id=?, no_of_seats_booked=? where ticket_id=?
 Delete 0: delete from booking_status where ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a8cbffe]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [NONE]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61e7bf2f]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [READ]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
 Version select: select flight_id from flight_details where flight_id =?
 Snapshot select: select flightdeta_.flight_id, flightdeta_.arrival_date as arrival_2_2_, flightdeta_.arrival_time as arrival_3_2_, flightdeta_.departure_date as departur4_2_, flightdeta_.departur_time as departur5_2_, flightdeta_.destination as destinat6_2_, flightdeta_.flight_name as flight_n7_2_, flightdeta_.seats_available as seats_av8_2_, flightdeta_.source as source9_2_ from flight_details flightdeta_ where flightdeta_.flight_id=?
 Insert 0: insert into flight_details (arrival_date, arrival_time, departure_date, departur_time, destination, flight_name, seats_available, source, flight_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update flight_details set arrival_date=?, arrival_time=?, departure_date=?, departur_time=?, destination=?, flight_name=?, seats_available=?, source=? where flight_id=?
 Delete 0: delete from flight_details where flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25e49cb2]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [NONE]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23382f76]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [READ]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
No actions specified; doing nothing
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3ab6678b
Registering SessionFactory: 5508d016-52c5-4db3-bd38-b57da2b0358f (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@a2ddf26
parse() - HQL: Select f from com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails f where source=:source
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'javafullstackfeb'
    |  |     |  |  |  \-[IDENT] Node: 'airlinereservationsystem'
    |  |     |  |  \-[IDENT] Node: 'dto'
    |  |     |  \-[IDENT] Node: 'FlightDetails'
    |  |     \-[ALIAS] Node: 'f'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'f'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'source'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'source'

select << begin [level=1, statement=select]
FromClause{level=1} : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails (f) -> flightdeta0_
Resolved : f -> flightdeta0_.flight_id
Resolved : {synthetic-alias} -> {synthetic-alias}
getDataType() : source -> org.hibernate.type.StringType@69504ae9
Resolved : {synthetic-alias}.source -> flightdeta0_.source
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} flightdeta0_.flight_id ) ( FromClause{level=1} flight_details flightdeta0_ ) ( where ( = ( flightdeta0_.source {synthetic-alias} source ) ? ) ) )
Using FROM fragment [flight_details flightdeta0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (flight_details)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'flightdeta0_.flight_id as flight_i1_2_' {alias=f, className=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, tableAlias=flightdeta0_}
    |  \-[SQL_TOKEN] SqlFragment: 'flightdeta0_.arrival_date as arrival_2_2_, flightdeta0_.arrival_time as arrival_3_2_, flightdeta0_.departure_date as departur4_2_, flightdeta0_.departur_time as departur5_2_, flightdeta0_.destination as destinat6_2_, flightdeta0_.flight_name as flight_n7_2_, flightdeta0_.seats_available as seats_av8_2_, flightdeta0_.source as source9_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[f], fromElementByTableAlias=[flightdeta0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'flight_details flightdeta0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=f,role=null,tableName=flight_details,tableAlias=flightdeta0_,origin=null,columns={,className=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'flightdeta0_.source' {propertyName=source,dereferenceType=PRIMITIVE,getPropertyPath=source,path={synthetic-alias}.source,tableAlias=flightdeta0_,className=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails,classAlias=f}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'source' {originalText=source}
          \-[NAMED_PARAM] ParameterNode: '?' {name=source, expectedType=org.hibernate.type.StringType@69504ae9}

throwQueryException() : no errors
HQL: Select f from com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails f where source=:source
SQL: select flightdeta0_.flight_id as flight_i1_2_, flightdeta0_.arrival_date as arrival_2_2_, flightdeta0_.arrival_time as arrival_3_2_, flightdeta0_.departure_date as departur4_2_, flightdeta0_.departur_time as departur5_2_, flightdeta0_.destination as destinat6_2_, flightdeta0_.flight_name as flight_n7_2_, flightdeta0_.seats_available as seats_av8_2_, flightdeta0_.source as source9_2_ from flight_details flightdeta0_ where flightdeta0_.source=?
throwQueryException() : no errors
select flightdeta0_.flight_id as flight_i1_2_, flightdeta0_.arrival_date as arrival_2_2_, flightdeta0_.arrival_time as arrival_3_2_, flightdeta0_.departure_date as departur4_2_, flightdeta0_.departur_time as departur5_2_, flightdeta0_.destination as destinat6_2_, flightdeta0_.flight_name as flight_n7_2_, flightdeta0_.seats_available as seats_av8_2_, flightdeta0_.source as source9_2_ from flight_details flightdeta0_ where flightdeta0_.source=?
Result set row: 0
Result row: EntityKey[com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2000]
Result set row: 1
Result row: EntityKey[com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2001]
Resolving associations for [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2000]
Done materializing entity [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2000]
Resolving associations for [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2001]
Done materializing entity [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2001]
Initiating JDBC connection release from afterTransaction
HHH000031: Closing
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3d96fa9e] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4a951911]
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2000       Indigo        Vizag   to    Banglore        2020-07-08        09:00:00      2020-07-08     11:00:00    10(Seats Available)
2001       AirAsia        Vizag   to    Hyderabd        2020-12-01        08:00:00      2020-12-01     10:00:00    20(Seats Available)
************* Welcome To Airline Reservation System *************
1. Search Flight By Source
2. Search Flight By Destination
3. Search Flight By Name
4. View All Flight Details
5. Register
6. Login
Enter ID : 
Enter Your Name : 
Enter Your MobileNumber : 
Enter Email to Register : 
Enter Password :
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=TestPersistence, explicit-provider=null] against incoming persistence unit name [TestPersistence]
No PersistenceProvider explicitly requested, assuming Hibernate
PersistenceUnitInfo [
	name: TestPersistence
	persistence provider classname: null
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/DELL/eclipse-workspace/airlinereservationsystemjpawithhibernate/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: rootpassword
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: update
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@2de56eb2
Adding type registration boolean -> org.hibernate.type.BooleanType@2de56eb2
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2de56eb2
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3cce5371
Adding type registration true_false -> org.hibernate.type.TrueFalseType@5b38c1ec
Adding type registration yes_no -> org.hibernate.type.YesNoType@55cb6996
Adding type registration byte -> org.hibernate.type.ByteType@38467116
Adding type registration byte -> org.hibernate.type.ByteType@38467116
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@38467116
Adding type registration character -> org.hibernate.type.CharacterType@5e7cd6cc
Adding type registration char -> org.hibernate.type.CharacterType@5e7cd6cc
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5e7cd6cc
Adding type registration short -> org.hibernate.type.ShortType@3feb2dda
Adding type registration short -> org.hibernate.type.ShortType@3feb2dda
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3feb2dda
Adding type registration integer -> org.hibernate.type.IntegerType@69c81773
Adding type registration int -> org.hibernate.type.IntegerType@69c81773
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@69c81773
Adding type registration long -> org.hibernate.type.LongType@5884a914
Adding type registration long -> org.hibernate.type.LongType@5884a914
Adding type registration java.lang.Long -> org.hibernate.type.LongType@5884a914
Adding type registration float -> org.hibernate.type.FloatType@aba625
Adding type registration float -> org.hibernate.type.FloatType@aba625
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@aba625
Adding type registration double -> org.hibernate.type.DoubleType@3932c79a
Adding type registration double -> org.hibernate.type.DoubleType@3932c79a
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3932c79a
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5db6b9cd
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5db6b9cd
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@58e1d9d
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@58e1d9d
Adding type registration string -> org.hibernate.type.StringType@69504ae9
Adding type registration java.lang.String -> org.hibernate.type.StringType@69504ae9
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7eecb5b8
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5c86a017
Adding type registration url -> org.hibernate.type.UrlType@4dc27487
Adding type registration java.net.URL -> org.hibernate.type.UrlType@4dc27487
Adding type registration Duration -> org.hibernate.type.DurationType@7dfb0c0f
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7dfb0c0f
Adding type registration Instant -> org.hibernate.type.InstantType@14bdbc74
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@14bdbc74
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@24c1b2d2
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@24c1b2d2
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1df8da7a
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1df8da7a
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1c9b0314
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1c9b0314
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f58853c
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f58853c
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@13d73f29
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@13d73f29
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5be1d0a4
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5be1d0a4
Adding type registration date -> org.hibernate.type.DateType@4470fbd6
Adding type registration java.sql.Date -> org.hibernate.type.DateType@4470fbd6
Adding type registration time -> org.hibernate.type.TimeType@3b6d844d
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3b6d844d
Adding type registration timestamp -> org.hibernate.type.TimestampType@4ee203eb
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4ee203eb
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4ee203eb
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3e78b6a5
Adding type registration calendar -> org.hibernate.type.CalendarType@18f8cd79
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@18f8cd79
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@18f8cd79
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6cc4cdb9
Adding type registration locale -> org.hibernate.type.LocaleType@6bb4dd34
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6bb4dd34
Adding type registration currency -> org.hibernate.type.CurrencyType@4a07d605
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4a07d605
Adding type registration timezone -> org.hibernate.type.TimeZoneType@68878f6d
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@68878f6d
Adding type registration class -> org.hibernate.type.ClassType@78fa769e
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@78fa769e
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@238d68ff
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@238d68ff
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@9cb8225
Adding type registration binary -> org.hibernate.type.BinaryType@7d61eb55
Adding type registration byte[] -> org.hibernate.type.BinaryType@7d61eb55
Adding type registration [B -> org.hibernate.type.BinaryType@7d61eb55
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@638ef7ed
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@638ef7ed
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@638ef7ed
Adding type registration row_version -> org.hibernate.type.RowVersionType@1f760b47
Adding type registration image -> org.hibernate.type.ImageType@33f676f6
Adding type registration characters -> org.hibernate.type.CharArrayType@81d9a72
Adding type registration char[] -> org.hibernate.type.CharArrayType@81d9a72
Adding type registration [C -> org.hibernate.type.CharArrayType@81d9a72
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@13df2a8c
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@13df2a8c
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@13df2a8c
Adding type registration text -> org.hibernate.type.TextType@7de62196
Adding type registration ntext -> org.hibernate.type.NTextType@35a3d49f
Adding type registration blob -> org.hibernate.type.BlobType@19b843ba
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@19b843ba
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e13529a
Adding type registration clob -> org.hibernate.type.ClobType@dc9876b
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@dc9876b
Adding type registration nclob -> org.hibernate.type.NClobType@3b5fad2d
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3b5fad2d
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@102cec62
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@43015c69
Adding type registration serializable -> org.hibernate.type.SerializableType@cd1e646
Adding type registration object -> org.hibernate.type.ObjectType@44be0077
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@44be0077
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3c83468e
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@272ce069
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3d7fb838
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1c26273d
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3a37a501
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7a583586
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3a26ec8d
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@17143b3b
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@100c8b75] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2bc378f7] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@268cbb86]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
HHH10001001: Connection properties: {password=rootpassword, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.47 ( Revision: fe1903b1ecb4a96a917f7ed3190d80c049b1de29 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6a818392] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@489091bd]
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name AirlineUsers
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers on table airline_users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=email_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property emailId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:emailId]
building SimpleValue for emailId
Building property emailId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=mobile_no, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property mobileNo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:mobileNo]
building SimpleValue for mobileNo
Building property mobileNo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=role, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property role with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:role]
building SimpleValue for role
Building property role
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name BookingStatus
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus on table booking_status
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=ticket_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property ticketId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:ticketId]
building SimpleValue for ticketId
Building property ticketId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(ticket_id)]), ticketId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=airlineUsers, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property airlineUsers with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:airlineUsers]
building SimpleValue for airlineUsers
Building property airlineUsers
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flightDetails, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightDetails with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightDetails]
building SimpleValue for flightDetails
Building property flightDetails
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightId]
building SimpleValue for flightId
Building property flightId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=no_of_seats_booked, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsbooked with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:noofseatsbooked]
building SimpleValue for noofseatsbooked
Building property noofseatsbooked
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name FlightDetails
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails on table flight_details
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightId]
building SimpleValue for flightId
Building property flightId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(flight_id)]), flightId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalDate]
building SimpleValue for arrivalDate
Building property arrivalDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalTime]
building SimpleValue for arrivalTime
Building property arrivalTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departure_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureDate]
building SimpleValue for departureDate
Building property departureDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departur_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureTime]
building SimpleValue for departureTime
Building property departureTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=destination, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property destination with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:destination]
building SimpleValue for destination
Building property destination
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightName]
building SimpleValue for flightName
Building property flightName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=seats_available, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsavailable with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:noofseatsavailable]
building SimpleValue for noofseatsavailable
Building property noofseatsavailable
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=source, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property source with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:source]
building SimpleValue for source
Building property source
Starting fillSimpleValue for id
Starting fillSimpleValue for emailId
Starting fillSimpleValue for mobileNo
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for role
Starting fillSimpleValue for ticketId
Starting fillSimpleValue for airlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Starting fillSimpleValue for flightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Starting fillSimpleValue for flightId
Starting fillSimpleValue for id
Starting fillSimpleValue for noofseatsbooked
Starting fillSimpleValue for flightId
Starting fillSimpleValue for arrivalDate
Starting fillSimpleValue for arrivalTime
Starting fillSimpleValue for departureDate
Starting fillSimpleValue for departureTime
Starting fillSimpleValue for destination
Starting fillSimpleValue for flightName
Starting fillSimpleValue for noofseatsavailable
Starting fillSimpleValue for source
Forcing column [id] to be non-null as it is part of the primary key for table [airline_users]
Forcing column [ticket_id] to be non-null as it is part of the primary key for table [booking_status]
Forcing column [flight_id] to be non-null as it is part of the primary key for table [flight_details]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: disabled
JPA compliance - query : 
JPA compliance - closed-handling : 
JPA compliance - lists : 
JPA compliance - transactions : 
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate\target\classes;C:\Users\DELL\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\DELL\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\DELL\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\DELL\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\DELL\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\DELL\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\DELL\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\DELL\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\DELL\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\DELL\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\DELL\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\DELL\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\DELL\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\DELL\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-entitymanager\5.4.2.Final\hibernate-entitymanager-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\projectlombok\lombok\1.18.8\lombok-1.18.8.jar;C:\Users\DELL\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, javax.persistence.jdbc.user=****, java.vm.specification.version=14, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.1\bin, sun.java.command=com.javafullstackfeb.airlinereservationsystem.controller.MainController, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\DELL, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=C:\Program Files\Java\jdk-14.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.1+7, user.name=DELL, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=TestPersistence, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\DELL\AppData\Local\Temp\, java.version=14.0.1, user.dir=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@26d41711, java.library.path=C:\Program Files\Java\jdk-14.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_251/bin/server;C:/Program Files/Java/jre1.8.0_251/bin;C:/Program Files/Java/jre1.8.0_251/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_251\bin;C:\Program Files\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\Users\DELL\AppData\Local\Microsoft\WindowsApps;;C:\Users\DELL\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.1+7, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6a818392] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@298f0a0b]
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
 Version select: select id from airline_users where id =?
 Snapshot select: select airlineuse_.id, airlineuse_.email_id as email_id2_0_, airlineuse_.mobile_no as mobile_n3_0_, airlineuse_.name as name4_0_, airlineuse_.password as password5_0_, airlineuse_.role as role6_0_ from airline_users airlineuse_ where airlineuse_.id=?
 Insert 0: insert into airline_users (email_id, mobile_no, name, password, role, id) values (?, ?, ?, ?, ?, ?)
 Update 0: update airline_users set email_id=?, mobile_no=?, name=?, password=?, role=? where id=?
 Delete 0: delete from airline_users where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e1dde44]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [NONE]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71e35c4]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [READ]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
 Version select: select ticket_id from booking_status where ticket_id =?
 Snapshot select: select bookingsta_.ticket_id, bookingsta_.airlineUsers as airlineU2_1_, bookingsta_.flightDetails as flightDe3_1_, bookingsta_.flight_id as flight_i4_1_, bookingsta_.id as id5_1_, bookingsta_.no_of_seats_booked as no_of_se6_1_ from booking_status bookingsta_ where bookingsta_.ticket_id=?
 Insert 0: insert into booking_status (airlineUsers, flightDetails, flight_id, id, no_of_seats_booked, ticket_id) values (?, ?, ?, ?, ?, ?)
 Update 0: update booking_status set airlineUsers=?, flightDetails=?, flight_id=?, id=?, no_of_seats_booked=? where ticket_id=?
 Delete 0: delete from booking_status where ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12fe1f28]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [NONE]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26fb4d06]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [READ]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
 Version select: select flight_id from flight_details where flight_id =?
 Snapshot select: select flightdeta_.flight_id, flightdeta_.arrival_date as arrival_2_2_, flightdeta_.arrival_time as arrival_3_2_, flightdeta_.departure_date as departur4_2_, flightdeta_.departur_time as departur5_2_, flightdeta_.destination as destinat6_2_, flightdeta_.flight_name as flight_n7_2_, flightdeta_.seats_available as seats_av8_2_, flightdeta_.source as source9_2_ from flight_details flightdeta_ where flightdeta_.flight_id=?
 Insert 0: insert into flight_details (arrival_date, arrival_time, departure_date, departur_time, destination, flight_name, seats_available, source, flight_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update flight_details set arrival_date=?, arrival_time=?, departure_date=?, departur_time=?, destination=?, flight_name=?, seats_available=?, source=? where flight_id=?
 Delete 0: delete from flight_details where flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e43ddd6]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [NONE]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d38edfd]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [READ]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@54067fdc] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : airline_users
No alter strings for table : booking_status
No alter strings for table : flight_details
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: ba324ecf-5efd-49b2-94c2-d2bed62ae53e (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Generated identifier: 5001, using strategy: org.hibernate.id.Assigned
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers{password=@Suni123, role=user, name=sunitha, emailId=sunitha@gmail.com, id=5001, mobileNo=9177897241}

    insert 
    into
        airline_users
        (email_id, mobile_no, name, password, role, id) 
    values
        (?, ?, ?, ?, ?, ?)
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
HHH000031: Closing
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@65eb76cd] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@298f0a0b]
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Registered Successfully
************* Welcome To Airline Reservation System *************
1. Search Flight By Source
2. Search Flight By Destination
3. Search Flight By Name
4. View All Flight Details
5. Register
6. Login
Enter registered email to login : 
Enter registered Password to login : 
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=TestPersistence, explicit-provider=null] against incoming persistence unit name [TestPersistence]
No PersistenceProvider explicitly requested, assuming Hibernate
PersistenceUnitInfo [
	name: TestPersistence
	persistence provider classname: null
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/DELL/eclipse-workspace/airlinereservationsystemjpawithhibernate/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: rootpassword
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: update
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@2de56eb2
Adding type registration boolean -> org.hibernate.type.BooleanType@2de56eb2
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2de56eb2
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3cce5371
Adding type registration true_false -> org.hibernate.type.TrueFalseType@5b38c1ec
Adding type registration yes_no -> org.hibernate.type.YesNoType@55cb6996
Adding type registration byte -> org.hibernate.type.ByteType@38467116
Adding type registration byte -> org.hibernate.type.ByteType@38467116
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@38467116
Adding type registration character -> org.hibernate.type.CharacterType@5e7cd6cc
Adding type registration char -> org.hibernate.type.CharacterType@5e7cd6cc
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5e7cd6cc
Adding type registration short -> org.hibernate.type.ShortType@3feb2dda
Adding type registration short -> org.hibernate.type.ShortType@3feb2dda
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3feb2dda
Adding type registration integer -> org.hibernate.type.IntegerType@69c81773
Adding type registration int -> org.hibernate.type.IntegerType@69c81773
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@69c81773
Adding type registration long -> org.hibernate.type.LongType@5884a914
Adding type registration long -> org.hibernate.type.LongType@5884a914
Adding type registration java.lang.Long -> org.hibernate.type.LongType@5884a914
Adding type registration float -> org.hibernate.type.FloatType@aba625
Adding type registration float -> org.hibernate.type.FloatType@aba625
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@aba625
Adding type registration double -> org.hibernate.type.DoubleType@3932c79a
Adding type registration double -> org.hibernate.type.DoubleType@3932c79a
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3932c79a
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5db6b9cd
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5db6b9cd
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@58e1d9d
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@58e1d9d
Adding type registration string -> org.hibernate.type.StringType@69504ae9
Adding type registration java.lang.String -> org.hibernate.type.StringType@69504ae9
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7eecb5b8
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5c86a017
Adding type registration url -> org.hibernate.type.UrlType@4dc27487
Adding type registration java.net.URL -> org.hibernate.type.UrlType@4dc27487
Adding type registration Duration -> org.hibernate.type.DurationType@7dfb0c0f
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7dfb0c0f
Adding type registration Instant -> org.hibernate.type.InstantType@14bdbc74
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@14bdbc74
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@24c1b2d2
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@24c1b2d2
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1df8da7a
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1df8da7a
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1c9b0314
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1c9b0314
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f58853c
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f58853c
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@13d73f29
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@13d73f29
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5be1d0a4
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5be1d0a4
Adding type registration date -> org.hibernate.type.DateType@4470fbd6
Adding type registration java.sql.Date -> org.hibernate.type.DateType@4470fbd6
Adding type registration time -> org.hibernate.type.TimeType@3b6d844d
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3b6d844d
Adding type registration timestamp -> org.hibernate.type.TimestampType@4ee203eb
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4ee203eb
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4ee203eb
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3e78b6a5
Adding type registration calendar -> org.hibernate.type.CalendarType@18f8cd79
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@18f8cd79
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@18f8cd79
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6cc4cdb9
Adding type registration locale -> org.hibernate.type.LocaleType@6bb4dd34
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6bb4dd34
Adding type registration currency -> org.hibernate.type.CurrencyType@4a07d605
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4a07d605
Adding type registration timezone -> org.hibernate.type.TimeZoneType@68878f6d
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@68878f6d
Adding type registration class -> org.hibernate.type.ClassType@78fa769e
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@78fa769e
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@238d68ff
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@238d68ff
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@9cb8225
Adding type registration binary -> org.hibernate.type.BinaryType@7d61eb55
Adding type registration byte[] -> org.hibernate.type.BinaryType@7d61eb55
Adding type registration [B -> org.hibernate.type.BinaryType@7d61eb55
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@638ef7ed
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@638ef7ed
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@638ef7ed
Adding type registration row_version -> org.hibernate.type.RowVersionType@1f760b47
Adding type registration image -> org.hibernate.type.ImageType@33f676f6
Adding type registration characters -> org.hibernate.type.CharArrayType@81d9a72
Adding type registration char[] -> org.hibernate.type.CharArrayType@81d9a72
Adding type registration [C -> org.hibernate.type.CharArrayType@81d9a72
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@13df2a8c
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@13df2a8c
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@13df2a8c
Adding type registration text -> org.hibernate.type.TextType@7de62196
Adding type registration ntext -> org.hibernate.type.NTextType@35a3d49f
Adding type registration blob -> org.hibernate.type.BlobType@19b843ba
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@19b843ba
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e13529a
Adding type registration clob -> org.hibernate.type.ClobType@dc9876b
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@dc9876b
Adding type registration nclob -> org.hibernate.type.NClobType@3b5fad2d
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3b5fad2d
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@102cec62
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@43015c69
Adding type registration serializable -> org.hibernate.type.SerializableType@cd1e646
Adding type registration object -> org.hibernate.type.ObjectType@44be0077
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@44be0077
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6c1cfa53
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4d68b571
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@52b06bef
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@61bcbcce
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6af91cc8
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6232ffdb
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@330c1f61
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@37d28f02
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@15efda6c] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6056232d] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@33f2df51]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
HHH10001001: Connection properties: {password=rootpassword, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.47 ( Revision: fe1903b1ecb4a96a917f7ed3190d80c049b1de29 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@58015e56] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4d3c6593]
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name AirlineUsers
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers on table airline_users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=email_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property emailId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:emailId]
building SimpleValue for emailId
Building property emailId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=mobile_no, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property mobileNo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:mobileNo]
building SimpleValue for mobileNo
Building property mobileNo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=role, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property role with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:role]
building SimpleValue for role
Building property role
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name BookingStatus
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus on table booking_status
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=ticket_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property ticketId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:ticketId]
building SimpleValue for ticketId
Building property ticketId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(ticket_id)]), ticketId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=airlineUsers, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property airlineUsers with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:airlineUsers]
building SimpleValue for airlineUsers
Building property airlineUsers
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flightDetails, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightDetails with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightDetails]
building SimpleValue for flightDetails
Building property flightDetails
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightId]
building SimpleValue for flightId
Building property flightId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=no_of_seats_booked, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsbooked with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:noofseatsbooked]
building SimpleValue for noofseatsbooked
Building property noofseatsbooked
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name FlightDetails
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails on table flight_details
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightId]
building SimpleValue for flightId
Building property flightId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(flight_id)]), flightId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalDate]
building SimpleValue for arrivalDate
Building property arrivalDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalTime]
building SimpleValue for arrivalTime
Building property arrivalTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departure_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureDate]
building SimpleValue for departureDate
Building property departureDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departur_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureTime]
building SimpleValue for departureTime
Building property departureTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=destination, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property destination with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:destination]
building SimpleValue for destination
Building property destination
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightName]
building SimpleValue for flightName
Building property flightName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=seats_available, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsavailable with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:noofseatsavailable]
building SimpleValue for noofseatsavailable
Building property noofseatsavailable
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=source, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property source with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:source]
building SimpleValue for source
Building property source
Starting fillSimpleValue for id
Starting fillSimpleValue for emailId
Starting fillSimpleValue for mobileNo
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for role
Starting fillSimpleValue for ticketId
Starting fillSimpleValue for airlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Starting fillSimpleValue for flightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Starting fillSimpleValue for flightId
Starting fillSimpleValue for id
Starting fillSimpleValue for noofseatsbooked
Starting fillSimpleValue for flightId
Starting fillSimpleValue for arrivalDate
Starting fillSimpleValue for arrivalTime
Starting fillSimpleValue for departureDate
Starting fillSimpleValue for departureTime
Starting fillSimpleValue for destination
Starting fillSimpleValue for flightName
Starting fillSimpleValue for noofseatsavailable
Starting fillSimpleValue for source
Forcing column [id] to be non-null as it is part of the primary key for table [airline_users]
Forcing column [ticket_id] to be non-null as it is part of the primary key for table [booking_status]
Forcing column [flight_id] to be non-null as it is part of the primary key for table [flight_details]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: disabled
JPA compliance - query : 
JPA compliance - closed-handling : 
JPA compliance - lists : 
JPA compliance - transactions : 
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate\target\classes;C:\Users\DELL\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\DELL\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\DELL\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\DELL\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\DELL\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\DELL\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\DELL\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\DELL\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\DELL\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\DELL\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\DELL\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\DELL\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\DELL\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\DELL\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-entitymanager\5.4.2.Final\hibernate-entitymanager-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\projectlombok\lombok\1.18.8\lombok-1.18.8.jar;C:\Users\DELL\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, javax.persistence.jdbc.user=****, java.vm.specification.version=14, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.1\bin, sun.java.command=com.javafullstackfeb.airlinereservationsystem.controller.MainController, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\DELL, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=C:\Program Files\Java\jdk-14.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.1+7, user.name=DELL, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=TestPersistence, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\DELL\AppData\Local\Temp\, java.version=14.0.1, user.dir=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2596d7f4, java.library.path=C:\Program Files\Java\jdk-14.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_251/bin/server;C:/Program Files/Java/jre1.8.0_251/bin;C:/Program Files/Java/jre1.8.0_251/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_251\bin;C:\Program Files\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\Users\DELL\AppData\Local\Microsoft\WindowsApps;;C:\Users\DELL\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.1+7, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@58015e56] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@42a0501e]
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
 Version select: select id from airline_users where id =?
 Snapshot select: select airlineuse_.id, airlineuse_.email_id as email_id2_0_, airlineuse_.mobile_no as mobile_n3_0_, airlineuse_.name as name4_0_, airlineuse_.password as password5_0_, airlineuse_.role as role6_0_ from airline_users airlineuse_ where airlineuse_.id=?
 Insert 0: insert into airline_users (email_id, mobile_no, name, password, role, id) values (?, ?, ?, ?, ?, ?)
 Update 0: update airline_users set email_id=?, mobile_no=?, name=?, password=?, role=? where id=?
 Delete 0: delete from airline_users where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@345cbf40]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [NONE]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@463561c5]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [READ]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
 Version select: select ticket_id from booking_status where ticket_id =?
 Snapshot select: select bookingsta_.ticket_id, bookingsta_.airlineUsers as airlineU2_1_, bookingsta_.flightDetails as flightDe3_1_, bookingsta_.flight_id as flight_i4_1_, bookingsta_.id as id5_1_, bookingsta_.no_of_seats_booked as no_of_se6_1_ from booking_status bookingsta_ where bookingsta_.ticket_id=?
 Insert 0: insert into booking_status (airlineUsers, flightDetails, flight_id, id, no_of_seats_booked, ticket_id) values (?, ?, ?, ?, ?, ?)
 Update 0: update booking_status set airlineUsers=?, flightDetails=?, flight_id=?, id=?, no_of_seats_booked=? where ticket_id=?
 Delete 0: delete from booking_status where ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3468ee6e]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [NONE]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@421def93]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [READ]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
 Version select: select flight_id from flight_details where flight_id =?
 Snapshot select: select flightdeta_.flight_id, flightdeta_.arrival_date as arrival_2_2_, flightdeta_.arrival_time as arrival_3_2_, flightdeta_.departure_date as departur4_2_, flightdeta_.departur_time as departur5_2_, flightdeta_.destination as destinat6_2_, flightdeta_.flight_name as flight_n7_2_, flightdeta_.seats_available as seats_av8_2_, flightdeta_.source as source9_2_ from flight_details flightdeta_ where flightdeta_.flight_id=?
 Insert 0: insert into flight_details (arrival_date, arrival_time, departure_date, departur_time, destination, flight_name, seats_available, source, flight_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update flight_details set arrival_date=?, arrival_time=?, departure_date=?, departur_time=?, destination=?, flight_name=?, seats_available=?, source=? where flight_id=?
 Delete 0: delete from flight_details where flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@751ae8a4]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [NONE]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4232b34a]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [READ]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@360e9c06] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : airline_users
No alter strings for table : booking_status
No alter strings for table : flight_details
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 2fcd6ea9-aebc-4729-a484-0b7b8a385727 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@a2ddf26
parse() - HQL: select u from  com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers u where u.emailId = :emailId and u.password =:password
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'javafullstackfeb'
    |  |     |  |  |  \-[IDENT] Node: 'airlinereservationsystem'
    |  |     |  |  \-[IDENT] Node: 'dto'
    |  |     |  \-[IDENT] Node: 'AirlineUsers'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'u'
          |  |  \-[IDENT] Node: 'emailId'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'emailId'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'u'
             |  \-[IDENT] Node: 'password'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'password'

select << begin [level=1, statement=select]
FromClause{level=1} : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers (u) -> airlineuse0_
Resolved : u -> airlineuse0_.id
Resolved : u -> airlineuse0_.id
getDataType() : emailId -> org.hibernate.type.StringType@69504ae9
Resolved : u.emailId -> airlineuse0_.email_id
Resolved : u -> airlineuse0_.id
getDataType() : password -> org.hibernate.type.StringType@69504ae9
Resolved : u.password -> airlineuse0_.password
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} airlineuse0_.id ) ( FromClause{level=1} airline_users airlineuse0_ ) ( where ( and ( = ( airlineuse0_.email_id airlineuse0_.id emailId ) ? ) ( = ( airlineuse0_.password airlineuse0_.id password ) ? ) ) ) )
Using FROM fragment [airline_users airlineuse0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (airline_users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'airlineuse0_.id as id1_0_' {alias=u, className=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, tableAlias=airlineuse0_}
    |  \-[SQL_TOKEN] SqlFragment: 'airlineuse0_.email_id as email_id2_0_, airlineuse0_.mobile_no as mobile_n3_0_, airlineuse0_.name as name4_0_, airlineuse0_.password as password5_0_, airlineuse0_.role as role6_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[airlineuse0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'airline_users airlineuse0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=airline_users,tableAlias=airlineuse0_,origin=null,columns={,className=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'airlineuse0_.email_id' {propertyName=emailId,dereferenceType=PRIMITIVE,getPropertyPath=emailId,path=u.emailId,tableAlias=airlineuse0_,className=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers,classAlias=u}
          |  |  +-[ALIAS_REF] IdentNode: 'airlineuse0_.id' {alias=u, className=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, tableAlias=airlineuse0_}
          |  |  \-[IDENT] IdentNode: 'emailId' {originalText=emailId}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=emailId, expectedType=org.hibernate.type.StringType@69504ae9}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'airlineuse0_.password' {propertyName=password,dereferenceType=PRIMITIVE,getPropertyPath=password,path=u.password,tableAlias=airlineuse0_,className=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers,classAlias=u}
             |  +-[ALIAS_REF] IdentNode: 'airlineuse0_.id' {alias=u, className=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, tableAlias=airlineuse0_}
             |  \-[IDENT] IdentNode: 'password' {originalText=password}
             \-[NAMED_PARAM] ParameterNode: '?' {name=password, expectedType=org.hibernate.type.StringType@69504ae9}

throwQueryException() : no errors
HQL: select u from  com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers u where u.emailId = :emailId and u.password =:password
SQL: select airlineuse0_.id as id1_0_, airlineuse0_.email_id as email_id2_0_, airlineuse0_.mobile_no as mobile_n3_0_, airlineuse0_.name as name4_0_, airlineuse0_.password as password5_0_, airlineuse0_.role as role6_0_ from airline_users airlineuse0_ where airlineuse0_.email_id=? and airlineuse0_.password=?
throwQueryException() : no errors

    select
        airlineuse0_.id as id1_0_,
        airlineuse0_.email_id as email_id2_0_,
        airlineuse0_.mobile_no as mobile_n3_0_,
        airlineuse0_.name as name4_0_,
        airlineuse0_.password as password5_0_,
        airlineuse0_.role as role6_0_ 
    from
        airline_users airlineuse0_ 
    where
        airlineuse0_.email_id=? 
        and airlineuse0_.password=?
Result set row: 0
Result row: EntityKey[com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers#5001]
Resolving associations for [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers#5001]
Done materializing entity [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers#5001]
Initiating JDBC connection release from afterTransaction
HHH000031: Closing
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@21eee94f] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@42a0501e]
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Logged In Successfully....!!!
1.   Search Flight By Source
2.   Search Flight By Destination
3.   Search Flight By Name
4.   View All Flight Details
5.   Book The Flight
6.   Cancel The Tickets
7.   Logout
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=TestPersistence, explicit-provider=null] against incoming persistence unit name [TestPersistence]
No PersistenceProvider explicitly requested, assuming Hibernate
PersistenceUnitInfo [
	name: TestPersistence
	persistence provider classname: null
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/DELL/eclipse-workspace/airlinereservationsystemjpawithhibernate/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: rootpassword
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: update
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@2de56eb2
Adding type registration boolean -> org.hibernate.type.BooleanType@2de56eb2
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2de56eb2
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3cce5371
Adding type registration true_false -> org.hibernate.type.TrueFalseType@5b38c1ec
Adding type registration yes_no -> org.hibernate.type.YesNoType@55cb6996
Adding type registration byte -> org.hibernate.type.ByteType@38467116
Adding type registration byte -> org.hibernate.type.ByteType@38467116
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@38467116
Adding type registration character -> org.hibernate.type.CharacterType@5e7cd6cc
Adding type registration char -> org.hibernate.type.CharacterType@5e7cd6cc
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5e7cd6cc
Adding type registration short -> org.hibernate.type.ShortType@3feb2dda
Adding type registration short -> org.hibernate.type.ShortType@3feb2dda
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3feb2dda
Adding type registration integer -> org.hibernate.type.IntegerType@69c81773
Adding type registration int -> org.hibernate.type.IntegerType@69c81773
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@69c81773
Adding type registration long -> org.hibernate.type.LongType@5884a914
Adding type registration long -> org.hibernate.type.LongType@5884a914
Adding type registration java.lang.Long -> org.hibernate.type.LongType@5884a914
Adding type registration float -> org.hibernate.type.FloatType@aba625
Adding type registration float -> org.hibernate.type.FloatType@aba625
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@aba625
Adding type registration double -> org.hibernate.type.DoubleType@3932c79a
Adding type registration double -> org.hibernate.type.DoubleType@3932c79a
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3932c79a
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5db6b9cd
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5db6b9cd
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@58e1d9d
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@58e1d9d
Adding type registration string -> org.hibernate.type.StringType@69504ae9
Adding type registration java.lang.String -> org.hibernate.type.StringType@69504ae9
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7eecb5b8
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5c86a017
Adding type registration url -> org.hibernate.type.UrlType@4dc27487
Adding type registration java.net.URL -> org.hibernate.type.UrlType@4dc27487
Adding type registration Duration -> org.hibernate.type.DurationType@7dfb0c0f
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7dfb0c0f
Adding type registration Instant -> org.hibernate.type.InstantType@14bdbc74
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@14bdbc74
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@24c1b2d2
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@24c1b2d2
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1df8da7a
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1df8da7a
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1c9b0314
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1c9b0314
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f58853c
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f58853c
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@13d73f29
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@13d73f29
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5be1d0a4
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5be1d0a4
Adding type registration date -> org.hibernate.type.DateType@4470fbd6
Adding type registration java.sql.Date -> org.hibernate.type.DateType@4470fbd6
Adding type registration time -> org.hibernate.type.TimeType@3b6d844d
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3b6d844d
Adding type registration timestamp -> org.hibernate.type.TimestampType@4ee203eb
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4ee203eb
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4ee203eb
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3e78b6a5
Adding type registration calendar -> org.hibernate.type.CalendarType@18f8cd79
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@18f8cd79
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@18f8cd79
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6cc4cdb9
Adding type registration locale -> org.hibernate.type.LocaleType@6bb4dd34
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6bb4dd34
Adding type registration currency -> org.hibernate.type.CurrencyType@4a07d605
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4a07d605
Adding type registration timezone -> org.hibernate.type.TimeZoneType@68878f6d
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@68878f6d
Adding type registration class -> org.hibernate.type.ClassType@78fa769e
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@78fa769e
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@238d68ff
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@238d68ff
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@9cb8225
Adding type registration binary -> org.hibernate.type.BinaryType@7d61eb55
Adding type registration byte[] -> org.hibernate.type.BinaryType@7d61eb55
Adding type registration [B -> org.hibernate.type.BinaryType@7d61eb55
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@638ef7ed
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@638ef7ed
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@638ef7ed
Adding type registration row_version -> org.hibernate.type.RowVersionType@1f760b47
Adding type registration image -> org.hibernate.type.ImageType@33f676f6
Adding type registration characters -> org.hibernate.type.CharArrayType@81d9a72
Adding type registration char[] -> org.hibernate.type.CharArrayType@81d9a72
Adding type registration [C -> org.hibernate.type.CharArrayType@81d9a72
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@13df2a8c
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@13df2a8c
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@13df2a8c
Adding type registration text -> org.hibernate.type.TextType@7de62196
Adding type registration ntext -> org.hibernate.type.NTextType@35a3d49f
Adding type registration blob -> org.hibernate.type.BlobType@19b843ba
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@19b843ba
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e13529a
Adding type registration clob -> org.hibernate.type.ClobType@dc9876b
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@dc9876b
Adding type registration nclob -> org.hibernate.type.NClobType@3b5fad2d
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3b5fad2d
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@102cec62
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@43015c69
Adding type registration serializable -> org.hibernate.type.SerializableType@cd1e646
Adding type registration object -> org.hibernate.type.ObjectType@44be0077
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@44be0077
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5034f5dd
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@31b7d869
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6a916402
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1a47a1e8
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6d2a2560
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@62d1dc3c
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3811510
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@24eeac69
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@18539cb1] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@748f93bb] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7f2d31af]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
HHH10001001: Connection properties: {password=rootpassword, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.47 ( Revision: fe1903b1ecb4a96a917f7ed3190d80c049b1de29 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2b7e8044] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@550de6b8]
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name AirlineUsers
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers on table airline_users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=email_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property emailId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:emailId]
building SimpleValue for emailId
Building property emailId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=mobile_no, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property mobileNo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:mobileNo]
building SimpleValue for mobileNo
Building property mobileNo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=role, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property role with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:role]
building SimpleValue for role
Building property role
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name BookingStatus
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus on table booking_status
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=ticket_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property ticketId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:ticketId]
building SimpleValue for ticketId
Building property ticketId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(ticket_id)]), ticketId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=airlineUsers, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property airlineUsers with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:airlineUsers]
building SimpleValue for airlineUsers
Building property airlineUsers
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flightDetails, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightDetails with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightDetails]
building SimpleValue for flightDetails
Building property flightDetails
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightId]
building SimpleValue for flightId
Building property flightId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=no_of_seats_booked, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsbooked with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:noofseatsbooked]
building SimpleValue for noofseatsbooked
Building property noofseatsbooked
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name FlightDetails
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails on table flight_details
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightId]
building SimpleValue for flightId
Building property flightId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(flight_id)]), flightId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalDate]
building SimpleValue for arrivalDate
Building property arrivalDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalTime]
building SimpleValue for arrivalTime
Building property arrivalTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departure_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureDate]
building SimpleValue for departureDate
Building property departureDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departur_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureTime]
building SimpleValue for departureTime
Building property departureTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=destination, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property destination with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:destination]
building SimpleValue for destination
Building property destination
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightName]
building SimpleValue for flightName
Building property flightName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=seats_available, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsavailable with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:noofseatsavailable]
building SimpleValue for noofseatsavailable
Building property noofseatsavailable
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=source, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property source with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:source]
building SimpleValue for source
Building property source
Starting fillSimpleValue for id
Starting fillSimpleValue for emailId
Starting fillSimpleValue for mobileNo
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for role
Starting fillSimpleValue for ticketId
Starting fillSimpleValue for airlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Starting fillSimpleValue for flightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Starting fillSimpleValue for flightId
Starting fillSimpleValue for id
Starting fillSimpleValue for noofseatsbooked
Starting fillSimpleValue for flightId
Starting fillSimpleValue for arrivalDate
Starting fillSimpleValue for arrivalTime
Starting fillSimpleValue for departureDate
Starting fillSimpleValue for departureTime
Starting fillSimpleValue for destination
Starting fillSimpleValue for flightName
Starting fillSimpleValue for noofseatsavailable
Starting fillSimpleValue for source
Forcing column [id] to be non-null as it is part of the primary key for table [airline_users]
Forcing column [ticket_id] to be non-null as it is part of the primary key for table [booking_status]
Forcing column [flight_id] to be non-null as it is part of the primary key for table [flight_details]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: disabled
JPA compliance - query : 
JPA compliance - closed-handling : 
JPA compliance - lists : 
JPA compliance - transactions : 
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate\target\classes;C:\Users\DELL\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\DELL\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\DELL\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\DELL\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\DELL\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\DELL\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\DELL\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\DELL\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\DELL\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\DELL\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\DELL\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\DELL\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\DELL\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\DELL\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-entitymanager\5.4.2.Final\hibernate-entitymanager-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\projectlombok\lombok\1.18.8\lombok-1.18.8.jar;C:\Users\DELL\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, javax.persistence.jdbc.user=****, java.vm.specification.version=14, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.1\bin, sun.java.command=com.javafullstackfeb.airlinereservationsystem.controller.MainController, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\DELL, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=C:\Program Files\Java\jdk-14.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.1+7, user.name=DELL, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=TestPersistence, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\DELL\AppData\Local\Temp\, java.version=14.0.1, user.dir=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@67774e29, java.library.path=C:\Program Files\Java\jdk-14.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_251/bin/server;C:/Program Files/Java/jre1.8.0_251/bin;C:/Program Files/Java/jre1.8.0_251/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_251\bin;C:\Program Files\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\Users\DELL\AppData\Local\Microsoft\WindowsApps;;C:\Users\DELL\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.1+7, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2b7e8044] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@663f237a]
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
 Version select: select id from airline_users where id =?
 Snapshot select: select airlineuse_.id, airlineuse_.email_id as email_id2_0_, airlineuse_.mobile_no as mobile_n3_0_, airlineuse_.name as name4_0_, airlineuse_.password as password5_0_, airlineuse_.role as role6_0_ from airline_users airlineuse_ where airlineuse_.id=?
 Insert 0: insert into airline_users (email_id, mobile_no, name, password, role, id) values (?, ?, ?, ?, ?, ?)
 Update 0: update airline_users set email_id=?, mobile_no=?, name=?, password=?, role=? where id=?
 Delete 0: delete from airline_users where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@111d5c97]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [NONE]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@250a9031]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [READ]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
 Version select: select ticket_id from booking_status where ticket_id =?
 Snapshot select: select bookingsta_.ticket_id, bookingsta_.airlineUsers as airlineU2_1_, bookingsta_.flightDetails as flightDe3_1_, bookingsta_.flight_id as flight_i4_1_, bookingsta_.id as id5_1_, bookingsta_.no_of_seats_booked as no_of_se6_1_ from booking_status bookingsta_ where bookingsta_.ticket_id=?
 Insert 0: insert into booking_status (airlineUsers, flightDetails, flight_id, id, no_of_seats_booked, ticket_id) values (?, ?, ?, ?, ?, ?)
 Update 0: update booking_status set airlineUsers=?, flightDetails=?, flight_id=?, id=?, no_of_seats_booked=? where ticket_id=?
 Delete 0: delete from booking_status where ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d67f5eb]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [NONE]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e1fd62b]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [READ]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
 Version select: select flight_id from flight_details where flight_id =?
 Snapshot select: select flightdeta_.flight_id, flightdeta_.arrival_date as arrival_2_2_, flightdeta_.arrival_time as arrival_3_2_, flightdeta_.departure_date as departur4_2_, flightdeta_.departur_time as departur5_2_, flightdeta_.destination as destinat6_2_, flightdeta_.flight_name as flight_n7_2_, flightdeta_.seats_available as seats_av8_2_, flightdeta_.source as source9_2_ from flight_details flightdeta_ where flightdeta_.flight_id=?
 Insert 0: insert into flight_details (arrival_date, arrival_time, departure_date, departur_time, destination, flight_name, seats_available, source, flight_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update flight_details set arrival_date=?, arrival_time=?, departure_date=?, departur_time=?, destination=?, flight_name=?, seats_available=?, source=? where flight_id=?
 Delete 0: delete from flight_details where flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@558b4942]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [NONE]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70025b99]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [READ]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6ff0b1cc] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : airline_users
No alter strings for table : booking_status
No alter strings for table : flight_details
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: c1605166-2119-437a-b8a8-1263be93a96e (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@a2ddf26
parse() - HQL: select f from com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails f
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'javafullstackfeb'
       |     |  |  |  \-[IDENT] Node: 'airlinereservationsystem'
       |     |  |  \-[IDENT] Node: 'dto'
       |     |  \-[IDENT] Node: 'FlightDetails'
       |     \-[ALIAS] Node: 'f'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'f'

select << begin [level=1, statement=select]
FromClause{level=1} : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails (f) -> flightdeta0_
Resolved : f -> flightdeta0_.flight_id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} flightdeta0_.flight_id ) ( FromClause{level=1} flight_details flightdeta0_ ) )
Using FROM fragment [flight_details flightdeta0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (flight_details)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'flightdeta0_.flight_id as flight_i1_2_' {alias=f, className=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, tableAlias=flightdeta0_}
    |  \-[SQL_TOKEN] SqlFragment: 'flightdeta0_.arrival_date as arrival_2_2_, flightdeta0_.arrival_time as arrival_3_2_, flightdeta0_.departure_date as departur4_2_, flightdeta0_.departur_time as departur5_2_, flightdeta0_.destination as destinat6_2_, flightdeta0_.flight_name as flight_n7_2_, flightdeta0_.seats_available as seats_av8_2_, flightdeta0_.source as source9_2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[f], fromElementByTableAlias=[flightdeta0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'flight_details flightdeta0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=f,role=null,tableName=flight_details,tableAlias=flightdeta0_,origin=null,columns={,className=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails}}

throwQueryException() : no errors
HQL: select f from com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails f
SQL: select flightdeta0_.flight_id as flight_i1_2_, flightdeta0_.arrival_date as arrival_2_2_, flightdeta0_.arrival_time as arrival_3_2_, flightdeta0_.departure_date as departur4_2_, flightdeta0_.departur_time as departur5_2_, flightdeta0_.destination as destinat6_2_, flightdeta0_.flight_name as flight_n7_2_, flightdeta0_.seats_available as seats_av8_2_, flightdeta0_.source as source9_2_ from flight_details flightdeta0_
throwQueryException() : no errors

    select
        flightdeta0_.flight_id as flight_i1_2_,
        flightdeta0_.arrival_date as arrival_2_2_,
        flightdeta0_.arrival_time as arrival_3_2_,
        flightdeta0_.departure_date as departur4_2_,
        flightdeta0_.departur_time as departur5_2_,
        flightdeta0_.destination as destinat6_2_,
        flightdeta0_.flight_name as flight_n7_2_,
        flightdeta0_.seats_available as seats_av8_2_,
        flightdeta0_.source as source9_2_ 
    from
        flight_details flightdeta0_
Result set row: 0
Result row: EntityKey[com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2000]
Result set row: 1
Result row: EntityKey[com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2001]
Result set row: 2
Result row: EntityKey[com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2003]
Resolving associations for [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2000]
Done materializing entity [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2000]
Resolving associations for [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2001]
Done materializing entity [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2001]
Resolving associations for [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2003]
Done materializing entity [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2003]
Initiating JDBC connection release from afterTransaction
HHH000031: Closing
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@a09303] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@663f237a]
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2000       Indigo        Vizag   to    Banglore        2020-07-08        09:00:00      2020-07-08     11:00:00    10(Seats Available)
2001       AirAsia        Vizag   to    Hyderabd        2020-12-01        08:00:00      2020-12-01     10:00:00    20(Seats Available)
2003       SpiceJet        Chennai   to    Banglore        2020-12-31        21:00:00      2020-12-31     23:00:00    25(Seats Available)
1.   Search Flight By Source
2.   Search Flight By Destination
3.   Search Flight By Name
4.   View All Flight Details
5.   Book The Flight
6.   Cancel The Tickets
7.   Logout
Enter User Id : 
Enter Flight Id : 
Enter No of seats : 
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=TestPersistence, explicit-provider=null] against incoming persistence unit name [TestPersistence]
No PersistenceProvider explicitly requested, assuming Hibernate
PersistenceUnitInfo [
	name: TestPersistence
	persistence provider classname: null
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/DELL/eclipse-workspace/airlinereservationsystemjpawithhibernate/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: rootpassword
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: update
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@2de56eb2
Adding type registration boolean -> org.hibernate.type.BooleanType@2de56eb2
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2de56eb2
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3cce5371
Adding type registration true_false -> org.hibernate.type.TrueFalseType@5b38c1ec
Adding type registration yes_no -> org.hibernate.type.YesNoType@55cb6996
Adding type registration byte -> org.hibernate.type.ByteType@38467116
Adding type registration byte -> org.hibernate.type.ByteType@38467116
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@38467116
Adding type registration character -> org.hibernate.type.CharacterType@5e7cd6cc
Adding type registration char -> org.hibernate.type.CharacterType@5e7cd6cc
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5e7cd6cc
Adding type registration short -> org.hibernate.type.ShortType@3feb2dda
Adding type registration short -> org.hibernate.type.ShortType@3feb2dda
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3feb2dda
Adding type registration integer -> org.hibernate.type.IntegerType@69c81773
Adding type registration int -> org.hibernate.type.IntegerType@69c81773
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@69c81773
Adding type registration long -> org.hibernate.type.LongType@5884a914
Adding type registration long -> org.hibernate.type.LongType@5884a914
Adding type registration java.lang.Long -> org.hibernate.type.LongType@5884a914
Adding type registration float -> org.hibernate.type.FloatType@aba625
Adding type registration float -> org.hibernate.type.FloatType@aba625
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@aba625
Adding type registration double -> org.hibernate.type.DoubleType@3932c79a
Adding type registration double -> org.hibernate.type.DoubleType@3932c79a
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3932c79a
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5db6b9cd
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5db6b9cd
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@58e1d9d
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@58e1d9d
Adding type registration string -> org.hibernate.type.StringType@69504ae9
Adding type registration java.lang.String -> org.hibernate.type.StringType@69504ae9
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7eecb5b8
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5c86a017
Adding type registration url -> org.hibernate.type.UrlType@4dc27487
Adding type registration java.net.URL -> org.hibernate.type.UrlType@4dc27487
Adding type registration Duration -> org.hibernate.type.DurationType@7dfb0c0f
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7dfb0c0f
Adding type registration Instant -> org.hibernate.type.InstantType@14bdbc74
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@14bdbc74
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@24c1b2d2
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@24c1b2d2
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1df8da7a
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1df8da7a
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1c9b0314
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1c9b0314
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f58853c
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f58853c
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@13d73f29
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@13d73f29
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5be1d0a4
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5be1d0a4
Adding type registration date -> org.hibernate.type.DateType@4470fbd6
Adding type registration java.sql.Date -> org.hibernate.type.DateType@4470fbd6
Adding type registration time -> org.hibernate.type.TimeType@3b6d844d
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3b6d844d
Adding type registration timestamp -> org.hibernate.type.TimestampType@4ee203eb
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4ee203eb
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4ee203eb
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3e78b6a5
Adding type registration calendar -> org.hibernate.type.CalendarType@18f8cd79
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@18f8cd79
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@18f8cd79
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6cc4cdb9
Adding type registration locale -> org.hibernate.type.LocaleType@6bb4dd34
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6bb4dd34
Adding type registration currency -> org.hibernate.type.CurrencyType@4a07d605
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4a07d605
Adding type registration timezone -> org.hibernate.type.TimeZoneType@68878f6d
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@68878f6d
Adding type registration class -> org.hibernate.type.ClassType@78fa769e
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@78fa769e
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@238d68ff
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@238d68ff
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@9cb8225
Adding type registration binary -> org.hibernate.type.BinaryType@7d61eb55
Adding type registration byte[] -> org.hibernate.type.BinaryType@7d61eb55
Adding type registration [B -> org.hibernate.type.BinaryType@7d61eb55
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@638ef7ed
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@638ef7ed
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@638ef7ed
Adding type registration row_version -> org.hibernate.type.RowVersionType@1f760b47
Adding type registration image -> org.hibernate.type.ImageType@33f676f6
Adding type registration characters -> org.hibernate.type.CharArrayType@81d9a72
Adding type registration char[] -> org.hibernate.type.CharArrayType@81d9a72
Adding type registration [C -> org.hibernate.type.CharArrayType@81d9a72
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@13df2a8c
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@13df2a8c
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@13df2a8c
Adding type registration text -> org.hibernate.type.TextType@7de62196
Adding type registration ntext -> org.hibernate.type.NTextType@35a3d49f
Adding type registration blob -> org.hibernate.type.BlobType@19b843ba
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@19b843ba
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e13529a
Adding type registration clob -> org.hibernate.type.ClobType@dc9876b
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@dc9876b
Adding type registration nclob -> org.hibernate.type.NClobType@3b5fad2d
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3b5fad2d
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@102cec62
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@43015c69
Adding type registration serializable -> org.hibernate.type.SerializableType@cd1e646
Adding type registration object -> org.hibernate.type.ObjectType@44be0077
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@44be0077
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6a1ef65c
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@72976b4
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@726934e2
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1319bc2a
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@e280403
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@42f85fa4
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@798dad3d
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@27abb6ca
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@696db620] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6968c1d6] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7d986d83]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
HHH10001001: Connection properties: {password=rootpassword, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.47 ( Revision: fe1903b1ecb4a96a917f7ed3190d80c049b1de29 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5d94a2dc] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@cedee22]
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name AirlineUsers
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers on table airline_users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=email_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property emailId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:emailId]
building SimpleValue for emailId
Building property emailId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=mobile_no, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property mobileNo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:mobileNo]
building SimpleValue for mobileNo
Building property mobileNo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=role, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property role with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:role]
building SimpleValue for role
Building property role
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name BookingStatus
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus on table booking_status
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=ticket_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property ticketId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:ticketId]
building SimpleValue for ticketId
Building property ticketId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(ticket_id)]), ticketId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=airlineUsers, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property airlineUsers with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:airlineUsers]
building SimpleValue for airlineUsers
Building property airlineUsers
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flightDetails, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightDetails with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightDetails]
building SimpleValue for flightDetails
Building property flightDetails
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightId]
building SimpleValue for flightId
Building property flightId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=no_of_seats_booked, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsbooked with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:noofseatsbooked]
building SimpleValue for noofseatsbooked
Building property noofseatsbooked
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name FlightDetails
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails on table flight_details
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightId]
building SimpleValue for flightId
Building property flightId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(flight_id)]), flightId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalDate]
building SimpleValue for arrivalDate
Building property arrivalDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalTime]
building SimpleValue for arrivalTime
Building property arrivalTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departure_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureDate]
building SimpleValue for departureDate
Building property departureDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departur_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureTime]
building SimpleValue for departureTime
Building property departureTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=destination, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property destination with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:destination]
building SimpleValue for destination
Building property destination
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightName]
building SimpleValue for flightName
Building property flightName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=seats_available, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsavailable with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:noofseatsavailable]
building SimpleValue for noofseatsavailable
Building property noofseatsavailable
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=source, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property source with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:source]
building SimpleValue for source
Building property source
Starting fillSimpleValue for id
Starting fillSimpleValue for emailId
Starting fillSimpleValue for mobileNo
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for role
Starting fillSimpleValue for ticketId
Starting fillSimpleValue for airlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Starting fillSimpleValue for flightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Starting fillSimpleValue for flightId
Starting fillSimpleValue for id
Starting fillSimpleValue for noofseatsbooked
Starting fillSimpleValue for flightId
Starting fillSimpleValue for arrivalDate
Starting fillSimpleValue for arrivalTime
Starting fillSimpleValue for departureDate
Starting fillSimpleValue for departureTime
Starting fillSimpleValue for destination
Starting fillSimpleValue for flightName
Starting fillSimpleValue for noofseatsavailable
Starting fillSimpleValue for source
Forcing column [id] to be non-null as it is part of the primary key for table [airline_users]
Forcing column [ticket_id] to be non-null as it is part of the primary key for table [booking_status]
Forcing column [flight_id] to be non-null as it is part of the primary key for table [flight_details]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: disabled
JPA compliance - query : 
JPA compliance - closed-handling : 
JPA compliance - lists : 
JPA compliance - transactions : 
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate\target\classes;C:\Users\DELL\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\DELL\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\DELL\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\DELL\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\DELL\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\DELL\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\DELL\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\DELL\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\DELL\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\DELL\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\DELL\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\DELL\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\DELL\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\DELL\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-entitymanager\5.4.2.Final\hibernate-entitymanager-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\projectlombok\lombok\1.18.8\lombok-1.18.8.jar;C:\Users\DELL\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, javax.persistence.jdbc.user=****, java.vm.specification.version=14, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.1\bin, sun.java.command=com.javafullstackfeb.airlinereservationsystem.controller.MainController, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\DELL, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=C:\Program Files\Java\jdk-14.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.1+7, user.name=DELL, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=TestPersistence, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\DELL\AppData\Local\Temp\, java.version=14.0.1, user.dir=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@101ca8da, java.library.path=C:\Program Files\Java\jdk-14.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_251/bin/server;C:/Program Files/Java/jre1.8.0_251/bin;C:/Program Files/Java/jre1.8.0_251/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_251\bin;C:\Program Files\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\Users\DELL\AppData\Local\Microsoft\WindowsApps;;C:\Users\DELL\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.1+7, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5d94a2dc] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@20a967fe]
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
 Version select: select id from airline_users where id =?
 Snapshot select: select airlineuse_.id, airlineuse_.email_id as email_id2_0_, airlineuse_.mobile_no as mobile_n3_0_, airlineuse_.name as name4_0_, airlineuse_.password as password5_0_, airlineuse_.role as role6_0_ from airline_users airlineuse_ where airlineuse_.id=?
 Insert 0: insert into airline_users (email_id, mobile_no, name, password, role, id) values (?, ?, ?, ?, ?, ?)
 Update 0: update airline_users set email_id=?, mobile_no=?, name=?, password=?, role=? where id=?
 Delete 0: delete from airline_users where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b4d4327]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [NONE]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@671ea6ff]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [READ]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
 Version select: select ticket_id from booking_status where ticket_id =?
 Snapshot select: select bookingsta_.ticket_id, bookingsta_.airlineUsers as airlineU2_1_, bookingsta_.flightDetails as flightDe3_1_, bookingsta_.flight_id as flight_i4_1_, bookingsta_.id as id5_1_, bookingsta_.no_of_seats_booked as no_of_se6_1_ from booking_status bookingsta_ where bookingsta_.ticket_id=?
 Insert 0: insert into booking_status (airlineUsers, flightDetails, flight_id, id, no_of_seats_booked, ticket_id) values (?, ?, ?, ?, ?, ?)
 Update 0: update booking_status set airlineUsers=?, flightDetails=?, flight_id=?, id=?, no_of_seats_booked=? where ticket_id=?
 Delete 0: delete from booking_status where ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5dc769f9]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [NONE]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9b5f3c7]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [READ]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
 Version select: select flight_id from flight_details where flight_id =?
 Snapshot select: select flightdeta_.flight_id, flightdeta_.arrival_date as arrival_2_2_, flightdeta_.arrival_time as arrival_3_2_, flightdeta_.departure_date as departur4_2_, flightdeta_.departur_time as departur5_2_, flightdeta_.destination as destinat6_2_, flightdeta_.flight_name as flight_n7_2_, flightdeta_.seats_available as seats_av8_2_, flightdeta_.source as source9_2_ from flight_details flightdeta_ where flightdeta_.flight_id=?
 Insert 0: insert into flight_details (arrival_date, arrival_time, departure_date, departur_time, destination, flight_name, seats_available, source, flight_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update flight_details set arrival_date=?, arrival_time=?, departure_date=?, departur_time=?, destination=?, flight_name=?, seats_available=?, source=? where flight_id=?
 Delete 0: delete from flight_details where flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61ae0d43]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [NONE]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@287ae90c]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [READ]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1526f71] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : airline_users
No alter strings for table : booking_status
No alter strings for table : flight_details
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: d08bfb55-ce49-4047-bfb4-1888862a8d49 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin

    select
        flightdeta0_.flight_id as flight_i1_2_0_,
        flightdeta0_.arrival_date as arrival_2_2_0_,
        flightdeta0_.arrival_time as arrival_3_2_0_,
        flightdeta0_.departure_date as departur4_2_0_,
        flightdeta0_.departur_time as departur5_2_0_,
        flightdeta0_.destination as destinat6_2_0_,
        flightdeta0_.flight_name as flight_n7_2_0_,
        flightdeta0_.seats_available as seats_av8_2_0_,
        flightdeta0_.source as source9_2_0_ 
    from
        flight_details flightdeta0_ 
    where
        flightdeta0_.flight_id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2001]
Done materializing entity [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2001]
HHH000387: ResultSet's statement was not registered
Done entity load : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2001
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails{departureTime=10:00, flightName=AirAsia, arrivalTime=08:00, noofseatsavailable=20, destination=Hyderabd, flightId=2001, departureDate=2020-12-01, source=Vizag, arrivalDate=2020-12-01}
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
begin

    select
        airlineuse0_.id as id1_0_0_,
        airlineuse0_.email_id as email_id2_0_0_,
        airlineuse0_.mobile_no as mobile_n3_0_0_,
        airlineuse0_.name as name4_0_0_,
        airlineuse0_.password as password5_0_0_,
        airlineuse0_.role as role6_0_0_ 
    from
        airline_users airlineuse0_ 
    where
        airlineuse0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers#5001]
Done materializing entity [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers#5001]
HHH000387: ResultSet's statement was not registered
Done entity load : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers#5001
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails{departureTime=10:00, flightName=AirAsia, arrivalTime=08:00, noofseatsavailable=20, destination=Hyderabd, flightId=2001, departureDate=2020-12-01, source=Vizag, arrivalDate=2020-12-01}
com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers{password=@Suni123, role=user, name=sunitha, emailId=sunitha@gmail.com, id=5001, mobileNo=9177897241}
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
begin
Generated identifier: 2140, using strategy: org.hibernate.id.Assigned
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 1 insertions, 0 updates, 0 deletions to 3 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails{departureTime=10:00, flightName=AirAsia, arrivalTime=08:00, noofseatsavailable=20, destination=Hyderabd, flightId=2001, departureDate=2020-12-01, source=Vizag, arrivalDate=2020-12-01}
com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus{noofseatsbooked=3, flightDetails=null, flightId=2001, id=5001, airlineUsers=null, ticketId=2140}
com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers{password=@Suni123, role=user, name=sunitha, emailId=sunitha@gmail.com, id=5001, mobileNo=9177897241}

    insert 
    into
        booking_status
        (airlineUsers, flightDetails, flight_id, id, no_of_seats_booked, ticket_id) 
    values
        (?, ?, ?, ?, ?, ?)
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
HHH000031: Closing
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@e09f1b6] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@20a967fe]
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Request placed to Airline Management 
2140    2001   5001   3
1.   Search Flight By Source
2.   Search Flight By Destination
3.   Search Flight By Name
4.   View All Flight Details
5.   Book The Flight
6.   Cancel The Tickets
7.   Logout
Enter User Id To Cancel The Ticket 
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=TestPersistence, explicit-provider=null] against incoming persistence unit name [TestPersistence]
No PersistenceProvider explicitly requested, assuming Hibernate
PersistenceUnitInfo [
	name: TestPersistence
	persistence provider classname: null
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/DELL/eclipse-workspace/airlinereservationsystemjpawithhibernate/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: rootpassword
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: update
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@2de56eb2
Adding type registration boolean -> org.hibernate.type.BooleanType@2de56eb2
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2de56eb2
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3cce5371
Adding type registration true_false -> org.hibernate.type.TrueFalseType@5b38c1ec
Adding type registration yes_no -> org.hibernate.type.YesNoType@55cb6996
Adding type registration byte -> org.hibernate.type.ByteType@38467116
Adding type registration byte -> org.hibernate.type.ByteType@38467116
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@38467116
Adding type registration character -> org.hibernate.type.CharacterType@5e7cd6cc
Adding type registration char -> org.hibernate.type.CharacterType@5e7cd6cc
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5e7cd6cc
Adding type registration short -> org.hibernate.type.ShortType@3feb2dda
Adding type registration short -> org.hibernate.type.ShortType@3feb2dda
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3feb2dda
Adding type registration integer -> org.hibernate.type.IntegerType@69c81773
Adding type registration int -> org.hibernate.type.IntegerType@69c81773
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@69c81773
Adding type registration long -> org.hibernate.type.LongType@5884a914
Adding type registration long -> org.hibernate.type.LongType@5884a914
Adding type registration java.lang.Long -> org.hibernate.type.LongType@5884a914
Adding type registration float -> org.hibernate.type.FloatType@aba625
Adding type registration float -> org.hibernate.type.FloatType@aba625
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@aba625
Adding type registration double -> org.hibernate.type.DoubleType@3932c79a
Adding type registration double -> org.hibernate.type.DoubleType@3932c79a
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3932c79a
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5db6b9cd
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5db6b9cd
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@58e1d9d
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@58e1d9d
Adding type registration string -> org.hibernate.type.StringType@69504ae9
Adding type registration java.lang.String -> org.hibernate.type.StringType@69504ae9
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7eecb5b8
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5c86a017
Adding type registration url -> org.hibernate.type.UrlType@4dc27487
Adding type registration java.net.URL -> org.hibernate.type.UrlType@4dc27487
Adding type registration Duration -> org.hibernate.type.DurationType@7dfb0c0f
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7dfb0c0f
Adding type registration Instant -> org.hibernate.type.InstantType@14bdbc74
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@14bdbc74
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@24c1b2d2
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@24c1b2d2
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1df8da7a
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1df8da7a
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1c9b0314
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1c9b0314
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f58853c
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f58853c
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@13d73f29
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@13d73f29
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5be1d0a4
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5be1d0a4
Adding type registration date -> org.hibernate.type.DateType@4470fbd6
Adding type registration java.sql.Date -> org.hibernate.type.DateType@4470fbd6
Adding type registration time -> org.hibernate.type.TimeType@3b6d844d
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3b6d844d
Adding type registration timestamp -> org.hibernate.type.TimestampType@4ee203eb
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4ee203eb
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4ee203eb
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3e78b6a5
Adding type registration calendar -> org.hibernate.type.CalendarType@18f8cd79
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@18f8cd79
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@18f8cd79
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6cc4cdb9
Adding type registration locale -> org.hibernate.type.LocaleType@6bb4dd34
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6bb4dd34
Adding type registration currency -> org.hibernate.type.CurrencyType@4a07d605
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4a07d605
Adding type registration timezone -> org.hibernate.type.TimeZoneType@68878f6d
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@68878f6d
Adding type registration class -> org.hibernate.type.ClassType@78fa769e
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@78fa769e
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@238d68ff
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@238d68ff
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@9cb8225
Adding type registration binary -> org.hibernate.type.BinaryType@7d61eb55
Adding type registration byte[] -> org.hibernate.type.BinaryType@7d61eb55
Adding type registration [B -> org.hibernate.type.BinaryType@7d61eb55
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@638ef7ed
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@638ef7ed
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@638ef7ed
Adding type registration row_version -> org.hibernate.type.RowVersionType@1f760b47
Adding type registration image -> org.hibernate.type.ImageType@33f676f6
Adding type registration characters -> org.hibernate.type.CharArrayType@81d9a72
Adding type registration char[] -> org.hibernate.type.CharArrayType@81d9a72
Adding type registration [C -> org.hibernate.type.CharArrayType@81d9a72
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@13df2a8c
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@13df2a8c
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@13df2a8c
Adding type registration text -> org.hibernate.type.TextType@7de62196
Adding type registration ntext -> org.hibernate.type.NTextType@35a3d49f
Adding type registration blob -> org.hibernate.type.BlobType@19b843ba
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@19b843ba
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e13529a
Adding type registration clob -> org.hibernate.type.ClobType@dc9876b
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@dc9876b
Adding type registration nclob -> org.hibernate.type.NClobType@3b5fad2d
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3b5fad2d
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@102cec62
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@43015c69
Adding type registration serializable -> org.hibernate.type.SerializableType@cd1e646
Adding type registration object -> org.hibernate.type.ObjectType@44be0077
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@44be0077
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5820070c
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@34208baa
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@71370fec
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6707a4bf
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3fc7c734
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@f0a66bd
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@460b50df
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1cf336fd
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1d0cac30] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@41ef1ea2] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5dfe23e8]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
HHH10001001: Connection properties: {password=rootpassword, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.47 ( Revision: fe1903b1ecb4a96a917f7ed3190d80c049b1de29 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@429aeac1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@79eeff87]
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name AirlineUsers
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers on table airline_users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=email_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property emailId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:emailId]
building SimpleValue for emailId
Building property emailId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=mobile_no, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property mobileNo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:mobileNo]
building SimpleValue for mobileNo
Building property mobileNo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=role, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property role with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:role]
building SimpleValue for role
Building property role
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name BookingStatus
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus on table booking_status
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=ticket_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property ticketId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:ticketId]
building SimpleValue for ticketId
Building property ticketId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(ticket_id)]), ticketId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=airlineUsers, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property airlineUsers with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:airlineUsers]
building SimpleValue for airlineUsers
Building property airlineUsers
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flightDetails, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightDetails with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightDetails]
building SimpleValue for flightDetails
Building property flightDetails
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightId]
building SimpleValue for flightId
Building property flightId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=no_of_seats_booked, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsbooked with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:noofseatsbooked]
building SimpleValue for noofseatsbooked
Building property noofseatsbooked
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name FlightDetails
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails on table flight_details
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightId]
building SimpleValue for flightId
Building property flightId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(flight_id)]), flightId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalDate]
building SimpleValue for arrivalDate
Building property arrivalDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalTime]
building SimpleValue for arrivalTime
Building property arrivalTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departure_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureDate]
building SimpleValue for departureDate
Building property departureDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departur_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureTime]
building SimpleValue for departureTime
Building property departureTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=destination, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property destination with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:destination]
building SimpleValue for destination
Building property destination
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightName]
building SimpleValue for flightName
Building property flightName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=seats_available, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsavailable with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:noofseatsavailable]
building SimpleValue for noofseatsavailable
Building property noofseatsavailable
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=source, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property source with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:source]
building SimpleValue for source
Building property source
Starting fillSimpleValue for id
Starting fillSimpleValue for emailId
Starting fillSimpleValue for mobileNo
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for role
Starting fillSimpleValue for ticketId
Starting fillSimpleValue for airlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Starting fillSimpleValue for flightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Starting fillSimpleValue for flightId
Starting fillSimpleValue for id
Starting fillSimpleValue for noofseatsbooked
Starting fillSimpleValue for flightId
Starting fillSimpleValue for arrivalDate
Starting fillSimpleValue for arrivalTime
Starting fillSimpleValue for departureDate
Starting fillSimpleValue for departureTime
Starting fillSimpleValue for destination
Starting fillSimpleValue for flightName
Starting fillSimpleValue for noofseatsavailable
Starting fillSimpleValue for source
Forcing column [id] to be non-null as it is part of the primary key for table [airline_users]
Forcing column [ticket_id] to be non-null as it is part of the primary key for table [booking_status]
Forcing column [flight_id] to be non-null as it is part of the primary key for table [flight_details]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: disabled
JPA compliance - query : 
JPA compliance - closed-handling : 
JPA compliance - lists : 
JPA compliance - transactions : 
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate\target\classes;C:\Users\DELL\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\DELL\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\DELL\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\DELL\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\DELL\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\DELL\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\DELL\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\DELL\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\DELL\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\DELL\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\DELL\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\DELL\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\DELL\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\DELL\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-entitymanager\5.4.2.Final\hibernate-entitymanager-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\projectlombok\lombok\1.18.8\lombok-1.18.8.jar;C:\Users\DELL\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, javax.persistence.jdbc.user=****, java.vm.specification.version=14, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.1\bin, sun.java.command=com.javafullstackfeb.airlinereservationsystem.controller.MainController, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\DELL, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=C:\Program Files\Java\jdk-14.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.1+7, user.name=DELL, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=TestPersistence, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\DELL\AppData\Local\Temp\, java.version=14.0.1, user.dir=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@c7f4457, java.library.path=C:\Program Files\Java\jdk-14.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_251/bin/server;C:/Program Files/Java/jre1.8.0_251/bin;C:/Program Files/Java/jre1.8.0_251/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_251\bin;C:\Program Files\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\Users\DELL\AppData\Local\Microsoft\WindowsApps;;C:\Users\DELL\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.1+7, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@429aeac1] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@12e12ac9]
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
 Version select: select id from airline_users where id =?
 Snapshot select: select airlineuse_.id, airlineuse_.email_id as email_id2_0_, airlineuse_.mobile_no as mobile_n3_0_, airlineuse_.name as name4_0_, airlineuse_.password as password5_0_, airlineuse_.role as role6_0_ from airline_users airlineuse_ where airlineuse_.id=?
 Insert 0: insert into airline_users (email_id, mobile_no, name, password, role, id) values (?, ?, ?, ?, ?, ?)
 Update 0: update airline_users set email_id=?, mobile_no=?, name=?, password=?, role=? where id=?
 Delete 0: delete from airline_users where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@667dcaad]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [NONE]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c748a15]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [READ]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
 Version select: select ticket_id from booking_status where ticket_id =?
 Snapshot select: select bookingsta_.ticket_id, bookingsta_.airlineUsers as airlineU2_1_, bookingsta_.flightDetails as flightDe3_1_, bookingsta_.flight_id as flight_i4_1_, bookingsta_.id as id5_1_, bookingsta_.no_of_seats_booked as no_of_se6_1_ from booking_status bookingsta_ where bookingsta_.ticket_id=?
 Insert 0: insert into booking_status (airlineUsers, flightDetails, flight_id, id, no_of_seats_booked, ticket_id) values (?, ?, ?, ?, ?, ?)
 Update 0: update booking_status set airlineUsers=?, flightDetails=?, flight_id=?, id=?, no_of_seats_booked=? where ticket_id=?
 Delete 0: delete from booking_status where ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@115dcaea]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [NONE]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45117dd]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [READ]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
 Version select: select flight_id from flight_details where flight_id =?
 Snapshot select: select flightdeta_.flight_id, flightdeta_.arrival_date as arrival_2_2_, flightdeta_.arrival_time as arrival_3_2_, flightdeta_.departure_date as departur4_2_, flightdeta_.departur_time as departur5_2_, flightdeta_.destination as destinat6_2_, flightdeta_.flight_name as flight_n7_2_, flightdeta_.seats_available as seats_av8_2_, flightdeta_.source as source9_2_ from flight_details flightdeta_ where flightdeta_.flight_id=?
 Insert 0: insert into flight_details (arrival_date, arrival_time, departure_date, departur_time, destination, flight_name, seats_available, source, flight_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update flight_details set arrival_date=?, arrival_time=?, departure_date=?, departur_time=?, destination=?, flight_name=?, seats_available=?, source=? where flight_id=?
 Delete 0: delete from flight_details where flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@834e986]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [NONE]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@604d23fa]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [READ]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@79980d8d] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : airline_users
No alter strings for table : booking_status
No alter strings for table : flight_details
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 77f6818f-4682-4dc4-8b2d-240b05000061 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin

    select
        bookingsta0_.ticket_id as ticket_i1_1_0_,
        bookingsta0_.airlineUsers as airlineU2_1_0_,
        bookingsta0_.flightDetails as flightDe3_1_0_,
        bookingsta0_.flight_id as flight_i4_1_0_,
        bookingsta0_.id as id5_1_0_,
        bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ 
    from
        booking_status bookingsta0_ 
    where
        bookingsta0_.ticket_id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus#2140]
Done materializing entity [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus#2140]
HHH000387: ResultSet's statement was not registered
Done entity load : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus#2140
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus{noofseatsbooked=3, flightDetails=null, flightId=2001, id=5001, airlineUsers=null, ticketId=2140}

    delete 
    from
        booking_status 
    where
        ticket_id=?
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
HHH000420: Closing un-released batch
HHH000031: Closing
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@535a518c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@12e12ac9]
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=TestPersistence, explicit-provider=null] against incoming persistence unit name [TestPersistence]
No PersistenceProvider explicitly requested, assuming Hibernate
PersistenceUnitInfo [
	name: TestPersistence
	persistence provider classname: null
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/DELL/eclipse-workspace/airlinereservationsystemjpawithhibernate/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: rootpassword
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: update
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@2de56eb2
Adding type registration boolean -> org.hibernate.type.BooleanType@2de56eb2
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2de56eb2
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3cce5371
Adding type registration true_false -> org.hibernate.type.TrueFalseType@5b38c1ec
Adding type registration yes_no -> org.hibernate.type.YesNoType@55cb6996
Adding type registration byte -> org.hibernate.type.ByteType@38467116
Adding type registration byte -> org.hibernate.type.ByteType@38467116
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@38467116
Adding type registration character -> org.hibernate.type.CharacterType@5e7cd6cc
Adding type registration char -> org.hibernate.type.CharacterType@5e7cd6cc
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5e7cd6cc
Adding type registration short -> org.hibernate.type.ShortType@3feb2dda
Adding type registration short -> org.hibernate.type.ShortType@3feb2dda
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3feb2dda
Adding type registration integer -> org.hibernate.type.IntegerType@69c81773
Adding type registration int -> org.hibernate.type.IntegerType@69c81773
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@69c81773
Adding type registration long -> org.hibernate.type.LongType@5884a914
Adding type registration long -> org.hibernate.type.LongType@5884a914
Adding type registration java.lang.Long -> org.hibernate.type.LongType@5884a914
Adding type registration float -> org.hibernate.type.FloatType@aba625
Adding type registration float -> org.hibernate.type.FloatType@aba625
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@aba625
Adding type registration double -> org.hibernate.type.DoubleType@3932c79a
Adding type registration double -> org.hibernate.type.DoubleType@3932c79a
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3932c79a
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5db6b9cd
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5db6b9cd
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@58e1d9d
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@58e1d9d
Adding type registration string -> org.hibernate.type.StringType@69504ae9
Adding type registration java.lang.String -> org.hibernate.type.StringType@69504ae9
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7eecb5b8
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5c86a017
Adding type registration url -> org.hibernate.type.UrlType@4dc27487
Adding type registration java.net.URL -> org.hibernate.type.UrlType@4dc27487
Adding type registration Duration -> org.hibernate.type.DurationType@7dfb0c0f
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7dfb0c0f
Adding type registration Instant -> org.hibernate.type.InstantType@14bdbc74
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@14bdbc74
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@24c1b2d2
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@24c1b2d2
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1df8da7a
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1df8da7a
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1c9b0314
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1c9b0314
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f58853c
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f58853c
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@13d73f29
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@13d73f29
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5be1d0a4
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5be1d0a4
Adding type registration date -> org.hibernate.type.DateType@4470fbd6
Adding type registration java.sql.Date -> org.hibernate.type.DateType@4470fbd6
Adding type registration time -> org.hibernate.type.TimeType@3b6d844d
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3b6d844d
Adding type registration timestamp -> org.hibernate.type.TimestampType@4ee203eb
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4ee203eb
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4ee203eb
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3e78b6a5
Adding type registration calendar -> org.hibernate.type.CalendarType@18f8cd79
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@18f8cd79
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@18f8cd79
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6cc4cdb9
Adding type registration locale -> org.hibernate.type.LocaleType@6bb4dd34
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6bb4dd34
Adding type registration currency -> org.hibernate.type.CurrencyType@4a07d605
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4a07d605
Adding type registration timezone -> org.hibernate.type.TimeZoneType@68878f6d
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@68878f6d
Adding type registration class -> org.hibernate.type.ClassType@78fa769e
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@78fa769e
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@238d68ff
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@238d68ff
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@9cb8225
Adding type registration binary -> org.hibernate.type.BinaryType@7d61eb55
Adding type registration byte[] -> org.hibernate.type.BinaryType@7d61eb55
Adding type registration [B -> org.hibernate.type.BinaryType@7d61eb55
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@638ef7ed
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@638ef7ed
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@638ef7ed
Adding type registration row_version -> org.hibernate.type.RowVersionType@1f760b47
Adding type registration image -> org.hibernate.type.ImageType@33f676f6
Adding type registration characters -> org.hibernate.type.CharArrayType@81d9a72
Adding type registration char[] -> org.hibernate.type.CharArrayType@81d9a72
Adding type registration [C -> org.hibernate.type.CharArrayType@81d9a72
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@13df2a8c
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@13df2a8c
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@13df2a8c
Adding type registration text -> org.hibernate.type.TextType@7de62196
Adding type registration ntext -> org.hibernate.type.NTextType@35a3d49f
Adding type registration blob -> org.hibernate.type.BlobType@19b843ba
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@19b843ba
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e13529a
Adding type registration clob -> org.hibernate.type.ClobType@dc9876b
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@dc9876b
Adding type registration nclob -> org.hibernate.type.NClobType@3b5fad2d
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3b5fad2d
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@102cec62
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@43015c69
Adding type registration serializable -> org.hibernate.type.SerializableType@cd1e646
Adding type registration object -> org.hibernate.type.ObjectType@44be0077
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@44be0077
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@64b70f41
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5f8d9767
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@16134476
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@62b09715
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3e214105
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@da4cf09
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1980a3f
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@67f63d26
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@536b71b4] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@789c3057] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@39941489]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
HHH10001001: Connection properties: {password=rootpassword, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.47 ( Revision: fe1903b1ecb4a96a917f7ed3190d80c049b1de29 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2b73bd6b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@157d3a45]
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name AirlineUsers
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers on table airline_users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=email_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property emailId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:emailId]
building SimpleValue for emailId
Building property emailId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=mobile_no, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property mobileNo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:mobileNo]
building SimpleValue for mobileNo
Building property mobileNo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=role, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property role with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:role]
building SimpleValue for role
Building property role
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name BookingStatus
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus on table booking_status
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=ticket_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property ticketId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:ticketId]
building SimpleValue for ticketId
Building property ticketId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(ticket_id)]), ticketId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=airlineUsers, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property airlineUsers with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:airlineUsers]
building SimpleValue for airlineUsers
Building property airlineUsers
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flightDetails, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightDetails with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightDetails]
building SimpleValue for flightDetails
Building property flightDetails
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightId]
building SimpleValue for flightId
Building property flightId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=no_of_seats_booked, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsbooked with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:noofseatsbooked]
building SimpleValue for noofseatsbooked
Building property noofseatsbooked
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name FlightDetails
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails on table flight_details
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightId]
building SimpleValue for flightId
Building property flightId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(flight_id)]), flightId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalDate]
building SimpleValue for arrivalDate
Building property arrivalDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalTime]
building SimpleValue for arrivalTime
Building property arrivalTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departure_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureDate]
building SimpleValue for departureDate
Building property departureDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departur_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureTime]
building SimpleValue for departureTime
Building property departureTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=destination, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property destination with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:destination]
building SimpleValue for destination
Building property destination
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightName]
building SimpleValue for flightName
Building property flightName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=seats_available, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsavailable with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:noofseatsavailable]
building SimpleValue for noofseatsavailable
Building property noofseatsavailable
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=source, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property source with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:source]
building SimpleValue for source
Building property source
Starting fillSimpleValue for id
Starting fillSimpleValue for emailId
Starting fillSimpleValue for mobileNo
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for role
Starting fillSimpleValue for ticketId
Starting fillSimpleValue for airlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Starting fillSimpleValue for flightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Starting fillSimpleValue for flightId
Starting fillSimpleValue for id
Starting fillSimpleValue for noofseatsbooked
Starting fillSimpleValue for flightId
Starting fillSimpleValue for arrivalDate
Starting fillSimpleValue for arrivalTime
Starting fillSimpleValue for departureDate
Starting fillSimpleValue for departureTime
Starting fillSimpleValue for destination
Starting fillSimpleValue for flightName
Starting fillSimpleValue for noofseatsavailable
Starting fillSimpleValue for source
Forcing column [id] to be non-null as it is part of the primary key for table [airline_users]
Forcing column [ticket_id] to be non-null as it is part of the primary key for table [booking_status]
Forcing column [flight_id] to be non-null as it is part of the primary key for table [flight_details]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: disabled
JPA compliance - query : 
JPA compliance - closed-handling : 
JPA compliance - lists : 
JPA compliance - transactions : 
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate\target\classes;C:\Users\DELL\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\DELL\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\DELL\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\DELL\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\DELL\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\DELL\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\DELL\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\DELL\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\DELL\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\DELL\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\DELL\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\DELL\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\DELL\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\DELL\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-entitymanager\5.4.2.Final\hibernate-entitymanager-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\projectlombok\lombok\1.18.8\lombok-1.18.8.jar;C:\Users\DELL\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, javax.persistence.jdbc.user=****, java.vm.specification.version=14, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.1\bin, sun.java.command=com.javafullstackfeb.airlinereservationsystem.controller.MainController, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\DELL, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=C:\Program Files\Java\jdk-14.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.1+7, user.name=DELL, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=TestPersistence, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\DELL\AppData\Local\Temp\, java.version=14.0.1, user.dir=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2f20f7ad, java.library.path=C:\Program Files\Java\jdk-14.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_251/bin/server;C:/Program Files/Java/jre1.8.0_251/bin;C:/Program Files/Java/jre1.8.0_251/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_251\bin;C:\Program Files\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\Users\DELL\AppData\Local\Microsoft\WindowsApps;;C:\Users\DELL\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.1+7, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2b73bd6b] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@45e617c4]
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
 Version select: select id from airline_users where id =?
 Snapshot select: select airlineuse_.id, airlineuse_.email_id as email_id2_0_, airlineuse_.mobile_no as mobile_n3_0_, airlineuse_.name as name4_0_, airlineuse_.password as password5_0_, airlineuse_.role as role6_0_ from airline_users airlineuse_ where airlineuse_.id=?
 Insert 0: insert into airline_users (email_id, mobile_no, name, password, role, id) values (?, ?, ?, ?, ?, ?)
 Update 0: update airline_users set email_id=?, mobile_no=?, name=?, password=?, role=? where id=?
 Delete 0: delete from airline_users where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e8b357d]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [NONE]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ea7a4c3]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [READ]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
 Version select: select ticket_id from booking_status where ticket_id =?
 Snapshot select: select bookingsta_.ticket_id, bookingsta_.airlineUsers as airlineU2_1_, bookingsta_.flightDetails as flightDe3_1_, bookingsta_.flight_id as flight_i4_1_, bookingsta_.id as id5_1_, bookingsta_.no_of_seats_booked as no_of_se6_1_ from booking_status bookingsta_ where bookingsta_.ticket_id=?
 Insert 0: insert into booking_status (airlineUsers, flightDetails, flight_id, id, no_of_seats_booked, ticket_id) values (?, ?, ?, ?, ?, ?)
 Update 0: update booking_status set airlineUsers=?, flightDetails=?, flight_id=?, id=?, no_of_seats_booked=? where ticket_id=?
 Delete 0: delete from booking_status where ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6af5b246]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [NONE]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2401856]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [READ]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
 Version select: select flight_id from flight_details where flight_id =?
 Snapshot select: select flightdeta_.flight_id, flightdeta_.arrival_date as arrival_2_2_, flightdeta_.arrival_time as arrival_3_2_, flightdeta_.departure_date as departur4_2_, flightdeta_.departur_time as departur5_2_, flightdeta_.destination as destinat6_2_, flightdeta_.flight_name as flight_n7_2_, flightdeta_.seats_available as seats_av8_2_, flightdeta_.source as source9_2_ from flight_details flightdeta_ where flightdeta_.flight_id=?
 Insert 0: insert into flight_details (arrival_date, arrival_time, departure_date, departur_time, destination, flight_name, seats_available, source, flight_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update flight_details set arrival_date=?, arrival_time=?, departure_date=?, departur_time=?, destination=?, flight_name=?, seats_available=?, source=? where flight_id=?
 Delete 0: delete from flight_details where flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a4f8009]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [NONE]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8054fe2]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [READ]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2d7637e6] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : airline_users
No alter strings for table : booking_status
No alter strings for table : flight_details
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: d89c8ca8-0397-4516-9a41-61052beccd32 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin

    select
        bookingsta0_.ticket_id as ticket_i1_1_0_,
        bookingsta0_.airlineUsers as airlineU2_1_0_,
        bookingsta0_.flightDetails as flightDe3_1_0_,
        bookingsta0_.flight_id as flight_i4_1_0_,
        bookingsta0_.id as id5_1_0_,
        bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ 
    from
        booking_status bookingsta0_ 
    where
        bookingsta0_.ticket_id=?
HHH000387: ResultSet's statement was not registered
Done entity load : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus#2140
JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:314)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:206)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:381)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:191)
	at org.hibernate.internal.SessionImpl.remove(SessionImpl.java:3513)
	at com.javafullstackfeb.airlinereservationsystem.dao.DaoImpl.cancelTicket(DaoImpl.java:260)
	at com.javafullstackfeb.airlinereservationsystem.service.ServiceImpl.cancelTicket(ServiceImpl.java:69)
	at com.javafullstackfeb.airlinereservationsystem.controller.SubAirlineController.arsController(SubAirlineController.java:592)
	at com.javafullstackfeb.airlinereservationsystem.controller.MainController.main(MainController.java:9)
rolling back
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
HHH000031: Closing
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@388c519] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@45e617c4]
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
TicketId Can't Be Removed or Deleted from Booking Details
1.   Search Flight By Source
2.   Search Flight By Destination
3.   Search Flight By Name
4.   View All Flight Details
5.   Book The Flight
6.   Cancel The Tickets
7.   Logout
Enter User Id : 
Enter Flight Id : 
Enter No of seats : 
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=TestPersistence, explicit-provider=null] against incoming persistence unit name [TestPersistence]
No PersistenceProvider explicitly requested, assuming Hibernate
PersistenceUnitInfo [
	name: TestPersistence
	persistence provider classname: null
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/DELL/eclipse-workspace/airlinereservationsystemjpawithhibernate/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: rootpassword
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: update
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@2de56eb2
Adding type registration boolean -> org.hibernate.type.BooleanType@2de56eb2
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2de56eb2
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3cce5371
Adding type registration true_false -> org.hibernate.type.TrueFalseType@5b38c1ec
Adding type registration yes_no -> org.hibernate.type.YesNoType@55cb6996
Adding type registration byte -> org.hibernate.type.ByteType@38467116
Adding type registration byte -> org.hibernate.type.ByteType@38467116
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@38467116
Adding type registration character -> org.hibernate.type.CharacterType@5e7cd6cc
Adding type registration char -> org.hibernate.type.CharacterType@5e7cd6cc
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5e7cd6cc
Adding type registration short -> org.hibernate.type.ShortType@3feb2dda
Adding type registration short -> org.hibernate.type.ShortType@3feb2dda
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3feb2dda
Adding type registration integer -> org.hibernate.type.IntegerType@69c81773
Adding type registration int -> org.hibernate.type.IntegerType@69c81773
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@69c81773
Adding type registration long -> org.hibernate.type.LongType@5884a914
Adding type registration long -> org.hibernate.type.LongType@5884a914
Adding type registration java.lang.Long -> org.hibernate.type.LongType@5884a914
Adding type registration float -> org.hibernate.type.FloatType@aba625
Adding type registration float -> org.hibernate.type.FloatType@aba625
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@aba625
Adding type registration double -> org.hibernate.type.DoubleType@3932c79a
Adding type registration double -> org.hibernate.type.DoubleType@3932c79a
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3932c79a
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5db6b9cd
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5db6b9cd
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@58e1d9d
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@58e1d9d
Adding type registration string -> org.hibernate.type.StringType@69504ae9
Adding type registration java.lang.String -> org.hibernate.type.StringType@69504ae9
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7eecb5b8
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5c86a017
Adding type registration url -> org.hibernate.type.UrlType@4dc27487
Adding type registration java.net.URL -> org.hibernate.type.UrlType@4dc27487
Adding type registration Duration -> org.hibernate.type.DurationType@7dfb0c0f
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7dfb0c0f
Adding type registration Instant -> org.hibernate.type.InstantType@14bdbc74
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@14bdbc74
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@24c1b2d2
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@24c1b2d2
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1df8da7a
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1df8da7a
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1c9b0314
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1c9b0314
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f58853c
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f58853c
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@13d73f29
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@13d73f29
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5be1d0a4
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5be1d0a4
Adding type registration date -> org.hibernate.type.DateType@4470fbd6
Adding type registration java.sql.Date -> org.hibernate.type.DateType@4470fbd6
Adding type registration time -> org.hibernate.type.TimeType@3b6d844d
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3b6d844d
Adding type registration timestamp -> org.hibernate.type.TimestampType@4ee203eb
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4ee203eb
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4ee203eb
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3e78b6a5
Adding type registration calendar -> org.hibernate.type.CalendarType@18f8cd79
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@18f8cd79
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@18f8cd79
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6cc4cdb9
Adding type registration locale -> org.hibernate.type.LocaleType@6bb4dd34
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6bb4dd34
Adding type registration currency -> org.hibernate.type.CurrencyType@4a07d605
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4a07d605
Adding type registration timezone -> org.hibernate.type.TimeZoneType@68878f6d
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@68878f6d
Adding type registration class -> org.hibernate.type.ClassType@78fa769e
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@78fa769e
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@238d68ff
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@238d68ff
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@9cb8225
Adding type registration binary -> org.hibernate.type.BinaryType@7d61eb55
Adding type registration byte[] -> org.hibernate.type.BinaryType@7d61eb55
Adding type registration [B -> org.hibernate.type.BinaryType@7d61eb55
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@638ef7ed
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@638ef7ed
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@638ef7ed
Adding type registration row_version -> org.hibernate.type.RowVersionType@1f760b47
Adding type registration image -> org.hibernate.type.ImageType@33f676f6
Adding type registration characters -> org.hibernate.type.CharArrayType@81d9a72
Adding type registration char[] -> org.hibernate.type.CharArrayType@81d9a72
Adding type registration [C -> org.hibernate.type.CharArrayType@81d9a72
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@13df2a8c
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@13df2a8c
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@13df2a8c
Adding type registration text -> org.hibernate.type.TextType@7de62196
Adding type registration ntext -> org.hibernate.type.NTextType@35a3d49f
Adding type registration blob -> org.hibernate.type.BlobType@19b843ba
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@19b843ba
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e13529a
Adding type registration clob -> org.hibernate.type.ClobType@dc9876b
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@dc9876b
Adding type registration nclob -> org.hibernate.type.NClobType@3b5fad2d
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3b5fad2d
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@102cec62
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@43015c69
Adding type registration serializable -> org.hibernate.type.SerializableType@cd1e646
Adding type registration object -> org.hibernate.type.ObjectType@44be0077
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@44be0077
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@9b47400
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@747835f5
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@594131f2
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@51d0ec6f
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7bee8621
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4e0cc334
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1e12a5a6
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4877919f
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@47a7c93e] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6f9ab79d] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@64ae105d]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
HHH10001001: Connection properties: {password=rootpassword, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.47 ( Revision: fe1903b1ecb4a96a917f7ed3190d80c049b1de29 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@31acfd4e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5f726750]
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name AirlineUsers
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers on table airline_users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=email_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property emailId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:emailId]
building SimpleValue for emailId
Building property emailId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=mobile_no, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property mobileNo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:mobileNo]
building SimpleValue for mobileNo
Building property mobileNo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=role, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property role with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:role]
building SimpleValue for role
Building property role
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name BookingStatus
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus on table booking_status
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=ticket_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property ticketId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:ticketId]
building SimpleValue for ticketId
Building property ticketId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(ticket_id)]), ticketId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=airlineUsers, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property airlineUsers with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:airlineUsers]
building SimpleValue for airlineUsers
Building property airlineUsers
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flightDetails, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightDetails with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightDetails]
building SimpleValue for flightDetails
Building property flightDetails
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightId]
building SimpleValue for flightId
Building property flightId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=no_of_seats_booked, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsbooked with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:noofseatsbooked]
building SimpleValue for noofseatsbooked
Building property noofseatsbooked
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name FlightDetails
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails on table flight_details
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightId]
building SimpleValue for flightId
Building property flightId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(flight_id)]), flightId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalDate]
building SimpleValue for arrivalDate
Building property arrivalDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalTime]
building SimpleValue for arrivalTime
Building property arrivalTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departure_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureDate]
building SimpleValue for departureDate
Building property departureDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departur_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureTime]
building SimpleValue for departureTime
Building property departureTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=destination, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property destination with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:destination]
building SimpleValue for destination
Building property destination
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightName]
building SimpleValue for flightName
Building property flightName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=seats_available, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsavailable with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:noofseatsavailable]
building SimpleValue for noofseatsavailable
Building property noofseatsavailable
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=source, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property source with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:source]
building SimpleValue for source
Building property source
Starting fillSimpleValue for id
Starting fillSimpleValue for emailId
Starting fillSimpleValue for mobileNo
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for role
Starting fillSimpleValue for ticketId
Starting fillSimpleValue for airlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Starting fillSimpleValue for flightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Starting fillSimpleValue for flightId
Starting fillSimpleValue for id
Starting fillSimpleValue for noofseatsbooked
Starting fillSimpleValue for flightId
Starting fillSimpleValue for arrivalDate
Starting fillSimpleValue for arrivalTime
Starting fillSimpleValue for departureDate
Starting fillSimpleValue for departureTime
Starting fillSimpleValue for destination
Starting fillSimpleValue for flightName
Starting fillSimpleValue for noofseatsavailable
Starting fillSimpleValue for source
Forcing column [id] to be non-null as it is part of the primary key for table [airline_users]
Forcing column [ticket_id] to be non-null as it is part of the primary key for table [booking_status]
Forcing column [flight_id] to be non-null as it is part of the primary key for table [flight_details]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: disabled
JPA compliance - query : 
JPA compliance - closed-handling : 
JPA compliance - lists : 
JPA compliance - transactions : 
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate\target\classes;C:\Users\DELL\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\DELL\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\DELL\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\DELL\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\DELL\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\DELL\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\DELL\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\DELL\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\DELL\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\DELL\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\DELL\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\DELL\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\DELL\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\DELL\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-entitymanager\5.4.2.Final\hibernate-entitymanager-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\projectlombok\lombok\1.18.8\lombok-1.18.8.jar;C:\Users\DELL\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, javax.persistence.jdbc.user=****, java.vm.specification.version=14, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.1\bin, sun.java.command=com.javafullstackfeb.airlinereservationsystem.controller.MainController, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\DELL, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=C:\Program Files\Java\jdk-14.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.1+7, user.name=DELL, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=TestPersistence, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\DELL\AppData\Local\Temp\, java.version=14.0.1, user.dir=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@188a5fc2, java.library.path=C:\Program Files\Java\jdk-14.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_251/bin/server;C:/Program Files/Java/jre1.8.0_251/bin;C:/Program Files/Java/jre1.8.0_251/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_251\bin;C:\Program Files\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\Users\DELL\AppData\Local\Microsoft\WindowsApps;;C:\Users\DELL\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.1+7, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@31acfd4e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1cb9ef52]
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
 Version select: select id from airline_users where id =?
 Snapshot select: select airlineuse_.id, airlineuse_.email_id as email_id2_0_, airlineuse_.mobile_no as mobile_n3_0_, airlineuse_.name as name4_0_, airlineuse_.password as password5_0_, airlineuse_.role as role6_0_ from airline_users airlineuse_ where airlineuse_.id=?
 Insert 0: insert into airline_users (email_id, mobile_no, name, password, role, id) values (?, ?, ?, ?, ?, ?)
 Update 0: update airline_users set email_id=?, mobile_no=?, name=?, password=?, role=? where id=?
 Delete 0: delete from airline_users where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5dbbb292]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [NONE]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@565aa4ac]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [READ]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
 Version select: select ticket_id from booking_status where ticket_id =?
 Snapshot select: select bookingsta_.ticket_id, bookingsta_.airlineUsers as airlineU2_1_, bookingsta_.flightDetails as flightDe3_1_, bookingsta_.flight_id as flight_i4_1_, bookingsta_.id as id5_1_, bookingsta_.no_of_seats_booked as no_of_se6_1_ from booking_status bookingsta_ where bookingsta_.ticket_id=?
 Insert 0: insert into booking_status (airlineUsers, flightDetails, flight_id, id, no_of_seats_booked, ticket_id) values (?, ?, ?, ?, ?, ?)
 Update 0: update booking_status set airlineUsers=?, flightDetails=?, flight_id=?, id=?, no_of_seats_booked=? where ticket_id=?
 Delete 0: delete from booking_status where ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@528c8c1]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [NONE]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c046c92]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [READ]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
 Version select: select flight_id from flight_details where flight_id =?
 Snapshot select: select flightdeta_.flight_id, flightdeta_.arrival_date as arrival_2_2_, flightdeta_.arrival_time as arrival_3_2_, flightdeta_.departure_date as departur4_2_, flightdeta_.departur_time as departur5_2_, flightdeta_.destination as destinat6_2_, flightdeta_.flight_name as flight_n7_2_, flightdeta_.seats_available as seats_av8_2_, flightdeta_.source as source9_2_ from flight_details flightdeta_ where flightdeta_.flight_id=?
 Insert 0: insert into flight_details (arrival_date, arrival_time, departure_date, departur_time, destination, flight_name, seats_available, source, flight_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update flight_details set arrival_date=?, arrival_time=?, departure_date=?, departur_time=?, destination=?, flight_name=?, seats_available=?, source=? where flight_id=?
 Delete 0: delete from flight_details where flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@643ba1ed]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [NONE]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26582ca]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [READ]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1f84327b] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : airline_users
No alter strings for table : booking_status
No alter strings for table : flight_details
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: b5708fa6-d705-42e4-89b7-ecc93b5f7c88 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin

    select
        flightdeta0_.flight_id as flight_i1_2_0_,
        flightdeta0_.arrival_date as arrival_2_2_0_,
        flightdeta0_.arrival_time as arrival_3_2_0_,
        flightdeta0_.departure_date as departur4_2_0_,
        flightdeta0_.departur_time as departur5_2_0_,
        flightdeta0_.destination as destinat6_2_0_,
        flightdeta0_.flight_name as flight_n7_2_0_,
        flightdeta0_.seats_available as seats_av8_2_0_,
        flightdeta0_.source as source9_2_0_ 
    from
        flight_details flightdeta0_ 
    where
        flightdeta0_.flight_id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2000]
Done materializing entity [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2000]
HHH000387: ResultSet's statement was not registered
Done entity load : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2000
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails{departureTime=11:00, flightName=Indigo, arrivalTime=09:00, noofseatsavailable=10, destination=Banglore, flightId=2000, departureDate=2020-07-08, source=Vizag, arrivalDate=2020-07-08}
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
begin

    select
        airlineuse0_.id as id1_0_0_,
        airlineuse0_.email_id as email_id2_0_0_,
        airlineuse0_.mobile_no as mobile_n3_0_0_,
        airlineuse0_.name as name4_0_0_,
        airlineuse0_.password as password5_0_0_,
        airlineuse0_.role as role6_0_0_ 
    from
        airline_users airlineuse0_ 
    where
        airlineuse0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers#5001]
Done materializing entity [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers#5001]
HHH000387: ResultSet's statement was not registered
Done entity load : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers#5001
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails{departureTime=11:00, flightName=Indigo, arrivalTime=09:00, noofseatsavailable=10, destination=Banglore, flightId=2000, departureDate=2020-07-08, source=Vizag, arrivalDate=2020-07-08}
com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers{password=@Suni123, role=user, name=sunitha, emailId=sunitha@gmail.com, id=5001, mobileNo=9177897241}
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
begin
Generated identifier: 2642, using strategy: org.hibernate.id.Assigned
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 1 insertions, 0 updates, 0 deletions to 3 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails{departureTime=11:00, flightName=Indigo, arrivalTime=09:00, noofseatsavailable=10, destination=Banglore, flightId=2000, departureDate=2020-07-08, source=Vizag, arrivalDate=2020-07-08}
com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus{noofseatsbooked=5, flightDetails=null, flightId=2000, id=5001, airlineUsers=null, ticketId=2642}
com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers{password=@Suni123, role=user, name=sunitha, emailId=sunitha@gmail.com, id=5001, mobileNo=9177897241}

    insert 
    into
        booking_status
        (airlineUsers, flightDetails, flight_id, id, no_of_seats_booked, ticket_id) 
    values
        (?, ?, ?, ?, ?, ?)
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
HHH000031: Closing
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@22ead351] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1cb9ef52]
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Request placed to Airline Management 
2642    2000   5001   5
1.   Search Flight By Source
2.   Search Flight By Destination
3.   Search Flight By Name
4.   View All Flight Details
5.   Book The Flight
6.   Cancel The Tickets
7.   Logout
************* Welcome To Airline Reservation System *************
1. Search Flight By Source
2. Search Flight By Destination
3. Search Flight By Name
4. View All Flight Details
5. Register
6. Login
Enter registered email to login : 
Enter registered Password to login : 
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=TestPersistence, explicit-provider=null] against incoming persistence unit name [TestPersistence]
No PersistenceProvider explicitly requested, assuming Hibernate
PersistenceUnitInfo [
	name: TestPersistence
	persistence provider classname: null
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/DELL/eclipse-workspace/airlinereservationsystemjpawithhibernate/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: rootpassword
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: update
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate Core {5.4.2.Final}
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@239a307b
Adding type registration boolean -> org.hibernate.type.BooleanType@239a307b
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@239a307b
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5f8e8a9d
Adding type registration true_false -> org.hibernate.type.TrueFalseType@17bffc17
Adding type registration yes_no -> org.hibernate.type.YesNoType@338fc1d8
Adding type registration byte -> org.hibernate.type.ByteType@72c8e7b
Adding type registration byte -> org.hibernate.type.ByteType@72c8e7b
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@72c8e7b
Adding type registration character -> org.hibernate.type.CharacterType@57bc27f5
Adding type registration char -> org.hibernate.type.CharacterType@57bc27f5
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@57bc27f5
Adding type registration short -> org.hibernate.type.ShortType@33ecda92
Adding type registration short -> org.hibernate.type.ShortType@33ecda92
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@33ecda92
Adding type registration integer -> org.hibernate.type.IntegerType@55de24cc
Adding type registration int -> org.hibernate.type.IntegerType@55de24cc
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55de24cc
Adding type registration long -> org.hibernate.type.LongType@25df00a0
Adding type registration long -> org.hibernate.type.LongType@25df00a0
Adding type registration java.lang.Long -> org.hibernate.type.LongType@25df00a0
Adding type registration float -> org.hibernate.type.FloatType@491b9b8
Adding type registration float -> org.hibernate.type.FloatType@491b9b8
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@491b9b8
Adding type registration double -> org.hibernate.type.DoubleType@16150369
Adding type registration double -> org.hibernate.type.DoubleType@16150369
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@16150369
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b1cfb87
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b1cfb87
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6f15d60e
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6f15d60e
Adding type registration string -> org.hibernate.type.StringType@5340477f
Adding type registration java.lang.String -> org.hibernate.type.StringType@5340477f
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@387a8303
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@126253fd
Adding type registration url -> org.hibernate.type.UrlType@1807f5a7
Adding type registration java.net.URL -> org.hibernate.type.UrlType@1807f5a7
Adding type registration Duration -> org.hibernate.type.DurationType@7bbc8656
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7bbc8656
Adding type registration Instant -> org.hibernate.type.InstantType@2f953efd
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2f953efd
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@41330d4f
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@41330d4f
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@37313c65
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@37313c65
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5d908d47
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5d908d47
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@69ee81fc
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@69ee81fc
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3b35a229
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3b35a229
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e3f861
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e3f861
Adding type registration date -> org.hibernate.type.DateType@78452606
Adding type registration java.sql.Date -> org.hibernate.type.DateType@78452606
Adding type registration time -> org.hibernate.type.TimeType@2235eaab
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2235eaab
Adding type registration timestamp -> org.hibernate.type.TimestampType@10289886
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10289886
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10289886
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1a5a4e19
Adding type registration calendar -> org.hibernate.type.CalendarType@24105dc5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@24105dc5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@24105dc5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@50029372
Adding type registration locale -> org.hibernate.type.LocaleType@5038d0b5
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5038d0b5
Adding type registration currency -> org.hibernate.type.CurrencyType@61710c6
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@61710c6
Adding type registration timezone -> org.hibernate.type.TimeZoneType@5f9edf14
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5f9edf14
Adding type registration class -> org.hibernate.type.ClassType@7ac296f6
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7ac296f6
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79defdc
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79defdc
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b86805d
Adding type registration binary -> org.hibernate.type.BinaryType@17d919b6
Adding type registration byte[] -> org.hibernate.type.BinaryType@17d919b6
Adding type registration [B -> org.hibernate.type.BinaryType@17d919b6
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e62d773
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e62d773
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e62d773
Adding type registration row_version -> org.hibernate.type.RowVersionType@47c81abf
Adding type registration image -> org.hibernate.type.ImageType@18ece7f4
Adding type registration characters -> org.hibernate.type.CharArrayType@35b74c5c
Adding type registration char[] -> org.hibernate.type.CharArrayType@35b74c5c
Adding type registration [C -> org.hibernate.type.CharArrayType@35b74c5c
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4808bc9b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4808bc9b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4808bc9b
Adding type registration text -> org.hibernate.type.TextType@1ebea008
Adding type registration ntext -> org.hibernate.type.NTextType@163370c2
Adding type registration blob -> org.hibernate.type.BlobType@7b50df34
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7b50df34
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@64ec96c6
Adding type registration clob -> org.hibernate.type.ClobType@e25951c
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@e25951c
Adding type registration nclob -> org.hibernate.type.NClobType@4bc222e
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4bc222e
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5e17553a
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@74f6c5d8
Adding type registration serializable -> org.hibernate.type.SerializableType@13bc8645
Adding type registration object -> org.hibernate.type.ObjectType@7bf3a5d8
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7bf3a5d8
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2205a05d
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@72ef8d15
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6aa8e115
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5e21e98f
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@51a9ad5e
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5f20155b
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@72ade7e3
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@239105a8
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@59e2d8e3] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2b72cb8a] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7f8a9499]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
HHH10001001: Connection properties: {password=rootpassword, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.47 ( Revision: fe1903b1ecb4a96a917f7ed3190d80c049b1de29 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@22b53226] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1fcb4808]
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name AirlineUsers
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers on table airline_users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=email_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property emailId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:emailId]
building SimpleValue for emailId
Building property emailId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=mobile_no, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property mobileNo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:mobileNo]
building SimpleValue for mobileNo
Building property mobileNo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=role, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property role with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:role]
building SimpleValue for role
Building property role
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name BookingStatus
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus on table booking_status
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=ticket_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property ticketId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:ticketId]
building SimpleValue for ticketId
Building property ticketId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(ticket_id)]), ticketId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=airlineUsers, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property airlineUsers with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:airlineUsers]
building SimpleValue for airlineUsers
Building property airlineUsers
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flightDetails, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightDetails with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightDetails]
building SimpleValue for flightDetails
Building property flightDetails
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightId]
building SimpleValue for flightId
Building property flightId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=no_of_seats_booked, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsbooked with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:noofseatsbooked]
building SimpleValue for noofseatsbooked
Building property noofseatsbooked
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name FlightDetails
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails on table flight_details
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightId]
building SimpleValue for flightId
Building property flightId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(flight_id)]), flightId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalDate]
building SimpleValue for arrivalDate
Building property arrivalDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalTime]
building SimpleValue for arrivalTime
Building property arrivalTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departure_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureDate]
building SimpleValue for departureDate
Building property departureDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departur_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureTime]
building SimpleValue for departureTime
Building property departureTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=destination, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property destination with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:destination]
building SimpleValue for destination
Building property destination
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightName]
building SimpleValue for flightName
Building property flightName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=seats_available, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsavailable with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:noofseatsavailable]
building SimpleValue for noofseatsavailable
Building property noofseatsavailable
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=source, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property source with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:source]
building SimpleValue for source
Building property source
Starting fillSimpleValue for id
Starting fillSimpleValue for emailId
Starting fillSimpleValue for mobileNo
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for role
Starting fillSimpleValue for ticketId
Starting fillSimpleValue for airlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Starting fillSimpleValue for flightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Starting fillSimpleValue for flightId
Starting fillSimpleValue for id
Starting fillSimpleValue for noofseatsbooked
Starting fillSimpleValue for flightId
Starting fillSimpleValue for arrivalDate
Starting fillSimpleValue for arrivalTime
Starting fillSimpleValue for departureDate
Starting fillSimpleValue for departureTime
Starting fillSimpleValue for destination
Starting fillSimpleValue for flightName
Starting fillSimpleValue for noofseatsavailable
Starting fillSimpleValue for source
Forcing column [id] to be non-null as it is part of the primary key for table [airline_users]
Forcing column [ticket_id] to be non-null as it is part of the primary key for table [booking_status]
Forcing column [flight_id] to be non-null as it is part of the primary key for table [flight_details]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: disabled
JPA compliance - query : 
JPA compliance - closed-handling : 
JPA compliance - lists : 
JPA compliance - transactions : 
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate\target\classes;C:\Users\DELL\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\DELL\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\DELL\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\DELL\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\DELL\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\DELL\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\DELL\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\DELL\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\DELL\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\DELL\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\DELL\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\DELL\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\DELL\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\DELL\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-entitymanager\5.4.2.Final\hibernate-entitymanager-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\projectlombok\lombok\1.18.8\lombok-1.18.8.jar;C:\Users\DELL\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, javax.persistence.jdbc.user=****, java.vm.specification.version=14, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.1\bin, sun.java.command=com.javafullstackfeb.airlinereservationsystem.controller.MainController, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\DELL, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=C:\Program Files\Java\jdk-14.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.1+7, user.name=DELL, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=TestPersistence, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\DELL\AppData\Local\Temp\, java.version=14.0.1, user.dir=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@41c62850, java.library.path=C:\Program Files\Java\jdk-14.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_251/bin/server;C:/Program Files/Java/jre1.8.0_251/bin;C:/Program Files/Java/jre1.8.0_251/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_251\bin;C:\Program Files\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\Users\DELL\AppData\Local\Microsoft\WindowsApps;;C:\Users\DELL\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.1+7, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@22b53226] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5d10455d]
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
 Version select: select id from airline_users where id =?
 Snapshot select: select airlineuse_.id, airlineuse_.email_id as email_id2_0_, airlineuse_.mobile_no as mobile_n3_0_, airlineuse_.name as name4_0_, airlineuse_.password as password5_0_, airlineuse_.role as role6_0_ from airline_users airlineuse_ where airlineuse_.id=?
 Insert 0: insert into airline_users (email_id, mobile_no, name, password, role, id) values (?, ?, ?, ?, ?, ?)
 Update 0: update airline_users set email_id=?, mobile_no=?, name=?, password=?, role=? where id=?
 Delete 0: delete from airline_users where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@446c3920]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [NONE]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39e43310]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [READ]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
 Version select: select ticket_id from booking_status where ticket_id =?
 Snapshot select: select bookingsta_.ticket_id, bookingsta_.airlineUsers as airlineU2_1_, bookingsta_.flightDetails as flightDe3_1_, bookingsta_.flight_id as flight_i4_1_, bookingsta_.id as id5_1_, bookingsta_.no_of_seats_booked as no_of_se6_1_ from booking_status bookingsta_ where bookingsta_.ticket_id=?
 Insert 0: insert into booking_status (airlineUsers, flightDetails, flight_id, id, no_of_seats_booked, ticket_id) values (?, ?, ?, ?, ?, ?)
 Update 0: update booking_status set airlineUsers=?, flightDetails=?, flight_id=?, id=?, no_of_seats_booked=? where ticket_id=?
 Delete 0: delete from booking_status where ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21c7208d]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [NONE]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c129ef6]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [READ]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
 Version select: select flight_id from flight_details where flight_id =?
 Snapshot select: select flightdeta_.flight_id, flightdeta_.arrival_date as arrival_2_2_, flightdeta_.arrival_time as arrival_3_2_, flightdeta_.departure_date as departur4_2_, flightdeta_.departur_time as departur5_2_, flightdeta_.destination as destinat6_2_, flightdeta_.flight_name as flight_n7_2_, flightdeta_.seats_available as seats_av8_2_, flightdeta_.source as source9_2_ from flight_details flightdeta_ where flightdeta_.flight_id=?
 Insert 0: insert into flight_details (arrival_date, arrival_time, departure_date, departur_time, destination, flight_name, seats_available, source, flight_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update flight_details set arrival_date=?, arrival_time=?, departure_date=?, departur_time=?, destination=?, flight_name=?, seats_available=?, source=? where flight_id=?
 Delete 0: delete from flight_details where flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a8cbffe]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [NONE]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61e7bf2f]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [READ]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@74dbb1ee] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : airline_users
No alter strings for table : booking_status
No alter strings for table : flight_details
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4b3fe06e
Registering SessionFactory: aba2c216-7d3a-47be-9178-dfddbeaf40eb (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@64984b0f
parse() - HQL: select u from  com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers u where u.emailId = :emailId and u.password =:password
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'javafullstackfeb'
    |  |     |  |  |  \-[IDENT] Node: 'airlinereservationsystem'
    |  |     |  |  \-[IDENT] Node: 'dto'
    |  |     |  \-[IDENT] Node: 'AirlineUsers'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'u'
          |  |  \-[IDENT] Node: 'emailId'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'emailId'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'u'
             |  \-[IDENT] Node: 'password'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'password'

select << begin [level=1, statement=select]
FromClause{level=1} : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers (u) -> airlineuse0_
Resolved : u -> airlineuse0_.id
Resolved : u -> airlineuse0_.id
getDataType() : emailId -> org.hibernate.type.StringType@5340477f
Resolved : u.emailId -> airlineuse0_.email_id
Resolved : u -> airlineuse0_.id
getDataType() : password -> org.hibernate.type.StringType@5340477f
Resolved : u.password -> airlineuse0_.password
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} airlineuse0_.id ) ( FromClause{level=1} airline_users airlineuse0_ ) ( where ( and ( = ( airlineuse0_.email_id airlineuse0_.id emailId ) ? ) ( = ( airlineuse0_.password airlineuse0_.id password ) ? ) ) ) )
Using FROM fragment [airline_users airlineuse0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (airline_users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'airlineuse0_.id as id1_0_' {alias=u, className=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, tableAlias=airlineuse0_}
    |  \-[SQL_TOKEN] SqlFragment: 'airlineuse0_.email_id as email_id2_0_, airlineuse0_.mobile_no as mobile_n3_0_, airlineuse0_.name as name4_0_, airlineuse0_.password as password5_0_, airlineuse0_.role as role6_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[airlineuse0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'airline_users airlineuse0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=airline_users,tableAlias=airlineuse0_,origin=null,columns={,className=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'airlineuse0_.email_id' {propertyName=emailId,dereferenceType=PRIMITIVE,getPropertyPath=emailId,path=u.emailId,tableAlias=airlineuse0_,className=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers,classAlias=u}
          |  |  +-[ALIAS_REF] IdentNode: 'airlineuse0_.id' {alias=u, className=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, tableAlias=airlineuse0_}
          |  |  \-[IDENT] IdentNode: 'emailId' {originalText=emailId}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=emailId, expectedType=org.hibernate.type.StringType@5340477f}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'airlineuse0_.password' {propertyName=password,dereferenceType=PRIMITIVE,getPropertyPath=password,path=u.password,tableAlias=airlineuse0_,className=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers,classAlias=u}
             |  +-[ALIAS_REF] IdentNode: 'airlineuse0_.id' {alias=u, className=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, tableAlias=airlineuse0_}
             |  \-[IDENT] IdentNode: 'password' {originalText=password}
             \-[NAMED_PARAM] ParameterNode: '?' {name=password, expectedType=org.hibernate.type.StringType@5340477f}

throwQueryException() : no errors
HQL: select u from  com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers u where u.emailId = :emailId and u.password =:password
SQL: select airlineuse0_.id as id1_0_, airlineuse0_.email_id as email_id2_0_, airlineuse0_.mobile_no as mobile_n3_0_, airlineuse0_.name as name4_0_, airlineuse0_.password as password5_0_, airlineuse0_.role as role6_0_ from airline_users airlineuse0_ where airlineuse0_.email_id=? and airlineuse0_.password=?
throwQueryException() : no errors

    select
        airlineuse0_.id as id1_0_,
        airlineuse0_.email_id as email_id2_0_,
        airlineuse0_.mobile_no as mobile_n3_0_,
        airlineuse0_.name as name4_0_,
        airlineuse0_.password as password5_0_,
        airlineuse0_.role as role6_0_ 
    from
        airline_users airlineuse0_ 
    where
        airlineuse0_.email_id=? 
        and airlineuse0_.password=?
Result set row: 0
Result row: EntityKey[com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers#5001]
Resolving associations for [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers#5001]
Done materializing entity [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers#5001]
Initiating JDBC connection release from afterTransaction
HHH000031: Closing
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2264ea32] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5d10455d]
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Logged In Successfully....!!!
1.   Search Flight By Source
2.   Search Flight By Destination
3.   Search Flight By Name
4.   View All Flight Details
5.   Book The Flight
6.   Cancel The Tickets
7.   Logout
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=TestPersistence, explicit-provider=null] against incoming persistence unit name [TestPersistence]
No PersistenceProvider explicitly requested, assuming Hibernate
PersistenceUnitInfo [
	name: TestPersistence
	persistence provider classname: null
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/DELL/eclipse-workspace/airlinereservationsystemjpawithhibernate/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: rootpassword
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: update
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@239a307b
Adding type registration boolean -> org.hibernate.type.BooleanType@239a307b
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@239a307b
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5f8e8a9d
Adding type registration true_false -> org.hibernate.type.TrueFalseType@17bffc17
Adding type registration yes_no -> org.hibernate.type.YesNoType@338fc1d8
Adding type registration byte -> org.hibernate.type.ByteType@72c8e7b
Adding type registration byte -> org.hibernate.type.ByteType@72c8e7b
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@72c8e7b
Adding type registration character -> org.hibernate.type.CharacterType@57bc27f5
Adding type registration char -> org.hibernate.type.CharacterType@57bc27f5
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@57bc27f5
Adding type registration short -> org.hibernate.type.ShortType@33ecda92
Adding type registration short -> org.hibernate.type.ShortType@33ecda92
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@33ecda92
Adding type registration integer -> org.hibernate.type.IntegerType@55de24cc
Adding type registration int -> org.hibernate.type.IntegerType@55de24cc
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55de24cc
Adding type registration long -> org.hibernate.type.LongType@25df00a0
Adding type registration long -> org.hibernate.type.LongType@25df00a0
Adding type registration java.lang.Long -> org.hibernate.type.LongType@25df00a0
Adding type registration float -> org.hibernate.type.FloatType@491b9b8
Adding type registration float -> org.hibernate.type.FloatType@491b9b8
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@491b9b8
Adding type registration double -> org.hibernate.type.DoubleType@16150369
Adding type registration double -> org.hibernate.type.DoubleType@16150369
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@16150369
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b1cfb87
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b1cfb87
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6f15d60e
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6f15d60e
Adding type registration string -> org.hibernate.type.StringType@5340477f
Adding type registration java.lang.String -> org.hibernate.type.StringType@5340477f
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@387a8303
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@126253fd
Adding type registration url -> org.hibernate.type.UrlType@1807f5a7
Adding type registration java.net.URL -> org.hibernate.type.UrlType@1807f5a7
Adding type registration Duration -> org.hibernate.type.DurationType@7bbc8656
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7bbc8656
Adding type registration Instant -> org.hibernate.type.InstantType@2f953efd
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2f953efd
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@41330d4f
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@41330d4f
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@37313c65
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@37313c65
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5d908d47
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5d908d47
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@69ee81fc
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@69ee81fc
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3b35a229
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3b35a229
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e3f861
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e3f861
Adding type registration date -> org.hibernate.type.DateType@78452606
Adding type registration java.sql.Date -> org.hibernate.type.DateType@78452606
Adding type registration time -> org.hibernate.type.TimeType@2235eaab
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2235eaab
Adding type registration timestamp -> org.hibernate.type.TimestampType@10289886
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10289886
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10289886
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1a5a4e19
Adding type registration calendar -> org.hibernate.type.CalendarType@24105dc5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@24105dc5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@24105dc5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@50029372
Adding type registration locale -> org.hibernate.type.LocaleType@5038d0b5
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5038d0b5
Adding type registration currency -> org.hibernate.type.CurrencyType@61710c6
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@61710c6
Adding type registration timezone -> org.hibernate.type.TimeZoneType@5f9edf14
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5f9edf14
Adding type registration class -> org.hibernate.type.ClassType@7ac296f6
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7ac296f6
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79defdc
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79defdc
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b86805d
Adding type registration binary -> org.hibernate.type.BinaryType@17d919b6
Adding type registration byte[] -> org.hibernate.type.BinaryType@17d919b6
Adding type registration [B -> org.hibernate.type.BinaryType@17d919b6
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e62d773
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e62d773
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e62d773
Adding type registration row_version -> org.hibernate.type.RowVersionType@47c81abf
Adding type registration image -> org.hibernate.type.ImageType@18ece7f4
Adding type registration characters -> org.hibernate.type.CharArrayType@35b74c5c
Adding type registration char[] -> org.hibernate.type.CharArrayType@35b74c5c
Adding type registration [C -> org.hibernate.type.CharArrayType@35b74c5c
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4808bc9b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4808bc9b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4808bc9b
Adding type registration text -> org.hibernate.type.TextType@1ebea008
Adding type registration ntext -> org.hibernate.type.NTextType@163370c2
Adding type registration blob -> org.hibernate.type.BlobType@7b50df34
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7b50df34
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@64ec96c6
Adding type registration clob -> org.hibernate.type.ClobType@e25951c
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@e25951c
Adding type registration nclob -> org.hibernate.type.NClobType@4bc222e
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4bc222e
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5e17553a
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@74f6c5d8
Adding type registration serializable -> org.hibernate.type.SerializableType@13bc8645
Adding type registration object -> org.hibernate.type.ObjectType@7bf3a5d8
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7bf3a5d8
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1d805aa1
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@176f7f3b
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@30ca0779
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@58740366
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@47be0f9b
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2bc426f0
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4bd51d3e
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@33425811
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@4b74b35] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@e4e1ef5] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6d11ceef]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
HHH10001001: Connection properties: {password=rootpassword, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.47 ( Revision: fe1903b1ecb4a96a917f7ed3190d80c049b1de29 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@797c3c3b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4012d5bc]
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name AirlineUsers
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers on table airline_users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=email_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property emailId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:emailId]
building SimpleValue for emailId
Building property emailId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=mobile_no, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property mobileNo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:mobileNo]
building SimpleValue for mobileNo
Building property mobileNo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=role, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property role with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:role]
building SimpleValue for role
Building property role
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name BookingStatus
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus on table booking_status
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=ticket_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property ticketId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:ticketId]
building SimpleValue for ticketId
Building property ticketId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(ticket_id)]), ticketId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=airlineUsers, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property airlineUsers with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:airlineUsers]
building SimpleValue for airlineUsers
Building property airlineUsers
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flightDetails, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightDetails with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightDetails]
building SimpleValue for flightDetails
Building property flightDetails
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightId]
building SimpleValue for flightId
Building property flightId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=no_of_seats_booked, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsbooked with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:noofseatsbooked]
building SimpleValue for noofseatsbooked
Building property noofseatsbooked
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name FlightDetails
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails on table flight_details
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightId]
building SimpleValue for flightId
Building property flightId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(flight_id)]), flightId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalDate]
building SimpleValue for arrivalDate
Building property arrivalDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalTime]
building SimpleValue for arrivalTime
Building property arrivalTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departure_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureDate]
building SimpleValue for departureDate
Building property departureDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departur_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureTime]
building SimpleValue for departureTime
Building property departureTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=destination, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property destination with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:destination]
building SimpleValue for destination
Building property destination
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightName]
building SimpleValue for flightName
Building property flightName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=seats_available, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsavailable with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:noofseatsavailable]
building SimpleValue for noofseatsavailable
Building property noofseatsavailable
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=source, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property source with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:source]
building SimpleValue for source
Building property source
Starting fillSimpleValue for id
Starting fillSimpleValue for emailId
Starting fillSimpleValue for mobileNo
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for role
Starting fillSimpleValue for ticketId
Starting fillSimpleValue for airlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Starting fillSimpleValue for flightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Starting fillSimpleValue for flightId
Starting fillSimpleValue for id
Starting fillSimpleValue for noofseatsbooked
Starting fillSimpleValue for flightId
Starting fillSimpleValue for arrivalDate
Starting fillSimpleValue for arrivalTime
Starting fillSimpleValue for departureDate
Starting fillSimpleValue for departureTime
Starting fillSimpleValue for destination
Starting fillSimpleValue for flightName
Starting fillSimpleValue for noofseatsavailable
Starting fillSimpleValue for source
Forcing column [id] to be non-null as it is part of the primary key for table [airline_users]
Forcing column [ticket_id] to be non-null as it is part of the primary key for table [booking_status]
Forcing column [flight_id] to be non-null as it is part of the primary key for table [flight_details]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: disabled
JPA compliance - query : 
JPA compliance - closed-handling : 
JPA compliance - lists : 
JPA compliance - transactions : 
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate\target\classes;C:\Users\DELL\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\DELL\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\DELL\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\DELL\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\DELL\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\DELL\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\DELL\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\DELL\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\DELL\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\DELL\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\DELL\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\DELL\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\DELL\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\DELL\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-entitymanager\5.4.2.Final\hibernate-entitymanager-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\projectlombok\lombok\1.18.8\lombok-1.18.8.jar;C:\Users\DELL\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, javax.persistence.jdbc.user=****, java.vm.specification.version=14, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.1\bin, sun.java.command=com.javafullstackfeb.airlinereservationsystem.controller.MainController, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\DELL, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=C:\Program Files\Java\jdk-14.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.1+7, user.name=DELL, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=TestPersistence, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\DELL\AppData\Local\Temp\, java.version=14.0.1, user.dir=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@33ecbd6c, java.library.path=C:\Program Files\Java\jdk-14.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_251/bin/server;C:/Program Files/Java/jre1.8.0_251/bin;C:/Program Files/Java/jre1.8.0_251/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_251\bin;C:\Program Files\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\Users\DELL\AppData\Local\Microsoft\WindowsApps;;C:\Users\DELL\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.1+7, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@797c3c3b] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5c723f2d]
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
 Version select: select id from airline_users where id =?
 Snapshot select: select airlineuse_.id, airlineuse_.email_id as email_id2_0_, airlineuse_.mobile_no as mobile_n3_0_, airlineuse_.name as name4_0_, airlineuse_.password as password5_0_, airlineuse_.role as role6_0_ from airline_users airlineuse_ where airlineuse_.id=?
 Insert 0: insert into airline_users (email_id, mobile_no, name, password, role, id) values (?, ?, ?, ?, ?, ?)
 Update 0: update airline_users set email_id=?, mobile_no=?, name=?, password=?, role=? where id=?
 Delete 0: delete from airline_users where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1abebef3]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [NONE]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67cefd84]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [READ]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
 Version select: select ticket_id from booking_status where ticket_id =?
 Snapshot select: select bookingsta_.ticket_id, bookingsta_.airlineUsers as airlineU2_1_, bookingsta_.flightDetails as flightDe3_1_, bookingsta_.flight_id as flight_i4_1_, bookingsta_.id as id5_1_, bookingsta_.no_of_seats_booked as no_of_se6_1_ from booking_status bookingsta_ where bookingsta_.ticket_id=?
 Insert 0: insert into booking_status (airlineUsers, flightDetails, flight_id, id, no_of_seats_booked, ticket_id) values (?, ?, ?, ?, ?, ?)
 Update 0: update booking_status set airlineUsers=?, flightDetails=?, flight_id=?, id=?, no_of_seats_booked=? where ticket_id=?
 Delete 0: delete from booking_status where ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6add8e3f]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [NONE]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48904d5a]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [READ]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
 Version select: select flight_id from flight_details where flight_id =?
 Snapshot select: select flightdeta_.flight_id, flightdeta_.arrival_date as arrival_2_2_, flightdeta_.arrival_time as arrival_3_2_, flightdeta_.departure_date as departur4_2_, flightdeta_.departur_time as departur5_2_, flightdeta_.destination as destinat6_2_, flightdeta_.flight_name as flight_n7_2_, flightdeta_.seats_available as seats_av8_2_, flightdeta_.source as source9_2_ from flight_details flightdeta_ where flightdeta_.flight_id=?
 Insert 0: insert into flight_details (arrival_date, arrival_time, departure_date, departur_time, destination, flight_name, seats_available, source, flight_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update flight_details set arrival_date=?, arrival_time=?, departure_date=?, departur_time=?, destination=?, flight_name=?, seats_available=?, source=? where flight_id=?
 Delete 0: delete from flight_details where flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1491344a]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [NONE]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1386313f]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [READ]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@45cd7bc5] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : airline_users
No alter strings for table : booking_status
No alter strings for table : flight_details
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: b0a892a3-9071-46e7-b595-c3987ab7651a (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@64984b0f
parse() - HQL: select f from com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails f
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'javafullstackfeb'
       |     |  |  |  \-[IDENT] Node: 'airlinereservationsystem'
       |     |  |  \-[IDENT] Node: 'dto'
       |     |  \-[IDENT] Node: 'FlightDetails'
       |     \-[ALIAS] Node: 'f'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'f'

select << begin [level=1, statement=select]
FromClause{level=1} : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails (f) -> flightdeta0_
Resolved : f -> flightdeta0_.flight_id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} flightdeta0_.flight_id ) ( FromClause{level=1} flight_details flightdeta0_ ) )
Using FROM fragment [flight_details flightdeta0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (flight_details)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'flightdeta0_.flight_id as flight_i1_2_' {alias=f, className=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, tableAlias=flightdeta0_}
    |  \-[SQL_TOKEN] SqlFragment: 'flightdeta0_.arrival_date as arrival_2_2_, flightdeta0_.arrival_time as arrival_3_2_, flightdeta0_.departure_date as departur4_2_, flightdeta0_.departur_time as departur5_2_, flightdeta0_.destination as destinat6_2_, flightdeta0_.flight_name as flight_n7_2_, flightdeta0_.seats_available as seats_av8_2_, flightdeta0_.source as source9_2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[f], fromElementByTableAlias=[flightdeta0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'flight_details flightdeta0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=f,role=null,tableName=flight_details,tableAlias=flightdeta0_,origin=null,columns={,className=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails}}

throwQueryException() : no errors
HQL: select f from com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails f
SQL: select flightdeta0_.flight_id as flight_i1_2_, flightdeta0_.arrival_date as arrival_2_2_, flightdeta0_.arrival_time as arrival_3_2_, flightdeta0_.departure_date as departur4_2_, flightdeta0_.departur_time as departur5_2_, flightdeta0_.destination as destinat6_2_, flightdeta0_.flight_name as flight_n7_2_, flightdeta0_.seats_available as seats_av8_2_, flightdeta0_.source as source9_2_ from flight_details flightdeta0_
throwQueryException() : no errors

    select
        flightdeta0_.flight_id as flight_i1_2_,
        flightdeta0_.arrival_date as arrival_2_2_,
        flightdeta0_.arrival_time as arrival_3_2_,
        flightdeta0_.departure_date as departur4_2_,
        flightdeta0_.departur_time as departur5_2_,
        flightdeta0_.destination as destinat6_2_,
        flightdeta0_.flight_name as flight_n7_2_,
        flightdeta0_.seats_available as seats_av8_2_,
        flightdeta0_.source as source9_2_ 
    from
        flight_details flightdeta0_
Result set row: 0
Result row: EntityKey[com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2000]
Result set row: 1
Result row: EntityKey[com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2001]
Result set row: 2
Result row: EntityKey[com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2003]
Resolving associations for [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2000]
Done materializing entity [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2000]
Resolving associations for [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2001]
Done materializing entity [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2001]
Resolving associations for [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2003]
Done materializing entity [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2003]
Initiating JDBC connection release from afterTransaction
HHH000031: Closing
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7e72a6cc] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5c723f2d]
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2000       Indigo        Vizag   to    Banglore        2020-07-08        09:00:00      2020-07-08     11:00:00    10(Seats Available)
2001       AirAsia        Vizag   to    Hyderabd        2020-12-01        08:00:00      2020-12-01     10:00:00    20(Seats Available)
2003       SpiceJet        Chennai   to    Banglore        2020-12-31        21:00:00      2020-12-31     23:00:00    25(Seats Available)
1.   Search Flight By Source
2.   Search Flight By Destination
3.   Search Flight By Name
4.   View All Flight Details
5.   Book The Flight
6.   Cancel The Tickets
7.   Logout
Enter User Id : 
Enter Flight Id : 
Enter No of seats : 
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=TestPersistence, explicit-provider=null] against incoming persistence unit name [TestPersistence]
No PersistenceProvider explicitly requested, assuming Hibernate
PersistenceUnitInfo [
	name: TestPersistence
	persistence provider classname: null
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/DELL/eclipse-workspace/airlinereservationsystemjpawithhibernate/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: rootpassword
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: update
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@239a307b
Adding type registration boolean -> org.hibernate.type.BooleanType@239a307b
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@239a307b
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5f8e8a9d
Adding type registration true_false -> org.hibernate.type.TrueFalseType@17bffc17
Adding type registration yes_no -> org.hibernate.type.YesNoType@338fc1d8
Adding type registration byte -> org.hibernate.type.ByteType@72c8e7b
Adding type registration byte -> org.hibernate.type.ByteType@72c8e7b
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@72c8e7b
Adding type registration character -> org.hibernate.type.CharacterType@57bc27f5
Adding type registration char -> org.hibernate.type.CharacterType@57bc27f5
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@57bc27f5
Adding type registration short -> org.hibernate.type.ShortType@33ecda92
Adding type registration short -> org.hibernate.type.ShortType@33ecda92
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@33ecda92
Adding type registration integer -> org.hibernate.type.IntegerType@55de24cc
Adding type registration int -> org.hibernate.type.IntegerType@55de24cc
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55de24cc
Adding type registration long -> org.hibernate.type.LongType@25df00a0
Adding type registration long -> org.hibernate.type.LongType@25df00a0
Adding type registration java.lang.Long -> org.hibernate.type.LongType@25df00a0
Adding type registration float -> org.hibernate.type.FloatType@491b9b8
Adding type registration float -> org.hibernate.type.FloatType@491b9b8
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@491b9b8
Adding type registration double -> org.hibernate.type.DoubleType@16150369
Adding type registration double -> org.hibernate.type.DoubleType@16150369
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@16150369
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b1cfb87
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b1cfb87
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6f15d60e
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6f15d60e
Adding type registration string -> org.hibernate.type.StringType@5340477f
Adding type registration java.lang.String -> org.hibernate.type.StringType@5340477f
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@387a8303
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@126253fd
Adding type registration url -> org.hibernate.type.UrlType@1807f5a7
Adding type registration java.net.URL -> org.hibernate.type.UrlType@1807f5a7
Adding type registration Duration -> org.hibernate.type.DurationType@7bbc8656
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7bbc8656
Adding type registration Instant -> org.hibernate.type.InstantType@2f953efd
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2f953efd
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@41330d4f
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@41330d4f
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@37313c65
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@37313c65
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5d908d47
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5d908d47
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@69ee81fc
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@69ee81fc
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3b35a229
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3b35a229
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e3f861
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e3f861
Adding type registration date -> org.hibernate.type.DateType@78452606
Adding type registration java.sql.Date -> org.hibernate.type.DateType@78452606
Adding type registration time -> org.hibernate.type.TimeType@2235eaab
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2235eaab
Adding type registration timestamp -> org.hibernate.type.TimestampType@10289886
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10289886
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10289886
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1a5a4e19
Adding type registration calendar -> org.hibernate.type.CalendarType@24105dc5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@24105dc5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@24105dc5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@50029372
Adding type registration locale -> org.hibernate.type.LocaleType@5038d0b5
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5038d0b5
Adding type registration currency -> org.hibernate.type.CurrencyType@61710c6
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@61710c6
Adding type registration timezone -> org.hibernate.type.TimeZoneType@5f9edf14
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5f9edf14
Adding type registration class -> org.hibernate.type.ClassType@7ac296f6
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7ac296f6
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79defdc
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79defdc
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b86805d
Adding type registration binary -> org.hibernate.type.BinaryType@17d919b6
Adding type registration byte[] -> org.hibernate.type.BinaryType@17d919b6
Adding type registration [B -> org.hibernate.type.BinaryType@17d919b6
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e62d773
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e62d773
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e62d773
Adding type registration row_version -> org.hibernate.type.RowVersionType@47c81abf
Adding type registration image -> org.hibernate.type.ImageType@18ece7f4
Adding type registration characters -> org.hibernate.type.CharArrayType@35b74c5c
Adding type registration char[] -> org.hibernate.type.CharArrayType@35b74c5c
Adding type registration [C -> org.hibernate.type.CharArrayType@35b74c5c
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4808bc9b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4808bc9b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4808bc9b
Adding type registration text -> org.hibernate.type.TextType@1ebea008
Adding type registration ntext -> org.hibernate.type.NTextType@163370c2
Adding type registration blob -> org.hibernate.type.BlobType@7b50df34
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7b50df34
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@64ec96c6
Adding type registration clob -> org.hibernate.type.ClobType@e25951c
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@e25951c
Adding type registration nclob -> org.hibernate.type.NClobType@4bc222e
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4bc222e
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5e17553a
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@74f6c5d8
Adding type registration serializable -> org.hibernate.type.SerializableType@13bc8645
Adding type registration object -> org.hibernate.type.ObjectType@7bf3a5d8
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7bf3a5d8
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7e4c72d6
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6cd64b3f
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@51b01550
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2ef0dd86
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3337d04c
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6de6faa6
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3cad68df
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@14998e21
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1921994e] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@43c87306] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@14f40030]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
HHH10001001: Connection properties: {password=rootpassword, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.47 ( Revision: fe1903b1ecb4a96a917f7ed3190d80c049b1de29 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@334ebcaa] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5a0bef24]
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name AirlineUsers
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers on table airline_users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=email_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property emailId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:emailId]
building SimpleValue for emailId
Building property emailId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=mobile_no, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property mobileNo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:mobileNo]
building SimpleValue for mobileNo
Building property mobileNo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=role, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property role with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:role]
building SimpleValue for role
Building property role
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name BookingStatus
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus on table booking_status
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=ticket_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property ticketId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:ticketId]
building SimpleValue for ticketId
Building property ticketId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(ticket_id)]), ticketId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=airlineUsers, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property airlineUsers with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:airlineUsers]
building SimpleValue for airlineUsers
Building property airlineUsers
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flightDetails, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightDetails with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightDetails]
building SimpleValue for flightDetails
Building property flightDetails
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightId]
building SimpleValue for flightId
Building property flightId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=no_of_seats_booked, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsbooked with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:noofseatsbooked]
building SimpleValue for noofseatsbooked
Building property noofseatsbooked
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name FlightDetails
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails on table flight_details
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightId]
building SimpleValue for flightId
Building property flightId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(flight_id)]), flightId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalDate]
building SimpleValue for arrivalDate
Building property arrivalDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalTime]
building SimpleValue for arrivalTime
Building property arrivalTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departure_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureDate]
building SimpleValue for departureDate
Building property departureDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departur_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureTime]
building SimpleValue for departureTime
Building property departureTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=destination, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property destination with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:destination]
building SimpleValue for destination
Building property destination
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightName]
building SimpleValue for flightName
Building property flightName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=seats_available, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsavailable with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:noofseatsavailable]
building SimpleValue for noofseatsavailable
Building property noofseatsavailable
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=source, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property source with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:source]
building SimpleValue for source
Building property source
Starting fillSimpleValue for id
Starting fillSimpleValue for emailId
Starting fillSimpleValue for mobileNo
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for role
Starting fillSimpleValue for ticketId
Starting fillSimpleValue for airlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Starting fillSimpleValue for flightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Starting fillSimpleValue for flightId
Starting fillSimpleValue for id
Starting fillSimpleValue for noofseatsbooked
Starting fillSimpleValue for flightId
Starting fillSimpleValue for arrivalDate
Starting fillSimpleValue for arrivalTime
Starting fillSimpleValue for departureDate
Starting fillSimpleValue for departureTime
Starting fillSimpleValue for destination
Starting fillSimpleValue for flightName
Starting fillSimpleValue for noofseatsavailable
Starting fillSimpleValue for source
Forcing column [id] to be non-null as it is part of the primary key for table [airline_users]
Forcing column [ticket_id] to be non-null as it is part of the primary key for table [booking_status]
Forcing column [flight_id] to be non-null as it is part of the primary key for table [flight_details]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: disabled
JPA compliance - query : 
JPA compliance - closed-handling : 
JPA compliance - lists : 
JPA compliance - transactions : 
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate\target\classes;C:\Users\DELL\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\DELL\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\DELL\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\DELL\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\DELL\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\DELL\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\DELL\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\DELL\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\DELL\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\DELL\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\DELL\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\DELL\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\DELL\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\DELL\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-entitymanager\5.4.2.Final\hibernate-entitymanager-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\projectlombok\lombok\1.18.8\lombok-1.18.8.jar;C:\Users\DELL\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, javax.persistence.jdbc.user=****, java.vm.specification.version=14, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.1\bin, sun.java.command=com.javafullstackfeb.airlinereservationsystem.controller.MainController, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\DELL, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=C:\Program Files\Java\jdk-14.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.1+7, user.name=DELL, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=TestPersistence, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\DELL\AppData\Local\Temp\, java.version=14.0.1, user.dir=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2f0ed952, java.library.path=C:\Program Files\Java\jdk-14.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_251/bin/server;C:/Program Files/Java/jre1.8.0_251/bin;C:/Program Files/Java/jre1.8.0_251/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_251\bin;C:\Program Files\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\Users\DELL\AppData\Local\Microsoft\WindowsApps;;C:\Users\DELL\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.1+7, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@334ebcaa] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6f044c58]
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
 Version select: select id from airline_users where id =?
 Snapshot select: select airlineuse_.id, airlineuse_.email_id as email_id2_0_, airlineuse_.mobile_no as mobile_n3_0_, airlineuse_.name as name4_0_, airlineuse_.password as password5_0_, airlineuse_.role as role6_0_ from airline_users airlineuse_ where airlineuse_.id=?
 Insert 0: insert into airline_users (email_id, mobile_no, name, password, role, id) values (?, ?, ?, ?, ?, ?)
 Update 0: update airline_users set email_id=?, mobile_no=?, name=?, password=?, role=? where id=?
 Delete 0: delete from airline_users where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45aca496]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [NONE]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ceddaf8]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [READ]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
 Version select: select ticket_id from booking_status where ticket_id =?
 Snapshot select: select bookingsta_.ticket_id, bookingsta_.airlineUsers as airlineU2_1_, bookingsta_.flightDetails as flightDe3_1_, bookingsta_.flight_id as flight_i4_1_, bookingsta_.id as id5_1_, bookingsta_.no_of_seats_booked as no_of_se6_1_ from booking_status bookingsta_ where bookingsta_.ticket_id=?
 Insert 0: insert into booking_status (airlineUsers, flightDetails, flight_id, id, no_of_seats_booked, ticket_id) values (?, ?, ?, ?, ?, ?)
 Update 0: update booking_status set airlineUsers=?, flightDetails=?, flight_id=?, id=?, no_of_seats_booked=? where ticket_id=?
 Delete 0: delete from booking_status where ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1db87583]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [NONE]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d6d1d42]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [READ]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
 Version select: select flight_id from flight_details where flight_id =?
 Snapshot select: select flightdeta_.flight_id, flightdeta_.arrival_date as arrival_2_2_, flightdeta_.arrival_time as arrival_3_2_, flightdeta_.departure_date as departur4_2_, flightdeta_.departur_time as departur5_2_, flightdeta_.destination as destinat6_2_, flightdeta_.flight_name as flight_n7_2_, flightdeta_.seats_available as seats_av8_2_, flightdeta_.source as source9_2_ from flight_details flightdeta_ where flightdeta_.flight_id=?
 Insert 0: insert into flight_details (arrival_date, arrival_time, departure_date, departur_time, destination, flight_name, seats_available, source, flight_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update flight_details set arrival_date=?, arrival_time=?, departure_date=?, departur_time=?, destination=?, flight_name=?, seats_available=?, source=? where flight_id=?
 Delete 0: delete from flight_details where flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5afbd567]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [NONE]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57545c3f]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [READ]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@76a805b7] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : airline_users
No alter strings for table : booking_status
No alter strings for table : flight_details
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 19714a4b-8cc1-4702-b5ab-05d35c38cee8 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin

    select
        flightdeta0_.flight_id as flight_i1_2_0_,
        flightdeta0_.arrival_date as arrival_2_2_0_,
        flightdeta0_.arrival_time as arrival_3_2_0_,
        flightdeta0_.departure_date as departur4_2_0_,
        flightdeta0_.departur_time as departur5_2_0_,
        flightdeta0_.destination as destinat6_2_0_,
        flightdeta0_.flight_name as flight_n7_2_0_,
        flightdeta0_.seats_available as seats_av8_2_0_,
        flightdeta0_.source as source9_2_0_ 
    from
        flight_details flightdeta0_ 
    where
        flightdeta0_.flight_id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2001]
Done materializing entity [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2001]
HHH000387: ResultSet's statement was not registered
Done entity load : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2001
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails{departureTime=10:00, flightName=AirAsia, arrivalTime=08:00, noofseatsavailable=20, destination=Hyderabd, flightId=2001, departureDate=2020-12-01, source=Vizag, arrivalDate=2020-12-01}
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
begin

    select
        airlineuse0_.id as id1_0_0_,
        airlineuse0_.email_id as email_id2_0_0_,
        airlineuse0_.mobile_no as mobile_n3_0_0_,
        airlineuse0_.name as name4_0_0_,
        airlineuse0_.password as password5_0_0_,
        airlineuse0_.role as role6_0_0_ 
    from
        airline_users airlineuse0_ 
    where
        airlineuse0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers#5001]
Done materializing entity [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers#5001]
HHH000387: ResultSet's statement was not registered
Done entity load : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers#5001
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails{departureTime=10:00, flightName=AirAsia, arrivalTime=08:00, noofseatsavailable=20, destination=Hyderabd, flightId=2001, departureDate=2020-12-01, source=Vizag, arrivalDate=2020-12-01}
com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers{password=@Suni123, role=user, name=sunitha, emailId=sunitha@gmail.com, id=5001, mobileNo=9177897241}
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
begin
Generated identifier: 6465, using strategy: org.hibernate.id.Assigned
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 1 insertions, 0 updates, 0 deletions to 3 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails{departureTime=10:00, flightName=AirAsia, arrivalTime=08:00, noofseatsavailable=20, destination=Hyderabd, flightId=2001, departureDate=2020-12-01, source=Vizag, arrivalDate=2020-12-01}
com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus{noofseatsbooked=3, flightDetails=null, flightId=2001, id=5001, airlineUsers=null, ticketId=6465}
com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers{password=@Suni123, role=user, name=sunitha, emailId=sunitha@gmail.com, id=5001, mobileNo=9177897241}

    insert 
    into
        booking_status
        (airlineUsers, flightDetails, flight_id, id, no_of_seats_booked, ticket_id) 
    values
        (?, ?, ?, ?, ?, ?)
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
HHH000031: Closing
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@34a2d6e0] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6f044c58]
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Request placed to Airline Management 
6465    2001   5001   3
1.   Search Flight By Source
2.   Search Flight By Destination
3.   Search Flight By Name
4.   View All Flight Details
5.   Book The Flight
6.   Cancel The Tickets
7.   Logout
Enter Ticket Id To Cancel The Ticket 
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=TestPersistence, explicit-provider=null] against incoming persistence unit name [TestPersistence]
No PersistenceProvider explicitly requested, assuming Hibernate
PersistenceUnitInfo [
	name: TestPersistence
	persistence provider classname: null
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/DELL/eclipse-workspace/airlinereservationsystemjpawithhibernate/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: rootpassword
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: update
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@239a307b
Adding type registration boolean -> org.hibernate.type.BooleanType@239a307b
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@239a307b
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5f8e8a9d
Adding type registration true_false -> org.hibernate.type.TrueFalseType@17bffc17
Adding type registration yes_no -> org.hibernate.type.YesNoType@338fc1d8
Adding type registration byte -> org.hibernate.type.ByteType@72c8e7b
Adding type registration byte -> org.hibernate.type.ByteType@72c8e7b
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@72c8e7b
Adding type registration character -> org.hibernate.type.CharacterType@57bc27f5
Adding type registration char -> org.hibernate.type.CharacterType@57bc27f5
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@57bc27f5
Adding type registration short -> org.hibernate.type.ShortType@33ecda92
Adding type registration short -> org.hibernate.type.ShortType@33ecda92
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@33ecda92
Adding type registration integer -> org.hibernate.type.IntegerType@55de24cc
Adding type registration int -> org.hibernate.type.IntegerType@55de24cc
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55de24cc
Adding type registration long -> org.hibernate.type.LongType@25df00a0
Adding type registration long -> org.hibernate.type.LongType@25df00a0
Adding type registration java.lang.Long -> org.hibernate.type.LongType@25df00a0
Adding type registration float -> org.hibernate.type.FloatType@491b9b8
Adding type registration float -> org.hibernate.type.FloatType@491b9b8
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@491b9b8
Adding type registration double -> org.hibernate.type.DoubleType@16150369
Adding type registration double -> org.hibernate.type.DoubleType@16150369
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@16150369
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b1cfb87
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b1cfb87
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6f15d60e
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6f15d60e
Adding type registration string -> org.hibernate.type.StringType@5340477f
Adding type registration java.lang.String -> org.hibernate.type.StringType@5340477f
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@387a8303
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@126253fd
Adding type registration url -> org.hibernate.type.UrlType@1807f5a7
Adding type registration java.net.URL -> org.hibernate.type.UrlType@1807f5a7
Adding type registration Duration -> org.hibernate.type.DurationType@7bbc8656
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7bbc8656
Adding type registration Instant -> org.hibernate.type.InstantType@2f953efd
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2f953efd
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@41330d4f
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@41330d4f
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@37313c65
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@37313c65
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5d908d47
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5d908d47
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@69ee81fc
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@69ee81fc
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3b35a229
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3b35a229
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e3f861
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e3f861
Adding type registration date -> org.hibernate.type.DateType@78452606
Adding type registration java.sql.Date -> org.hibernate.type.DateType@78452606
Adding type registration time -> org.hibernate.type.TimeType@2235eaab
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2235eaab
Adding type registration timestamp -> org.hibernate.type.TimestampType@10289886
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10289886
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10289886
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1a5a4e19
Adding type registration calendar -> org.hibernate.type.CalendarType@24105dc5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@24105dc5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@24105dc5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@50029372
Adding type registration locale -> org.hibernate.type.LocaleType@5038d0b5
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5038d0b5
Adding type registration currency -> org.hibernate.type.CurrencyType@61710c6
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@61710c6
Adding type registration timezone -> org.hibernate.type.TimeZoneType@5f9edf14
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5f9edf14
Adding type registration class -> org.hibernate.type.ClassType@7ac296f6
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7ac296f6
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79defdc
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79defdc
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b86805d
Adding type registration binary -> org.hibernate.type.BinaryType@17d919b6
Adding type registration byte[] -> org.hibernate.type.BinaryType@17d919b6
Adding type registration [B -> org.hibernate.type.BinaryType@17d919b6
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e62d773
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e62d773
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e62d773
Adding type registration row_version -> org.hibernate.type.RowVersionType@47c81abf
Adding type registration image -> org.hibernate.type.ImageType@18ece7f4
Adding type registration characters -> org.hibernate.type.CharArrayType@35b74c5c
Adding type registration char[] -> org.hibernate.type.CharArrayType@35b74c5c
Adding type registration [C -> org.hibernate.type.CharArrayType@35b74c5c
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4808bc9b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4808bc9b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4808bc9b
Adding type registration text -> org.hibernate.type.TextType@1ebea008
Adding type registration ntext -> org.hibernate.type.NTextType@163370c2
Adding type registration blob -> org.hibernate.type.BlobType@7b50df34
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7b50df34
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@64ec96c6
Adding type registration clob -> org.hibernate.type.ClobType@e25951c
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@e25951c
Adding type registration nclob -> org.hibernate.type.NClobType@4bc222e
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4bc222e
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5e17553a
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@74f6c5d8
Adding type registration serializable -> org.hibernate.type.SerializableType@13bc8645
Adding type registration object -> org.hibernate.type.ObjectType@7bf3a5d8
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7bf3a5d8
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2740e316
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5b5a4aed
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2c991465
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5fef2aac
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7f973a14
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@76130a29
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@124d02b2
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3451f01d
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@72503b19] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1cfc2538] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@66deec87]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
HHH10001001: Connection properties: {password=rootpassword, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.47 ( Revision: fe1903b1ecb4a96a917f7ed3190d80c049b1de29 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3667faa8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1756f7cc]
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name AirlineUsers
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers on table airline_users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=email_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property emailId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:emailId]
building SimpleValue for emailId
Building property emailId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=mobile_no, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property mobileNo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:mobileNo]
building SimpleValue for mobileNo
Building property mobileNo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=role, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property role with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:role]
building SimpleValue for role
Building property role
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name BookingStatus
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus on table booking_status
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=ticket_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property ticketId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:ticketId]
building SimpleValue for ticketId
Building property ticketId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(ticket_id)]), ticketId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=airlineUsers, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property airlineUsers with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:airlineUsers]
building SimpleValue for airlineUsers
Building property airlineUsers
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flightDetails, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightDetails with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightDetails]
building SimpleValue for flightDetails
Building property flightDetails
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightId]
building SimpleValue for flightId
Building property flightId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=no_of_seats_booked, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsbooked with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:noofseatsbooked]
building SimpleValue for noofseatsbooked
Building property noofseatsbooked
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name FlightDetails
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails on table flight_details
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightId]
building SimpleValue for flightId
Building property flightId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(flight_id)]), flightId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalDate]
building SimpleValue for arrivalDate
Building property arrivalDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalTime]
building SimpleValue for arrivalTime
Building property arrivalTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departure_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureDate]
building SimpleValue for departureDate
Building property departureDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departur_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureTime]
building SimpleValue for departureTime
Building property departureTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=destination, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property destination with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:destination]
building SimpleValue for destination
Building property destination
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightName]
building SimpleValue for flightName
Building property flightName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=seats_available, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsavailable with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:noofseatsavailable]
building SimpleValue for noofseatsavailable
Building property noofseatsavailable
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=source, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property source with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:source]
building SimpleValue for source
Building property source
Starting fillSimpleValue for id
Starting fillSimpleValue for emailId
Starting fillSimpleValue for mobileNo
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for role
Starting fillSimpleValue for ticketId
Starting fillSimpleValue for airlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Starting fillSimpleValue for flightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Starting fillSimpleValue for flightId
Starting fillSimpleValue for id
Starting fillSimpleValue for noofseatsbooked
Starting fillSimpleValue for flightId
Starting fillSimpleValue for arrivalDate
Starting fillSimpleValue for arrivalTime
Starting fillSimpleValue for departureDate
Starting fillSimpleValue for departureTime
Starting fillSimpleValue for destination
Starting fillSimpleValue for flightName
Starting fillSimpleValue for noofseatsavailable
Starting fillSimpleValue for source
Forcing column [id] to be non-null as it is part of the primary key for table [airline_users]
Forcing column [ticket_id] to be non-null as it is part of the primary key for table [booking_status]
Forcing column [flight_id] to be non-null as it is part of the primary key for table [flight_details]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: disabled
JPA compliance - query : 
JPA compliance - closed-handling : 
JPA compliance - lists : 
JPA compliance - transactions : 
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate\target\classes;C:\Users\DELL\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\DELL\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\DELL\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\DELL\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\DELL\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\DELL\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\DELL\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\DELL\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\DELL\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\DELL\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\DELL\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\DELL\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\DELL\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\DELL\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-entitymanager\5.4.2.Final\hibernate-entitymanager-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\projectlombok\lombok\1.18.8\lombok-1.18.8.jar;C:\Users\DELL\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, javax.persistence.jdbc.user=****, java.vm.specification.version=14, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.1\bin, sun.java.command=com.javafullstackfeb.airlinereservationsystem.controller.MainController, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\DELL, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=C:\Program Files\Java\jdk-14.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.1+7, user.name=DELL, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=TestPersistence, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\DELL\AppData\Local\Temp\, java.version=14.0.1, user.dir=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6e0e5dec, java.library.path=C:\Program Files\Java\jdk-14.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_251/bin/server;C:/Program Files/Java/jre1.8.0_251/bin;C:/Program Files/Java/jre1.8.0_251/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_251\bin;C:\Program Files\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\Users\DELL\AppData\Local\Microsoft\WindowsApps;;C:\Users\DELL\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.1+7, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3667faa8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@48a663e9]
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
 Version select: select id from airline_users where id =?
 Snapshot select: select airlineuse_.id, airlineuse_.email_id as email_id2_0_, airlineuse_.mobile_no as mobile_n3_0_, airlineuse_.name as name4_0_, airlineuse_.password as password5_0_, airlineuse_.role as role6_0_ from airline_users airlineuse_ where airlineuse_.id=?
 Insert 0: insert into airline_users (email_id, mobile_no, name, password, role, id) values (?, ?, ?, ?, ?, ?)
 Update 0: update airline_users set email_id=?, mobile_no=?, name=?, password=?, role=? where id=?
 Delete 0: delete from airline_users where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f6bf8aa]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [NONE]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bdf]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [READ]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
 Version select: select ticket_id from booking_status where ticket_id =?
 Snapshot select: select bookingsta_.ticket_id, bookingsta_.airlineUsers as airlineU2_1_, bookingsta_.flightDetails as flightDe3_1_, bookingsta_.flight_id as flight_i4_1_, bookingsta_.id as id5_1_, bookingsta_.no_of_seats_booked as no_of_se6_1_ from booking_status bookingsta_ where bookingsta_.ticket_id=?
 Insert 0: insert into booking_status (airlineUsers, flightDetails, flight_id, id, no_of_seats_booked, ticket_id) values (?, ?, ?, ?, ?, ?)
 Update 0: update booking_status set airlineUsers=?, flightDetails=?, flight_id=?, id=?, no_of_seats_booked=? where ticket_id=?
 Delete 0: delete from booking_status where ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c63762b]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [NONE]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78422efb]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [READ]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
 Version select: select flight_id from flight_details where flight_id =?
 Snapshot select: select flightdeta_.flight_id, flightdeta_.arrival_date as arrival_2_2_, flightdeta_.arrival_time as arrival_3_2_, flightdeta_.departure_date as departur4_2_, flightdeta_.departur_time as departur5_2_, flightdeta_.destination as destinat6_2_, flightdeta_.flight_name as flight_n7_2_, flightdeta_.seats_available as seats_av8_2_, flightdeta_.source as source9_2_ from flight_details flightdeta_ where flightdeta_.flight_id=?
 Insert 0: insert into flight_details (arrival_date, arrival_time, departure_date, departur_time, destination, flight_name, seats_available, source, flight_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update flight_details set arrival_date=?, arrival_time=?, departure_date=?, departur_time=?, destination=?, flight_name=?, seats_available=?, source=? where flight_id=?
 Delete 0: delete from flight_details where flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68e02f33]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [NONE]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d48e998]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [READ]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3069a360] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : airline_users
No alter strings for table : booking_status
No alter strings for table : flight_details
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: e8299ff7-7655-4a26-8a60-bb8729933ae1 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin

    select
        bookingsta0_.ticket_id as ticket_i1_1_0_,
        bookingsta0_.airlineUsers as airlineU2_1_0_,
        bookingsta0_.flightDetails as flightDe3_1_0_,
        bookingsta0_.flight_id as flight_i4_1_0_,
        bookingsta0_.id as id5_1_0_,
        bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ 
    from
        booking_status bookingsta0_ 
    where
        bookingsta0_.ticket_id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus#6465]
Done materializing entity [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus#6465]
HHH000387: ResultSet's statement was not registered
Done entity load : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus#6465
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus{noofseatsbooked=3, flightDetails=null, flightId=2001, id=5001, airlineUsers=null, ticketId=6465}

    delete 
    from
        booking_status 
    where
        ticket_id=?
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
HHH000420: Closing un-released batch
HHH000031: Closing
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4debbf0] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@48a663e9]
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=TestPersistence, explicit-provider=null] against incoming persistence unit name [TestPersistence]
No PersistenceProvider explicitly requested, assuming Hibernate
PersistenceUnitInfo [
	name: TestPersistence
	persistence provider classname: null
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/DELL/eclipse-workspace/airlinereservationsystemjpawithhibernate/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: rootpassword
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: update
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@239a307b
Adding type registration boolean -> org.hibernate.type.BooleanType@239a307b
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@239a307b
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5f8e8a9d
Adding type registration true_false -> org.hibernate.type.TrueFalseType@17bffc17
Adding type registration yes_no -> org.hibernate.type.YesNoType@338fc1d8
Adding type registration byte -> org.hibernate.type.ByteType@72c8e7b
Adding type registration byte -> org.hibernate.type.ByteType@72c8e7b
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@72c8e7b
Adding type registration character -> org.hibernate.type.CharacterType@57bc27f5
Adding type registration char -> org.hibernate.type.CharacterType@57bc27f5
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@57bc27f5
Adding type registration short -> org.hibernate.type.ShortType@33ecda92
Adding type registration short -> org.hibernate.type.ShortType@33ecda92
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@33ecda92
Adding type registration integer -> org.hibernate.type.IntegerType@55de24cc
Adding type registration int -> org.hibernate.type.IntegerType@55de24cc
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55de24cc
Adding type registration long -> org.hibernate.type.LongType@25df00a0
Adding type registration long -> org.hibernate.type.LongType@25df00a0
Adding type registration java.lang.Long -> org.hibernate.type.LongType@25df00a0
Adding type registration float -> org.hibernate.type.FloatType@491b9b8
Adding type registration float -> org.hibernate.type.FloatType@491b9b8
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@491b9b8
Adding type registration double -> org.hibernate.type.DoubleType@16150369
Adding type registration double -> org.hibernate.type.DoubleType@16150369
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@16150369
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b1cfb87
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b1cfb87
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6f15d60e
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6f15d60e
Adding type registration string -> org.hibernate.type.StringType@5340477f
Adding type registration java.lang.String -> org.hibernate.type.StringType@5340477f
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@387a8303
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@126253fd
Adding type registration url -> org.hibernate.type.UrlType@1807f5a7
Adding type registration java.net.URL -> org.hibernate.type.UrlType@1807f5a7
Adding type registration Duration -> org.hibernate.type.DurationType@7bbc8656
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7bbc8656
Adding type registration Instant -> org.hibernate.type.InstantType@2f953efd
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2f953efd
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@41330d4f
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@41330d4f
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@37313c65
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@37313c65
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5d908d47
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5d908d47
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@69ee81fc
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@69ee81fc
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3b35a229
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3b35a229
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e3f861
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e3f861
Adding type registration date -> org.hibernate.type.DateType@78452606
Adding type registration java.sql.Date -> org.hibernate.type.DateType@78452606
Adding type registration time -> org.hibernate.type.TimeType@2235eaab
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2235eaab
Adding type registration timestamp -> org.hibernate.type.TimestampType@10289886
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10289886
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10289886
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1a5a4e19
Adding type registration calendar -> org.hibernate.type.CalendarType@24105dc5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@24105dc5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@24105dc5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@50029372
Adding type registration locale -> org.hibernate.type.LocaleType@5038d0b5
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5038d0b5
Adding type registration currency -> org.hibernate.type.CurrencyType@61710c6
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@61710c6
Adding type registration timezone -> org.hibernate.type.TimeZoneType@5f9edf14
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5f9edf14
Adding type registration class -> org.hibernate.type.ClassType@7ac296f6
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7ac296f6
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79defdc
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79defdc
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b86805d
Adding type registration binary -> org.hibernate.type.BinaryType@17d919b6
Adding type registration byte[] -> org.hibernate.type.BinaryType@17d919b6
Adding type registration [B -> org.hibernate.type.BinaryType@17d919b6
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e62d773
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e62d773
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e62d773
Adding type registration row_version -> org.hibernate.type.RowVersionType@47c81abf
Adding type registration image -> org.hibernate.type.ImageType@18ece7f4
Adding type registration characters -> org.hibernate.type.CharArrayType@35b74c5c
Adding type registration char[] -> org.hibernate.type.CharArrayType@35b74c5c
Adding type registration [C -> org.hibernate.type.CharArrayType@35b74c5c
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4808bc9b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4808bc9b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4808bc9b
Adding type registration text -> org.hibernate.type.TextType@1ebea008
Adding type registration ntext -> org.hibernate.type.NTextType@163370c2
Adding type registration blob -> org.hibernate.type.BlobType@7b50df34
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7b50df34
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@64ec96c6
Adding type registration clob -> org.hibernate.type.ClobType@e25951c
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@e25951c
Adding type registration nclob -> org.hibernate.type.NClobType@4bc222e
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4bc222e
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5e17553a
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@74f6c5d8
Adding type registration serializable -> org.hibernate.type.SerializableType@13bc8645
Adding type registration object -> org.hibernate.type.ObjectType@7bf3a5d8
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7bf3a5d8
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5a917723
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7e4579c7
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@796f632b
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5d94a2dc
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@cedee22
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@59b32539
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5b47731f
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@233db8e9
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@40c2ce52] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@18a19e] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@60a7e509]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
HHH10001001: Connection properties: {password=rootpassword, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.47 ( Revision: fe1903b1ecb4a96a917f7ed3190d80c049b1de29 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@36f7d7b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@60aec68a]
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name AirlineUsers
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers on table airline_users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=email_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property emailId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:emailId]
building SimpleValue for emailId
Building property emailId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=mobile_no, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property mobileNo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:mobileNo]
building SimpleValue for mobileNo
Building property mobileNo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=role, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property role with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:role]
building SimpleValue for role
Building property role
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name BookingStatus
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus on table booking_status
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=ticket_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property ticketId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:ticketId]
building SimpleValue for ticketId
Building property ticketId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(ticket_id)]), ticketId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=airlineUsers, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property airlineUsers with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:airlineUsers]
building SimpleValue for airlineUsers
Building property airlineUsers
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flightDetails, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightDetails with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightDetails]
building SimpleValue for flightDetails
Building property flightDetails
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightId]
building SimpleValue for flightId
Building property flightId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=no_of_seats_booked, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsbooked with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:noofseatsbooked]
building SimpleValue for noofseatsbooked
Building property noofseatsbooked
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name FlightDetails
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails on table flight_details
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightId]
building SimpleValue for flightId
Building property flightId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(flight_id)]), flightId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalDate]
building SimpleValue for arrivalDate
Building property arrivalDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalTime]
building SimpleValue for arrivalTime
Building property arrivalTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departure_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureDate]
building SimpleValue for departureDate
Building property departureDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departur_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureTime]
building SimpleValue for departureTime
Building property departureTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=destination, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property destination with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:destination]
building SimpleValue for destination
Building property destination
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightName]
building SimpleValue for flightName
Building property flightName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=seats_available, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsavailable with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:noofseatsavailable]
building SimpleValue for noofseatsavailable
Building property noofseatsavailable
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=source, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property source with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:source]
building SimpleValue for source
Building property source
Starting fillSimpleValue for id
Starting fillSimpleValue for emailId
Starting fillSimpleValue for mobileNo
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for role
Starting fillSimpleValue for ticketId
Starting fillSimpleValue for airlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Starting fillSimpleValue for flightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Starting fillSimpleValue for flightId
Starting fillSimpleValue for id
Starting fillSimpleValue for noofseatsbooked
Starting fillSimpleValue for flightId
Starting fillSimpleValue for arrivalDate
Starting fillSimpleValue for arrivalTime
Starting fillSimpleValue for departureDate
Starting fillSimpleValue for departureTime
Starting fillSimpleValue for destination
Starting fillSimpleValue for flightName
Starting fillSimpleValue for noofseatsavailable
Starting fillSimpleValue for source
Forcing column [id] to be non-null as it is part of the primary key for table [airline_users]
Forcing column [ticket_id] to be non-null as it is part of the primary key for table [booking_status]
Forcing column [flight_id] to be non-null as it is part of the primary key for table [flight_details]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: disabled
JPA compliance - query : 
JPA compliance - closed-handling : 
JPA compliance - lists : 
JPA compliance - transactions : 
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate\target\classes;C:\Users\DELL\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\DELL\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\DELL\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\DELL\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\DELL\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\DELL\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\DELL\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\DELL\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\DELL\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\DELL\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\DELL\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\DELL\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\DELL\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\DELL\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-entitymanager\5.4.2.Final\hibernate-entitymanager-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\projectlombok\lombok\1.18.8\lombok-1.18.8.jar;C:\Users\DELL\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, javax.persistence.jdbc.user=****, java.vm.specification.version=14, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.1\bin, sun.java.command=com.javafullstackfeb.airlinereservationsystem.controller.MainController, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\DELL, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=C:\Program Files\Java\jdk-14.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.1+7, user.name=DELL, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=TestPersistence, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\DELL\AppData\Local\Temp\, java.version=14.0.1, user.dir=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4d157493, java.library.path=C:\Program Files\Java\jdk-14.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_251/bin/server;C:/Program Files/Java/jre1.8.0_251/bin;C:/Program Files/Java/jre1.8.0_251/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_251\bin;C:\Program Files\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\Users\DELL\AppData\Local\Microsoft\WindowsApps;;C:\Users\DELL\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.1+7, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@36f7d7b] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@54c622a7]
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
 Version select: select id from airline_users where id =?
 Snapshot select: select airlineuse_.id, airlineuse_.email_id as email_id2_0_, airlineuse_.mobile_no as mobile_n3_0_, airlineuse_.name as name4_0_, airlineuse_.password as password5_0_, airlineuse_.role as role6_0_ from airline_users airlineuse_ where airlineuse_.id=?
 Insert 0: insert into airline_users (email_id, mobile_no, name, password, role, id) values (?, ?, ?, ?, ?, ?)
 Update 0: update airline_users set email_id=?, mobile_no=?, name=?, password=?, role=? where id=?
 Delete 0: delete from airline_users where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cf336fd]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [NONE]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41ef1ea2]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [READ]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
 Version select: select ticket_id from booking_status where ticket_id =?
 Snapshot select: select bookingsta_.ticket_id, bookingsta_.airlineUsers as airlineU2_1_, bookingsta_.flightDetails as flightDe3_1_, bookingsta_.flight_id as flight_i4_1_, bookingsta_.id as id5_1_, bookingsta_.no_of_seats_booked as no_of_se6_1_ from booking_status bookingsta_ where bookingsta_.ticket_id=?
 Insert 0: insert into booking_status (airlineUsers, flightDetails, flight_id, id, no_of_seats_booked, ticket_id) values (?, ?, ?, ?, ?, ?)
 Update 0: update booking_status set airlineUsers=?, flightDetails=?, flight_id=?, id=?, no_of_seats_booked=? where ticket_id=?
 Delete 0: delete from booking_status where ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@583fb274]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [NONE]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1989e8c6]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [READ]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
 Version select: select flight_id from flight_details where flight_id =?
 Snapshot select: select flightdeta_.flight_id, flightdeta_.arrival_date as arrival_2_2_, flightdeta_.arrival_time as arrival_3_2_, flightdeta_.departure_date as departur4_2_, flightdeta_.departur_time as departur5_2_, flightdeta_.destination as destinat6_2_, flightdeta_.flight_name as flight_n7_2_, flightdeta_.seats_available as seats_av8_2_, flightdeta_.source as source9_2_ from flight_details flightdeta_ where flightdeta_.flight_id=?
 Insert 0: insert into flight_details (arrival_date, arrival_time, departure_date, departur_time, destination, flight_name, seats_available, source, flight_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update flight_details set arrival_date=?, arrival_time=?, departure_date=?, departur_time=?, destination=?, flight_name=?, seats_available=?, source=? where flight_id=?
 Delete 0: delete from flight_details where flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@104dc1a2]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [NONE]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@314a31b0]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [READ]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@79d3473e] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : airline_users
No alter strings for table : booking_status
No alter strings for table : flight_details
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 042c47b7-760a-414f-9b42-c9c413c55cfa (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin

    select
        bookingsta0_.ticket_id as ticket_i1_1_0_,
        bookingsta0_.airlineUsers as airlineU2_1_0_,
        bookingsta0_.flightDetails as flightDe3_1_0_,
        bookingsta0_.flight_id as flight_i4_1_0_,
        bookingsta0_.id as id5_1_0_,
        bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ 
    from
        booking_status bookingsta0_ 
    where
        bookingsta0_.ticket_id=?
HHH000387: ResultSet's statement was not registered
Done entity load : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus#6465
JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:314)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:206)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:381)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:191)
	at org.hibernate.internal.SessionImpl.remove(SessionImpl.java:3513)
	at com.javafullstackfeb.airlinereservationsystem.dao.DaoImpl.cancelTicket(DaoImpl.java:260)
	at com.javafullstackfeb.airlinereservationsystem.service.ServiceImpl.cancelTicket(ServiceImpl.java:69)
	at com.javafullstackfeb.airlinereservationsystem.controller.SubAirlineController.arsController(SubAirlineController.java:592)
	at com.javafullstackfeb.airlinereservationsystem.controller.MainController.main(MainController.java:9)
rolling back
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
HHH000031: Closing
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@76e90da5] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@54c622a7]
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
TicketId Can't Be Removed or Deleted from Booking Details
1.   Search Flight By Source
2.   Search Flight By Destination
3.   Search Flight By Name
4.   View All Flight Details
5.   Book The Flight
6.   Cancel The Tickets
7.   Logout
************* Welcome To Airline Reservation System *************
1. Search Flight By Source
2. Search Flight By Destination
3. Search Flight By Name
4. View All Flight Details
5. Register
6. Login
Enter registered email to login : 
Enter registered Password to login : 
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=TestPersistence, explicit-provider=null] against incoming persistence unit name [TestPersistence]
No PersistenceProvider explicitly requested, assuming Hibernate
PersistenceUnitInfo [
	name: TestPersistence
	persistence provider classname: null
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/DELL/eclipse-workspace/airlinereservationsystemjpawithhibernate/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: rootpassword
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: update
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate Core {5.4.2.Final}
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@239a307b
Adding type registration boolean -> org.hibernate.type.BooleanType@239a307b
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@239a307b
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5f8e8a9d
Adding type registration true_false -> org.hibernate.type.TrueFalseType@17bffc17
Adding type registration yes_no -> org.hibernate.type.YesNoType@338fc1d8
Adding type registration byte -> org.hibernate.type.ByteType@72c8e7b
Adding type registration byte -> org.hibernate.type.ByteType@72c8e7b
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@72c8e7b
Adding type registration character -> org.hibernate.type.CharacterType@57bc27f5
Adding type registration char -> org.hibernate.type.CharacterType@57bc27f5
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@57bc27f5
Adding type registration short -> org.hibernate.type.ShortType@33ecda92
Adding type registration short -> org.hibernate.type.ShortType@33ecda92
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@33ecda92
Adding type registration integer -> org.hibernate.type.IntegerType@55de24cc
Adding type registration int -> org.hibernate.type.IntegerType@55de24cc
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55de24cc
Adding type registration long -> org.hibernate.type.LongType@25df00a0
Adding type registration long -> org.hibernate.type.LongType@25df00a0
Adding type registration java.lang.Long -> org.hibernate.type.LongType@25df00a0
Adding type registration float -> org.hibernate.type.FloatType@491b9b8
Adding type registration float -> org.hibernate.type.FloatType@491b9b8
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@491b9b8
Adding type registration double -> org.hibernate.type.DoubleType@16150369
Adding type registration double -> org.hibernate.type.DoubleType@16150369
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@16150369
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b1cfb87
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b1cfb87
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6f15d60e
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6f15d60e
Adding type registration string -> org.hibernate.type.StringType@5340477f
Adding type registration java.lang.String -> org.hibernate.type.StringType@5340477f
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@387a8303
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@126253fd
Adding type registration url -> org.hibernate.type.UrlType@1807f5a7
Adding type registration java.net.URL -> org.hibernate.type.UrlType@1807f5a7
Adding type registration Duration -> org.hibernate.type.DurationType@7bbc8656
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7bbc8656
Adding type registration Instant -> org.hibernate.type.InstantType@2f953efd
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2f953efd
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@41330d4f
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@41330d4f
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@37313c65
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@37313c65
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5d908d47
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5d908d47
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@69ee81fc
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@69ee81fc
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3b35a229
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3b35a229
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e3f861
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e3f861
Adding type registration date -> org.hibernate.type.DateType@78452606
Adding type registration java.sql.Date -> org.hibernate.type.DateType@78452606
Adding type registration time -> org.hibernate.type.TimeType@2235eaab
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2235eaab
Adding type registration timestamp -> org.hibernate.type.TimestampType@10289886
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10289886
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10289886
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1a5a4e19
Adding type registration calendar -> org.hibernate.type.CalendarType@24105dc5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@24105dc5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@24105dc5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@50029372
Adding type registration locale -> org.hibernate.type.LocaleType@5038d0b5
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5038d0b5
Adding type registration currency -> org.hibernate.type.CurrencyType@61710c6
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@61710c6
Adding type registration timezone -> org.hibernate.type.TimeZoneType@5f9edf14
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5f9edf14
Adding type registration class -> org.hibernate.type.ClassType@7ac296f6
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7ac296f6
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79defdc
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79defdc
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b86805d
Adding type registration binary -> org.hibernate.type.BinaryType@17d919b6
Adding type registration byte[] -> org.hibernate.type.BinaryType@17d919b6
Adding type registration [B -> org.hibernate.type.BinaryType@17d919b6
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e62d773
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e62d773
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e62d773
Adding type registration row_version -> org.hibernate.type.RowVersionType@47c81abf
Adding type registration image -> org.hibernate.type.ImageType@18ece7f4
Adding type registration characters -> org.hibernate.type.CharArrayType@35b74c5c
Adding type registration char[] -> org.hibernate.type.CharArrayType@35b74c5c
Adding type registration [C -> org.hibernate.type.CharArrayType@35b74c5c
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4808bc9b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4808bc9b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4808bc9b
Adding type registration text -> org.hibernate.type.TextType@1ebea008
Adding type registration ntext -> org.hibernate.type.NTextType@163370c2
Adding type registration blob -> org.hibernate.type.BlobType@7b50df34
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7b50df34
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@64ec96c6
Adding type registration clob -> org.hibernate.type.ClobType@e25951c
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@e25951c
Adding type registration nclob -> org.hibernate.type.NClobType@4bc222e
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4bc222e
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5e17553a
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@74f6c5d8
Adding type registration serializable -> org.hibernate.type.SerializableType@13bc8645
Adding type registration object -> org.hibernate.type.ObjectType@7bf3a5d8
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7bf3a5d8
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2205a05d
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@72ef8d15
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6aa8e115
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5e21e98f
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@51a9ad5e
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5f20155b
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@72ade7e3
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@239105a8
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@59e2d8e3] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2b72cb8a] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7f8a9499]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
HHH10001001: Connection properties: {password=rootpassword, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.47 ( Revision: fe1903b1ecb4a96a917f7ed3190d80c049b1de29 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@22b53226] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1fcb4808]
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name AirlineUsers
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers on table airline_users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=email_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property emailId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:emailId]
building SimpleValue for emailId
Building property emailId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=mobile_no, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property mobileNo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:mobileNo]
building SimpleValue for mobileNo
Building property mobileNo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=role, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property role with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:role]
building SimpleValue for role
Building property role
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name BookingStatus
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus on table booking_status
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=ticket_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property ticketId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:ticketId]
building SimpleValue for ticketId
Building property ticketId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(ticket_id)]), ticketId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=airlineUsers, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property airlineUsers with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:airlineUsers]
building SimpleValue for airlineUsers
Building property airlineUsers
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flightDetails, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightDetails with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightDetails]
building SimpleValue for flightDetails
Building property flightDetails
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightId]
building SimpleValue for flightId
Building property flightId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=no_of_seats_booked, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsbooked with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:noofseatsbooked]
building SimpleValue for noofseatsbooked
Building property noofseatsbooked
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name FlightDetails
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails on table flight_details
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightId]
building SimpleValue for flightId
Building property flightId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(flight_id)]), flightId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalDate]
building SimpleValue for arrivalDate
Building property arrivalDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalTime]
building SimpleValue for arrivalTime
Building property arrivalTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departure_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureDate]
building SimpleValue for departureDate
Building property departureDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departur_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureTime]
building SimpleValue for departureTime
Building property departureTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=destination, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property destination with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:destination]
building SimpleValue for destination
Building property destination
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightName]
building SimpleValue for flightName
Building property flightName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=seats_available, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsavailable with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:noofseatsavailable]
building SimpleValue for noofseatsavailable
Building property noofseatsavailable
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=source, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property source with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:source]
building SimpleValue for source
Building property source
Starting fillSimpleValue for id
Starting fillSimpleValue for emailId
Starting fillSimpleValue for mobileNo
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for role
Starting fillSimpleValue for ticketId
Starting fillSimpleValue for airlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Starting fillSimpleValue for flightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Starting fillSimpleValue for flightId
Starting fillSimpleValue for id
Starting fillSimpleValue for noofseatsbooked
Starting fillSimpleValue for flightId
Starting fillSimpleValue for arrivalDate
Starting fillSimpleValue for arrivalTime
Starting fillSimpleValue for departureDate
Starting fillSimpleValue for departureTime
Starting fillSimpleValue for destination
Starting fillSimpleValue for flightName
Starting fillSimpleValue for noofseatsavailable
Starting fillSimpleValue for source
Forcing column [id] to be non-null as it is part of the primary key for table [airline_users]
Forcing column [ticket_id] to be non-null as it is part of the primary key for table [booking_status]
Forcing column [flight_id] to be non-null as it is part of the primary key for table [flight_details]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: disabled
JPA compliance - query : 
JPA compliance - closed-handling : 
JPA compliance - lists : 
JPA compliance - transactions : 
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate\target\classes;C:\Users\DELL\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\DELL\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\DELL\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\DELL\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\DELL\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\DELL\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\DELL\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\DELL\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\DELL\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\DELL\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\DELL\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\DELL\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\DELL\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\DELL\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-entitymanager\5.4.2.Final\hibernate-entitymanager-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\projectlombok\lombok\1.18.8\lombok-1.18.8.jar;C:\Users\DELL\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, javax.persistence.jdbc.user=****, java.vm.specification.version=14, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.1\bin, sun.java.command=com.javafullstackfeb.airlinereservationsystem.controller.MainController, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\DELL, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=C:\Program Files\Java\jdk-14.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.1+7, user.name=DELL, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=TestPersistence, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\DELL\AppData\Local\Temp\, java.version=14.0.1, user.dir=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@41c62850, java.library.path=C:\Program Files\Java\jdk-14.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_251/bin/server;C:/Program Files/Java/jre1.8.0_251/bin;C:/Program Files/Java/jre1.8.0_251/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_251\bin;C:\Program Files\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\Users\DELL\AppData\Local\Microsoft\WindowsApps;;C:\Users\DELL\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.1+7, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@22b53226] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5d10455d]
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
 Version select: select id from airline_users where id =?
 Snapshot select: select airlineuse_.id, airlineuse_.email_id as email_id2_0_, airlineuse_.mobile_no as mobile_n3_0_, airlineuse_.name as name4_0_, airlineuse_.password as password5_0_, airlineuse_.role as role6_0_ from airline_users airlineuse_ where airlineuse_.id=?
 Insert 0: insert into airline_users (email_id, mobile_no, name, password, role, id) values (?, ?, ?, ?, ?, ?)
 Update 0: update airline_users set email_id=?, mobile_no=?, name=?, password=?, role=? where id=?
 Delete 0: delete from airline_users where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@446c3920]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [NONE]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39e43310]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [READ]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
 Version select: select ticket_id from booking_status where ticket_id =?
 Snapshot select: select bookingsta_.ticket_id, bookingsta_.airlineUsers as airlineU2_1_, bookingsta_.flightDetails as flightDe3_1_, bookingsta_.flight_id as flight_i4_1_, bookingsta_.id as id5_1_, bookingsta_.no_of_seats_booked as no_of_se6_1_ from booking_status bookingsta_ where bookingsta_.ticket_id=?
 Insert 0: insert into booking_status (airlineUsers, flightDetails, flight_id, id, no_of_seats_booked, ticket_id) values (?, ?, ?, ?, ?, ?)
 Update 0: update booking_status set airlineUsers=?, flightDetails=?, flight_id=?, id=?, no_of_seats_booked=? where ticket_id=?
 Delete 0: delete from booking_status where ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21c7208d]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [NONE]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c129ef6]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [READ]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
 Version select: select flight_id from flight_details where flight_id =?
 Snapshot select: select flightdeta_.flight_id, flightdeta_.arrival_date as arrival_2_2_, flightdeta_.arrival_time as arrival_3_2_, flightdeta_.departure_date as departur4_2_, flightdeta_.departur_time as departur5_2_, flightdeta_.destination as destinat6_2_, flightdeta_.flight_name as flight_n7_2_, flightdeta_.seats_available as seats_av8_2_, flightdeta_.source as source9_2_ from flight_details flightdeta_ where flightdeta_.flight_id=?
 Insert 0: insert into flight_details (arrival_date, arrival_time, departure_date, departur_time, destination, flight_name, seats_available, source, flight_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update flight_details set arrival_date=?, arrival_time=?, departure_date=?, departur_time=?, destination=?, flight_name=?, seats_available=?, source=? where flight_id=?
 Delete 0: delete from flight_details where flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a8cbffe]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [NONE]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61e7bf2f]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [READ]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@74dbb1ee] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : airline_users
No alter strings for table : booking_status
No alter strings for table : flight_details
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4b3fe06e
Registering SessionFactory: fa442cca-e8f2-416f-a75a-a787f20dd784 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@64984b0f
parse() - HQL: select u from  com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers u where u.emailId = :emailId and u.password =:password
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'javafullstackfeb'
    |  |     |  |  |  \-[IDENT] Node: 'airlinereservationsystem'
    |  |     |  |  \-[IDENT] Node: 'dto'
    |  |     |  \-[IDENT] Node: 'AirlineUsers'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'u'
          |  |  \-[IDENT] Node: 'emailId'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'emailId'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'u'
             |  \-[IDENT] Node: 'password'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'password'

select << begin [level=1, statement=select]
FromClause{level=1} : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers (u) -> airlineuse0_
Resolved : u -> airlineuse0_.id
Resolved : u -> airlineuse0_.id
getDataType() : emailId -> org.hibernate.type.StringType@5340477f
Resolved : u.emailId -> airlineuse0_.email_id
Resolved : u -> airlineuse0_.id
getDataType() : password -> org.hibernate.type.StringType@5340477f
Resolved : u.password -> airlineuse0_.password
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} airlineuse0_.id ) ( FromClause{level=1} airline_users airlineuse0_ ) ( where ( and ( = ( airlineuse0_.email_id airlineuse0_.id emailId ) ? ) ( = ( airlineuse0_.password airlineuse0_.id password ) ? ) ) ) )
Using FROM fragment [airline_users airlineuse0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (airline_users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'airlineuse0_.id as id1_0_' {alias=u, className=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, tableAlias=airlineuse0_}
    |  \-[SQL_TOKEN] SqlFragment: 'airlineuse0_.email_id as email_id2_0_, airlineuse0_.mobile_no as mobile_n3_0_, airlineuse0_.name as name4_0_, airlineuse0_.password as password5_0_, airlineuse0_.role as role6_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[airlineuse0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'airline_users airlineuse0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=airline_users,tableAlias=airlineuse0_,origin=null,columns={,className=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'airlineuse0_.email_id' {propertyName=emailId,dereferenceType=PRIMITIVE,getPropertyPath=emailId,path=u.emailId,tableAlias=airlineuse0_,className=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers,classAlias=u}
          |  |  +-[ALIAS_REF] IdentNode: 'airlineuse0_.id' {alias=u, className=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, tableAlias=airlineuse0_}
          |  |  \-[IDENT] IdentNode: 'emailId' {originalText=emailId}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=emailId, expectedType=org.hibernate.type.StringType@5340477f}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'airlineuse0_.password' {propertyName=password,dereferenceType=PRIMITIVE,getPropertyPath=password,path=u.password,tableAlias=airlineuse0_,className=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers,classAlias=u}
             |  +-[ALIAS_REF] IdentNode: 'airlineuse0_.id' {alias=u, className=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, tableAlias=airlineuse0_}
             |  \-[IDENT] IdentNode: 'password' {originalText=password}
             \-[NAMED_PARAM] ParameterNode: '?' {name=password, expectedType=org.hibernate.type.StringType@5340477f}

throwQueryException() : no errors
HQL: select u from  com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers u where u.emailId = :emailId and u.password =:password
SQL: select airlineuse0_.id as id1_0_, airlineuse0_.email_id as email_id2_0_, airlineuse0_.mobile_no as mobile_n3_0_, airlineuse0_.name as name4_0_, airlineuse0_.password as password5_0_, airlineuse0_.role as role6_0_ from airline_users airlineuse0_ where airlineuse0_.email_id=? and airlineuse0_.password=?
throwQueryException() : no errors

    select
        airlineuse0_.id as id1_0_,
        airlineuse0_.email_id as email_id2_0_,
        airlineuse0_.mobile_no as mobile_n3_0_,
        airlineuse0_.name as name4_0_,
        airlineuse0_.password as password5_0_,
        airlineuse0_.role as role6_0_ 
    from
        airline_users airlineuse0_ 
    where
        airlineuse0_.email_id=? 
        and airlineuse0_.password=?
Result set row: 0
Result row: EntityKey[com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers#5001]
Resolving associations for [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers#5001]
Done materializing entity [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers#5001]
Initiating JDBC connection release from afterTransaction
HHH000031: Closing
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2264ea32] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5d10455d]
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Logged In Successfully....!!!
1.   Search Flight By Source
2.   Search Flight By Destination
3.   Search Flight By Name
4.   View All Flight Details
5.   Book The Flight
6.   Cancel The Tickets
7.   Logout
Enter User Id : 
Enter Flight Id : 
Enter No of seats : 
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=TestPersistence, explicit-provider=null] against incoming persistence unit name [TestPersistence]
No PersistenceProvider explicitly requested, assuming Hibernate
PersistenceUnitInfo [
	name: TestPersistence
	persistence provider classname: null
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/DELL/eclipse-workspace/airlinereservationsystemjpawithhibernate/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: rootpassword
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: update
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@239a307b
Adding type registration boolean -> org.hibernate.type.BooleanType@239a307b
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@239a307b
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5f8e8a9d
Adding type registration true_false -> org.hibernate.type.TrueFalseType@17bffc17
Adding type registration yes_no -> org.hibernate.type.YesNoType@338fc1d8
Adding type registration byte -> org.hibernate.type.ByteType@72c8e7b
Adding type registration byte -> org.hibernate.type.ByteType@72c8e7b
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@72c8e7b
Adding type registration character -> org.hibernate.type.CharacterType@57bc27f5
Adding type registration char -> org.hibernate.type.CharacterType@57bc27f5
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@57bc27f5
Adding type registration short -> org.hibernate.type.ShortType@33ecda92
Adding type registration short -> org.hibernate.type.ShortType@33ecda92
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@33ecda92
Adding type registration integer -> org.hibernate.type.IntegerType@55de24cc
Adding type registration int -> org.hibernate.type.IntegerType@55de24cc
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55de24cc
Adding type registration long -> org.hibernate.type.LongType@25df00a0
Adding type registration long -> org.hibernate.type.LongType@25df00a0
Adding type registration java.lang.Long -> org.hibernate.type.LongType@25df00a0
Adding type registration float -> org.hibernate.type.FloatType@491b9b8
Adding type registration float -> org.hibernate.type.FloatType@491b9b8
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@491b9b8
Adding type registration double -> org.hibernate.type.DoubleType@16150369
Adding type registration double -> org.hibernate.type.DoubleType@16150369
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@16150369
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b1cfb87
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b1cfb87
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6f15d60e
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6f15d60e
Adding type registration string -> org.hibernate.type.StringType@5340477f
Adding type registration java.lang.String -> org.hibernate.type.StringType@5340477f
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@387a8303
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@126253fd
Adding type registration url -> org.hibernate.type.UrlType@1807f5a7
Adding type registration java.net.URL -> org.hibernate.type.UrlType@1807f5a7
Adding type registration Duration -> org.hibernate.type.DurationType@7bbc8656
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7bbc8656
Adding type registration Instant -> org.hibernate.type.InstantType@2f953efd
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2f953efd
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@41330d4f
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@41330d4f
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@37313c65
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@37313c65
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5d908d47
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5d908d47
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@69ee81fc
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@69ee81fc
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3b35a229
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3b35a229
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e3f861
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e3f861
Adding type registration date -> org.hibernate.type.DateType@78452606
Adding type registration java.sql.Date -> org.hibernate.type.DateType@78452606
Adding type registration time -> org.hibernate.type.TimeType@2235eaab
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2235eaab
Adding type registration timestamp -> org.hibernate.type.TimestampType@10289886
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10289886
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10289886
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1a5a4e19
Adding type registration calendar -> org.hibernate.type.CalendarType@24105dc5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@24105dc5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@24105dc5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@50029372
Adding type registration locale -> org.hibernate.type.LocaleType@5038d0b5
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5038d0b5
Adding type registration currency -> org.hibernate.type.CurrencyType@61710c6
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@61710c6
Adding type registration timezone -> org.hibernate.type.TimeZoneType@5f9edf14
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5f9edf14
Adding type registration class -> org.hibernate.type.ClassType@7ac296f6
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7ac296f6
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79defdc
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79defdc
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b86805d
Adding type registration binary -> org.hibernate.type.BinaryType@17d919b6
Adding type registration byte[] -> org.hibernate.type.BinaryType@17d919b6
Adding type registration [B -> org.hibernate.type.BinaryType@17d919b6
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e62d773
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e62d773
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e62d773
Adding type registration row_version -> org.hibernate.type.RowVersionType@47c81abf
Adding type registration image -> org.hibernate.type.ImageType@18ece7f4
Adding type registration characters -> org.hibernate.type.CharArrayType@35b74c5c
Adding type registration char[] -> org.hibernate.type.CharArrayType@35b74c5c
Adding type registration [C -> org.hibernate.type.CharArrayType@35b74c5c
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4808bc9b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4808bc9b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4808bc9b
Adding type registration text -> org.hibernate.type.TextType@1ebea008
Adding type registration ntext -> org.hibernate.type.NTextType@163370c2
Adding type registration blob -> org.hibernate.type.BlobType@7b50df34
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7b50df34
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@64ec96c6
Adding type registration clob -> org.hibernate.type.ClobType@e25951c
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@e25951c
Adding type registration nclob -> org.hibernate.type.NClobType@4bc222e
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4bc222e
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5e17553a
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@74f6c5d8
Adding type registration serializable -> org.hibernate.type.SerializableType@13bc8645
Adding type registration object -> org.hibernate.type.ObjectType@7bf3a5d8
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7bf3a5d8
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@176f7f3b
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@30ca0779
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@58740366
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@47be0f9b
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2bc426f0
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4bd51d3e
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@33425811
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4b74b35
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@e4e1ef5] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6d11ceef] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4cb2918c]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
HHH10001001: Connection properties: {password=rootpassword, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.47 ( Revision: fe1903b1ecb4a96a917f7ed3190d80c049b1de29 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4012d5bc] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4375b013]
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name AirlineUsers
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers on table airline_users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=email_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property emailId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:emailId]
building SimpleValue for emailId
Building property emailId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=mobile_no, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property mobileNo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:mobileNo]
building SimpleValue for mobileNo
Building property mobileNo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=role, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property role with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:role]
building SimpleValue for role
Building property role
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name BookingStatus
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus on table booking_status
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=ticket_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property ticketId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:ticketId]
building SimpleValue for ticketId
Building property ticketId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(ticket_id)]), ticketId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=airlineUsers, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property airlineUsers with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:airlineUsers]
building SimpleValue for airlineUsers
Building property airlineUsers
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flightDetails, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightDetails with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightDetails]
building SimpleValue for flightDetails
Building property flightDetails
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightId]
building SimpleValue for flightId
Building property flightId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=no_of_seats_booked, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsbooked with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:noofseatsbooked]
building SimpleValue for noofseatsbooked
Building property noofseatsbooked
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name FlightDetails
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails on table flight_details
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightId]
building SimpleValue for flightId
Building property flightId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(flight_id)]), flightId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalDate]
building SimpleValue for arrivalDate
Building property arrivalDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalTime]
building SimpleValue for arrivalTime
Building property arrivalTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departure_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureDate]
building SimpleValue for departureDate
Building property departureDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departur_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureTime]
building SimpleValue for departureTime
Building property departureTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=destination, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property destination with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:destination]
building SimpleValue for destination
Building property destination
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightName]
building SimpleValue for flightName
Building property flightName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=seats_available, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsavailable with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:noofseatsavailable]
building SimpleValue for noofseatsavailable
Building property noofseatsavailable
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=source, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property source with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:source]
building SimpleValue for source
Building property source
Starting fillSimpleValue for id
Starting fillSimpleValue for emailId
Starting fillSimpleValue for mobileNo
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for role
Starting fillSimpleValue for ticketId
Starting fillSimpleValue for airlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Starting fillSimpleValue for flightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Starting fillSimpleValue for flightId
Starting fillSimpleValue for id
Starting fillSimpleValue for noofseatsbooked
Starting fillSimpleValue for flightId
Starting fillSimpleValue for arrivalDate
Starting fillSimpleValue for arrivalTime
Starting fillSimpleValue for departureDate
Starting fillSimpleValue for departureTime
Starting fillSimpleValue for destination
Starting fillSimpleValue for flightName
Starting fillSimpleValue for noofseatsavailable
Starting fillSimpleValue for source
Forcing column [id] to be non-null as it is part of the primary key for table [airline_users]
Forcing column [ticket_id] to be non-null as it is part of the primary key for table [booking_status]
Forcing column [flight_id] to be non-null as it is part of the primary key for table [flight_details]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: disabled
JPA compliance - query : 
JPA compliance - closed-handling : 
JPA compliance - lists : 
JPA compliance - transactions : 
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate\target\classes;C:\Users\DELL\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\DELL\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\DELL\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\DELL\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\DELL\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\DELL\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\DELL\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\DELL\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\DELL\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\DELL\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\DELL\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\DELL\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\DELL\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\DELL\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-entitymanager\5.4.2.Final\hibernate-entitymanager-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\projectlombok\lombok\1.18.8\lombok-1.18.8.jar;C:\Users\DELL\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, javax.persistence.jdbc.user=****, java.vm.specification.version=14, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.1\bin, sun.java.command=com.javafullstackfeb.airlinereservationsystem.controller.MainController, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\DELL, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=C:\Program Files\Java\jdk-14.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.1+7, user.name=DELL, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=TestPersistence, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\DELL\AppData\Local\Temp\, java.version=14.0.1, user.dir=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5c723f2d, java.library.path=C:\Program Files\Java\jdk-14.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_251/bin/server;C:/Program Files/Java/jre1.8.0_251/bin;C:/Program Files/Java/jre1.8.0_251/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_251\bin;C:\Program Files\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\Users\DELL\AppData\Local\Microsoft\WindowsApps;;C:\Users\DELL\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.1+7, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4012d5bc] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@432f521f]
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
 Version select: select id from airline_users where id =?
 Snapshot select: select airlineuse_.id, airlineuse_.email_id as email_id2_0_, airlineuse_.mobile_no as mobile_n3_0_, airlineuse_.name as name4_0_, airlineuse_.password as password5_0_, airlineuse_.role as role6_0_ from airline_users airlineuse_ where airlineuse_.id=?
 Insert 0: insert into airline_users (email_id, mobile_no, name, password, role, id) values (?, ?, ?, ?, ?, ?)
 Update 0: update airline_users set email_id=?, mobile_no=?, name=?, password=?, role=? where id=?
 Delete 0: delete from airline_users where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18f55704]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [NONE]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fbe155]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [READ]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
 Version select: select ticket_id from booking_status where ticket_id =?
 Snapshot select: select bookingsta_.ticket_id, bookingsta_.airlineUsers as airlineU2_1_, bookingsta_.flightDetails as flightDe3_1_, bookingsta_.flight_id as flight_i4_1_, bookingsta_.id as id5_1_, bookingsta_.no_of_seats_booked as no_of_se6_1_ from booking_status bookingsta_ where bookingsta_.ticket_id=?
 Insert 0: insert into booking_status (airlineUsers, flightDetails, flight_id, id, no_of_seats_booked, ticket_id) values (?, ?, ?, ?, ?, ?)
 Update 0: update booking_status set airlineUsers=?, flightDetails=?, flight_id=?, id=?, no_of_seats_booked=? where ticket_id=?
 Delete 0: delete from booking_status where ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58a2b917]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [NONE]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12bbfc54]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [READ]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
 Version select: select flight_id from flight_details where flight_id =?
 Snapshot select: select flightdeta_.flight_id, flightdeta_.arrival_date as arrival_2_2_, flightdeta_.arrival_time as arrival_3_2_, flightdeta_.departure_date as departur4_2_, flightdeta_.departur_time as departur5_2_, flightdeta_.destination as destinat6_2_, flightdeta_.flight_name as flight_n7_2_, flightdeta_.seats_available as seats_av8_2_, flightdeta_.source as source9_2_ from flight_details flightdeta_ where flightdeta_.flight_id=?
 Insert 0: insert into flight_details (arrival_date, arrival_time, departure_date, departur_time, destination, flight_name, seats_available, source, flight_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update flight_details set arrival_date=?, arrival_time=?, departure_date=?, departur_time=?, destination=?, flight_name=?, seats_available=?, source=? where flight_id=?
 Delete 0: delete from flight_details where flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59b65dce]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [NONE]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e922647]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [READ]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6504a875] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : airline_users
No alter strings for table : booking_status
No alter strings for table : flight_details
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: c4b59a12-517b-4929-b91d-f196293703f6 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin

    select
        flightdeta0_.flight_id as flight_i1_2_0_,
        flightdeta0_.arrival_date as arrival_2_2_0_,
        flightdeta0_.arrival_time as arrival_3_2_0_,
        flightdeta0_.departure_date as departur4_2_0_,
        flightdeta0_.departur_time as departur5_2_0_,
        flightdeta0_.destination as destinat6_2_0_,
        flightdeta0_.flight_name as flight_n7_2_0_,
        flightdeta0_.seats_available as seats_av8_2_0_,
        flightdeta0_.source as source9_2_0_ 
    from
        flight_details flightdeta0_ 
    where
        flightdeta0_.flight_id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2001]
Done materializing entity [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2001]
HHH000387: ResultSet's statement was not registered
Done entity load : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2001
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails{departureTime=10:00, flightName=AirAsia, arrivalTime=08:00, noofseatsavailable=20, destination=Hyderabd, flightId=2001, departureDate=2020-12-01, source=Vizag, arrivalDate=2020-12-01}
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
begin

    select
        airlineuse0_.id as id1_0_0_,
        airlineuse0_.email_id as email_id2_0_0_,
        airlineuse0_.mobile_no as mobile_n3_0_0_,
        airlineuse0_.name as name4_0_0_,
        airlineuse0_.password as password5_0_0_,
        airlineuse0_.role as role6_0_0_ 
    from
        airline_users airlineuse0_ 
    where
        airlineuse0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers#5001]
Done materializing entity [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers#5001]
HHH000387: ResultSet's statement was not registered
Done entity load : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers#5001
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails{departureTime=10:00, flightName=AirAsia, arrivalTime=08:00, noofseatsavailable=20, destination=Hyderabd, flightId=2001, departureDate=2020-12-01, source=Vizag, arrivalDate=2020-12-01}
com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers{password=@Suni123, role=user, name=sunitha, emailId=sunitha@gmail.com, id=5001, mobileNo=9177897241}
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
begin
Generated identifier: 1670, using strategy: org.hibernate.id.Assigned
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 1 insertions, 0 updates, 0 deletions to 3 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus{noofseatsbooked=10, flightDetails=null, flightId=2001, id=5001, airlineUsers=null, ticketId=1670}
com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails{departureTime=10:00, flightName=AirAsia, arrivalTime=08:00, noofseatsavailable=20, destination=Hyderabd, flightId=2001, departureDate=2020-12-01, source=Vizag, arrivalDate=2020-12-01}
com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers{password=@Suni123, role=user, name=sunitha, emailId=sunitha@gmail.com, id=5001, mobileNo=9177897241}

    insert 
    into
        booking_status
        (airlineUsers, flightDetails, flight_id, id, no_of_seats_booked, ticket_id) 
    values
        (?, ?, ?, ?, ?, ?)
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
HHH000031: Closing
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@11e355ca] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@432f521f]
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Request placed to Airline Management 
1670    2001   5001   10
1.   Search Flight By Source
2.   Search Flight By Destination
3.   Search Flight By Name
4.   View All Flight Details
5.   Book The Flight
6.   Cancel The Tickets
7.   Logout
Enter Ticket Id To Cancel The Ticket 
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=TestPersistence, explicit-provider=null] against incoming persistence unit name [TestPersistence]
No PersistenceProvider explicitly requested, assuming Hibernate
PersistenceUnitInfo [
	name: TestPersistence
	persistence provider classname: null
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/DELL/eclipse-workspace/airlinereservationsystemjpawithhibernate/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: rootpassword
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: update
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@239a307b
Adding type registration boolean -> org.hibernate.type.BooleanType@239a307b
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@239a307b
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5f8e8a9d
Adding type registration true_false -> org.hibernate.type.TrueFalseType@17bffc17
Adding type registration yes_no -> org.hibernate.type.YesNoType@338fc1d8
Adding type registration byte -> org.hibernate.type.ByteType@72c8e7b
Adding type registration byte -> org.hibernate.type.ByteType@72c8e7b
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@72c8e7b
Adding type registration character -> org.hibernate.type.CharacterType@57bc27f5
Adding type registration char -> org.hibernate.type.CharacterType@57bc27f5
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@57bc27f5
Adding type registration short -> org.hibernate.type.ShortType@33ecda92
Adding type registration short -> org.hibernate.type.ShortType@33ecda92
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@33ecda92
Adding type registration integer -> org.hibernate.type.IntegerType@55de24cc
Adding type registration int -> org.hibernate.type.IntegerType@55de24cc
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55de24cc
Adding type registration long -> org.hibernate.type.LongType@25df00a0
Adding type registration long -> org.hibernate.type.LongType@25df00a0
Adding type registration java.lang.Long -> org.hibernate.type.LongType@25df00a0
Adding type registration float -> org.hibernate.type.FloatType@491b9b8
Adding type registration float -> org.hibernate.type.FloatType@491b9b8
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@491b9b8
Adding type registration double -> org.hibernate.type.DoubleType@16150369
Adding type registration double -> org.hibernate.type.DoubleType@16150369
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@16150369
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b1cfb87
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b1cfb87
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6f15d60e
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6f15d60e
Adding type registration string -> org.hibernate.type.StringType@5340477f
Adding type registration java.lang.String -> org.hibernate.type.StringType@5340477f
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@387a8303
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@126253fd
Adding type registration url -> org.hibernate.type.UrlType@1807f5a7
Adding type registration java.net.URL -> org.hibernate.type.UrlType@1807f5a7
Adding type registration Duration -> org.hibernate.type.DurationType@7bbc8656
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7bbc8656
Adding type registration Instant -> org.hibernate.type.InstantType@2f953efd
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2f953efd
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@41330d4f
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@41330d4f
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@37313c65
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@37313c65
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5d908d47
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5d908d47
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@69ee81fc
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@69ee81fc
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3b35a229
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3b35a229
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e3f861
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e3f861
Adding type registration date -> org.hibernate.type.DateType@78452606
Adding type registration java.sql.Date -> org.hibernate.type.DateType@78452606
Adding type registration time -> org.hibernate.type.TimeType@2235eaab
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2235eaab
Adding type registration timestamp -> org.hibernate.type.TimestampType@10289886
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10289886
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10289886
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1a5a4e19
Adding type registration calendar -> org.hibernate.type.CalendarType@24105dc5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@24105dc5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@24105dc5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@50029372
Adding type registration locale -> org.hibernate.type.LocaleType@5038d0b5
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5038d0b5
Adding type registration currency -> org.hibernate.type.CurrencyType@61710c6
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@61710c6
Adding type registration timezone -> org.hibernate.type.TimeZoneType@5f9edf14
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5f9edf14
Adding type registration class -> org.hibernate.type.ClassType@7ac296f6
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7ac296f6
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79defdc
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79defdc
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b86805d
Adding type registration binary -> org.hibernate.type.BinaryType@17d919b6
Adding type registration byte[] -> org.hibernate.type.BinaryType@17d919b6
Adding type registration [B -> org.hibernate.type.BinaryType@17d919b6
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e62d773
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e62d773
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e62d773
Adding type registration row_version -> org.hibernate.type.RowVersionType@47c81abf
Adding type registration image -> org.hibernate.type.ImageType@18ece7f4
Adding type registration characters -> org.hibernate.type.CharArrayType@35b74c5c
Adding type registration char[] -> org.hibernate.type.CharArrayType@35b74c5c
Adding type registration [C -> org.hibernate.type.CharArrayType@35b74c5c
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4808bc9b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4808bc9b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4808bc9b
Adding type registration text -> org.hibernate.type.TextType@1ebea008
Adding type registration ntext -> org.hibernate.type.NTextType@163370c2
Adding type registration blob -> org.hibernate.type.BlobType@7b50df34
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7b50df34
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@64ec96c6
Adding type registration clob -> org.hibernate.type.ClobType@e25951c
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@e25951c
Adding type registration nclob -> org.hibernate.type.NClobType@4bc222e
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4bc222e
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5e17553a
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@74f6c5d8
Adding type registration serializable -> org.hibernate.type.SerializableType@13bc8645
Adding type registration object -> org.hibernate.type.ObjectType@7bf3a5d8
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7bf3a5d8
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3b705be7
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3a790e40
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@43acd79e
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1e1b061
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@38f77cd9
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4a8e6e89
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6fbb4061
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@63d5874f
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@60c73e58] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5984feef] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6c0905f6]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
HHH10001001: Connection properties: {password=rootpassword, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.47 ( Revision: fe1903b1ecb4a96a917f7ed3190d80c049b1de29 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4f327096] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1d61a348]
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name AirlineUsers
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers on table airline_users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=email_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property emailId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:emailId]
building SimpleValue for emailId
Building property emailId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=mobile_no, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property mobileNo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:mobileNo]
building SimpleValue for mobileNo
Building property mobileNo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=role, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property role with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:role]
building SimpleValue for role
Building property role
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name BookingStatus
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus on table booking_status
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=ticket_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property ticketId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:ticketId]
building SimpleValue for ticketId
Building property ticketId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(ticket_id)]), ticketId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=airlineUsers, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property airlineUsers with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:airlineUsers]
building SimpleValue for airlineUsers
Building property airlineUsers
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flightDetails, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightDetails with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightDetails]
building SimpleValue for flightDetails
Building property flightDetails
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightId]
building SimpleValue for flightId
Building property flightId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=no_of_seats_booked, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsbooked with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:noofseatsbooked]
building SimpleValue for noofseatsbooked
Building property noofseatsbooked
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name FlightDetails
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails on table flight_details
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightId]
building SimpleValue for flightId
Building property flightId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(flight_id)]), flightId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalDate]
building SimpleValue for arrivalDate
Building property arrivalDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalTime]
building SimpleValue for arrivalTime
Building property arrivalTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departure_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureDate]
building SimpleValue for departureDate
Building property departureDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departur_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureTime]
building SimpleValue for departureTime
Building property departureTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=destination, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property destination with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:destination]
building SimpleValue for destination
Building property destination
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightName]
building SimpleValue for flightName
Building property flightName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=seats_available, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsavailable with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:noofseatsavailable]
building SimpleValue for noofseatsavailable
Building property noofseatsavailable
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=source, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property source with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:source]
building SimpleValue for source
Building property source
Starting fillSimpleValue for id
Starting fillSimpleValue for emailId
Starting fillSimpleValue for mobileNo
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for role
Starting fillSimpleValue for ticketId
Starting fillSimpleValue for airlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Starting fillSimpleValue for flightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Starting fillSimpleValue for flightId
Starting fillSimpleValue for id
Starting fillSimpleValue for noofseatsbooked
Starting fillSimpleValue for flightId
Starting fillSimpleValue for arrivalDate
Starting fillSimpleValue for arrivalTime
Starting fillSimpleValue for departureDate
Starting fillSimpleValue for departureTime
Starting fillSimpleValue for destination
Starting fillSimpleValue for flightName
Starting fillSimpleValue for noofseatsavailable
Starting fillSimpleValue for source
Forcing column [id] to be non-null as it is part of the primary key for table [airline_users]
Forcing column [ticket_id] to be non-null as it is part of the primary key for table [booking_status]
Forcing column [flight_id] to be non-null as it is part of the primary key for table [flight_details]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: disabled
JPA compliance - query : 
JPA compliance - closed-handling : 
JPA compliance - lists : 
JPA compliance - transactions : 
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate\target\classes;C:\Users\DELL\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\DELL\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\DELL\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\DELL\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\DELL\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\DELL\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\DELL\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\DELL\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\DELL\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\DELL\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\DELL\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\DELL\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\DELL\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\DELL\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-entitymanager\5.4.2.Final\hibernate-entitymanager-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\projectlombok\lombok\1.18.8\lombok-1.18.8.jar;C:\Users\DELL\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, javax.persistence.jdbc.user=****, java.vm.specification.version=14, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.1\bin, sun.java.command=com.javafullstackfeb.airlinereservationsystem.controller.MainController, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\DELL, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=C:\Program Files\Java\jdk-14.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.1+7, user.name=DELL, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=TestPersistence, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\DELL\AppData\Local\Temp\, java.version=14.0.1, user.dir=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5f96f6a2, java.library.path=C:\Program Files\Java\jdk-14.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_251/bin/server;C:/Program Files/Java/jre1.8.0_251/bin;C:/Program Files/Java/jre1.8.0_251/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_251\bin;C:\Program Files\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\Users\DELL\AppData\Local\Microsoft\WindowsApps;;C:\Users\DELL\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.1+7, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4f327096] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@48df4071]
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
 Version select: select id from airline_users where id =?
 Snapshot select: select airlineuse_.id, airlineuse_.email_id as email_id2_0_, airlineuse_.mobile_no as mobile_n3_0_, airlineuse_.name as name4_0_, airlineuse_.password as password5_0_, airlineuse_.role as role6_0_ from airline_users airlineuse_ where airlineuse_.id=?
 Insert 0: insert into airline_users (email_id, mobile_no, name, password, role, id) values (?, ?, ?, ?, ?, ?)
 Update 0: update airline_users set email_id=?, mobile_no=?, name=?, password=?, role=? where id=?
 Delete 0: delete from airline_users where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@346f41a9]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [NONE]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25f723b0]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [READ]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
 Version select: select ticket_id from booking_status where ticket_id =?
 Snapshot select: select bookingsta_.ticket_id, bookingsta_.airlineUsers as airlineU2_1_, bookingsta_.flightDetails as flightDe3_1_, bookingsta_.flight_id as flight_i4_1_, bookingsta_.id as id5_1_, bookingsta_.no_of_seats_booked as no_of_se6_1_ from booking_status bookingsta_ where bookingsta_.ticket_id=?
 Insert 0: insert into booking_status (airlineUsers, flightDetails, flight_id, id, no_of_seats_booked, ticket_id) values (?, ?, ?, ?, ?, ?)
 Update 0: update booking_status set airlineUsers=?, flightDetails=?, flight_id=?, id=?, no_of_seats_booked=? where ticket_id=?
 Delete 0: delete from booking_status where ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40d60f2]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [NONE]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f74900b]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [READ]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
 Version select: select flight_id from flight_details where flight_id =?
 Snapshot select: select flightdeta_.flight_id, flightdeta_.arrival_date as arrival_2_2_, flightdeta_.arrival_time as arrival_3_2_, flightdeta_.departure_date as departur4_2_, flightdeta_.departur_time as departur5_2_, flightdeta_.destination as destinat6_2_, flightdeta_.flight_name as flight_n7_2_, flightdeta_.seats_available as seats_av8_2_, flightdeta_.source as source9_2_ from flight_details flightdeta_ where flightdeta_.flight_id=?
 Insert 0: insert into flight_details (arrival_date, arrival_time, departure_date, departur_time, destination, flight_name, seats_available, source, flight_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update flight_details set arrival_date=?, arrival_time=?, departure_date=?, departur_time=?, destination=?, flight_name=?, seats_available=?, source=? where flight_id=?
 Delete 0: delete from flight_details where flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c413ffc]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [NONE]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cd98a05]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [READ]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@286090c] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : airline_users
No alter strings for table : booking_status
No alter strings for table : flight_details
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 2ecea8fc-f9ea-410b-a06d-6ccc670777b7 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin

    select
        bookingsta0_.ticket_id as ticket_i1_1_0_,
        bookingsta0_.airlineUsers as airlineU2_1_0_,
        bookingsta0_.flightDetails as flightDe3_1_0_,
        bookingsta0_.flight_id as flight_i4_1_0_,
        bookingsta0_.id as id5_1_0_,
        bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ 
    from
        booking_status bookingsta0_ 
    where
        bookingsta0_.ticket_id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus#1670]
Done materializing entity [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus#1670]
HHH000387: ResultSet's statement was not registered
Done entity load : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus#1670
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus{noofseatsbooked=10, flightDetails=null, flightId=2001, id=5001, airlineUsers=null, ticketId=1670}

    delete 
    from
        booking_status 
    where
        ticket_id=?
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
HHH000420: Closing un-released batch
HHH000031: Closing
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2e86807a] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@48df4071]
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=TestPersistence, explicit-provider=null] against incoming persistence unit name [TestPersistence]
No PersistenceProvider explicitly requested, assuming Hibernate
PersistenceUnitInfo [
	name: TestPersistence
	persistence provider classname: null
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/DELL/eclipse-workspace/airlinereservationsystemjpawithhibernate/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: rootpassword
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: update
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@239a307b
Adding type registration boolean -> org.hibernate.type.BooleanType@239a307b
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@239a307b
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5f8e8a9d
Adding type registration true_false -> org.hibernate.type.TrueFalseType@17bffc17
Adding type registration yes_no -> org.hibernate.type.YesNoType@338fc1d8
Adding type registration byte -> org.hibernate.type.ByteType@72c8e7b
Adding type registration byte -> org.hibernate.type.ByteType@72c8e7b
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@72c8e7b
Adding type registration character -> org.hibernate.type.CharacterType@57bc27f5
Adding type registration char -> org.hibernate.type.CharacterType@57bc27f5
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@57bc27f5
Adding type registration short -> org.hibernate.type.ShortType@33ecda92
Adding type registration short -> org.hibernate.type.ShortType@33ecda92
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@33ecda92
Adding type registration integer -> org.hibernate.type.IntegerType@55de24cc
Adding type registration int -> org.hibernate.type.IntegerType@55de24cc
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55de24cc
Adding type registration long -> org.hibernate.type.LongType@25df00a0
Adding type registration long -> org.hibernate.type.LongType@25df00a0
Adding type registration java.lang.Long -> org.hibernate.type.LongType@25df00a0
Adding type registration float -> org.hibernate.type.FloatType@491b9b8
Adding type registration float -> org.hibernate.type.FloatType@491b9b8
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@491b9b8
Adding type registration double -> org.hibernate.type.DoubleType@16150369
Adding type registration double -> org.hibernate.type.DoubleType@16150369
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@16150369
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b1cfb87
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b1cfb87
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6f15d60e
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6f15d60e
Adding type registration string -> org.hibernate.type.StringType@5340477f
Adding type registration java.lang.String -> org.hibernate.type.StringType@5340477f
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@387a8303
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@126253fd
Adding type registration url -> org.hibernate.type.UrlType@1807f5a7
Adding type registration java.net.URL -> org.hibernate.type.UrlType@1807f5a7
Adding type registration Duration -> org.hibernate.type.DurationType@7bbc8656
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7bbc8656
Adding type registration Instant -> org.hibernate.type.InstantType@2f953efd
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2f953efd
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@41330d4f
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@41330d4f
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@37313c65
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@37313c65
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5d908d47
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5d908d47
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@69ee81fc
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@69ee81fc
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3b35a229
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3b35a229
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e3f861
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e3f861
Adding type registration date -> org.hibernate.type.DateType@78452606
Adding type registration java.sql.Date -> org.hibernate.type.DateType@78452606
Adding type registration time -> org.hibernate.type.TimeType@2235eaab
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2235eaab
Adding type registration timestamp -> org.hibernate.type.TimestampType@10289886
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10289886
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10289886
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1a5a4e19
Adding type registration calendar -> org.hibernate.type.CalendarType@24105dc5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@24105dc5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@24105dc5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@50029372
Adding type registration locale -> org.hibernate.type.LocaleType@5038d0b5
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5038d0b5
Adding type registration currency -> org.hibernate.type.CurrencyType@61710c6
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@61710c6
Adding type registration timezone -> org.hibernate.type.TimeZoneType@5f9edf14
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5f9edf14
Adding type registration class -> org.hibernate.type.ClassType@7ac296f6
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7ac296f6
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79defdc
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79defdc
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b86805d
Adding type registration binary -> org.hibernate.type.BinaryType@17d919b6
Adding type registration byte[] -> org.hibernate.type.BinaryType@17d919b6
Adding type registration [B -> org.hibernate.type.BinaryType@17d919b6
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e62d773
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e62d773
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e62d773
Adding type registration row_version -> org.hibernate.type.RowVersionType@47c81abf
Adding type registration image -> org.hibernate.type.ImageType@18ece7f4
Adding type registration characters -> org.hibernate.type.CharArrayType@35b74c5c
Adding type registration char[] -> org.hibernate.type.CharArrayType@35b74c5c
Adding type registration [C -> org.hibernate.type.CharArrayType@35b74c5c
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4808bc9b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4808bc9b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4808bc9b
Adding type registration text -> org.hibernate.type.TextType@1ebea008
Adding type registration ntext -> org.hibernate.type.NTextType@163370c2
Adding type registration blob -> org.hibernate.type.BlobType@7b50df34
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7b50df34
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@64ec96c6
Adding type registration clob -> org.hibernate.type.ClobType@e25951c
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@e25951c
Adding type registration nclob -> org.hibernate.type.NClobType@4bc222e
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4bc222e
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5e17553a
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@74f6c5d8
Adding type registration serializable -> org.hibernate.type.SerializableType@13bc8645
Adding type registration object -> org.hibernate.type.ObjectType@7bf3a5d8
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7bf3a5d8
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@40d23c82
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7cf78c85
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@ebe067d
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3a4ab7f7
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6badba10
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2b7e8044
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@550de6b8
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3a1706e1
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@3c6c4689] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@63cf9de0] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@594d9f07]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
HHH10001001: Connection properties: {password=rootpassword, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.47 ( Revision: fe1903b1ecb4a96a917f7ed3190d80c049b1de29 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@d257579] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@518ddd3b]
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name AirlineUsers
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers on table airline_users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=email_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property emailId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:emailId]
building SimpleValue for emailId
Building property emailId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=mobile_no, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property mobileNo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:mobileNo]
building SimpleValue for mobileNo
Building property mobileNo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=role, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property role with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:role]
building SimpleValue for role
Building property role
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name BookingStatus
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus on table booking_status
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=ticket_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property ticketId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:ticketId]
building SimpleValue for ticketId
Building property ticketId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(ticket_id)]), ticketId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=airlineUsers, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property airlineUsers with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:airlineUsers]
building SimpleValue for airlineUsers
Building property airlineUsers
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flightDetails, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightDetails with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightDetails]
building SimpleValue for flightDetails
Building property flightDetails
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightId]
building SimpleValue for flightId
Building property flightId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=no_of_seats_booked, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsbooked with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:noofseatsbooked]
building SimpleValue for noofseatsbooked
Building property noofseatsbooked
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name FlightDetails
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails on table flight_details
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightId]
building SimpleValue for flightId
Building property flightId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(flight_id)]), flightId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalDate]
building SimpleValue for arrivalDate
Building property arrivalDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalTime]
building SimpleValue for arrivalTime
Building property arrivalTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departure_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureDate]
building SimpleValue for departureDate
Building property departureDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departur_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureTime]
building SimpleValue for departureTime
Building property departureTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=destination, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property destination with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:destination]
building SimpleValue for destination
Building property destination
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightName]
building SimpleValue for flightName
Building property flightName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=seats_available, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsavailable with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:noofseatsavailable]
building SimpleValue for noofseatsavailable
Building property noofseatsavailable
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=source, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property source with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:source]
building SimpleValue for source
Building property source
Starting fillSimpleValue for id
Starting fillSimpleValue for emailId
Starting fillSimpleValue for mobileNo
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for role
Starting fillSimpleValue for ticketId
Starting fillSimpleValue for airlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Starting fillSimpleValue for flightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Starting fillSimpleValue for flightId
Starting fillSimpleValue for id
Starting fillSimpleValue for noofseatsbooked
Starting fillSimpleValue for flightId
Starting fillSimpleValue for arrivalDate
Starting fillSimpleValue for arrivalTime
Starting fillSimpleValue for departureDate
Starting fillSimpleValue for departureTime
Starting fillSimpleValue for destination
Starting fillSimpleValue for flightName
Starting fillSimpleValue for noofseatsavailable
Starting fillSimpleValue for source
Forcing column [id] to be non-null as it is part of the primary key for table [airline_users]
Forcing column [ticket_id] to be non-null as it is part of the primary key for table [booking_status]
Forcing column [flight_id] to be non-null as it is part of the primary key for table [flight_details]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: disabled
JPA compliance - query : 
JPA compliance - closed-handling : 
JPA compliance - lists : 
JPA compliance - transactions : 
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate\target\classes;C:\Users\DELL\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\DELL\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\DELL\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\DELL\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\DELL\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\DELL\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\DELL\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\DELL\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\DELL\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\DELL\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\DELL\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\DELL\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\DELL\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\DELL\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-entitymanager\5.4.2.Final\hibernate-entitymanager-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\projectlombok\lombok\1.18.8\lombok-1.18.8.jar;C:\Users\DELL\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, javax.persistence.jdbc.user=****, java.vm.specification.version=14, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.1\bin, sun.java.command=com.javafullstackfeb.airlinereservationsystem.controller.MainController, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\DELL, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=C:\Program Files\Java\jdk-14.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.1+7, user.name=DELL, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=TestPersistence, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\DELL\AppData\Local\Temp\, java.version=14.0.1, user.dir=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@12b5736c, java.library.path=C:\Program Files\Java\jdk-14.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_251/bin/server;C:/Program Files/Java/jre1.8.0_251/bin;C:/Program Files/Java/jre1.8.0_251/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_251\bin;C:\Program Files\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\Users\DELL\AppData\Local\Microsoft\WindowsApps;;C:\Users\DELL\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.1+7, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@d257579] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@539a138b]
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
 Version select: select id from airline_users where id =?
 Snapshot select: select airlineuse_.id, airlineuse_.email_id as email_id2_0_, airlineuse_.mobile_no as mobile_n3_0_, airlineuse_.name as name4_0_, airlineuse_.password as password5_0_, airlineuse_.role as role6_0_ from airline_users airlineuse_ where airlineuse_.id=?
 Insert 0: insert into airline_users (email_id, mobile_no, name, password, role, id) values (?, ?, ?, ?, ?, ?)
 Update 0: update airline_users set email_id=?, mobile_no=?, name=?, password=?, role=? where id=?
 Delete 0: delete from airline_users where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7dcb42a9]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [NONE]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d06f16f]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [READ]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
 Version select: select ticket_id from booking_status where ticket_id =?
 Snapshot select: select bookingsta_.ticket_id, bookingsta_.airlineUsers as airlineU2_1_, bookingsta_.flightDetails as flightDe3_1_, bookingsta_.flight_id as flight_i4_1_, bookingsta_.id as id5_1_, bookingsta_.no_of_seats_booked as no_of_se6_1_ from booking_status bookingsta_ where bookingsta_.ticket_id=?
 Insert 0: insert into booking_status (airlineUsers, flightDetails, flight_id, id, no_of_seats_booked, ticket_id) values (?, ?, ?, ?, ?, ?)
 Update 0: update booking_status set airlineUsers=?, flightDetails=?, flight_id=?, id=?, no_of_seats_booked=? where ticket_id=?
 Delete 0: delete from booking_status where ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68dd39d2]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [NONE]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60e3c26e]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [READ]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
 Version select: select flight_id from flight_details where flight_id =?
 Snapshot select: select flightdeta_.flight_id, flightdeta_.arrival_date as arrival_2_2_, flightdeta_.arrival_time as arrival_3_2_, flightdeta_.departure_date as departur4_2_, flightdeta_.departur_time as departur5_2_, flightdeta_.destination as destinat6_2_, flightdeta_.flight_name as flight_n7_2_, flightdeta_.seats_available as seats_av8_2_, flightdeta_.source as source9_2_ from flight_details flightdeta_ where flightdeta_.flight_id=?
 Insert 0: insert into flight_details (arrival_date, arrival_time, departure_date, departur_time, destination, flight_name, seats_available, source, flight_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update flight_details set arrival_date=?, arrival_time=?, departure_date=?, departur_time=?, destination=?, flight_name=?, seats_available=?, source=? where flight_id=?
 Delete 0: delete from flight_details where flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@999b951]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [NONE]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b410308]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [READ]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@16736040] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : airline_users
No alter strings for table : booking_status
No alter strings for table : flight_details
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 016c002a-8bad-469c-a66c-6c66fa9fc190 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin

    select
        bookingsta0_.ticket_id as ticket_i1_1_0_,
        bookingsta0_.airlineUsers as airlineU2_1_0_,
        bookingsta0_.flightDetails as flightDe3_1_0_,
        bookingsta0_.flight_id as flight_i4_1_0_,
        bookingsta0_.id as id5_1_0_,
        bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ 
    from
        booking_status bookingsta0_ 
    where
        bookingsta0_.ticket_id=?
HHH000387: ResultSet's statement was not registered
Done entity load : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus#1670
JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:314)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:206)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:381)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:191)
	at org.hibernate.internal.SessionImpl.remove(SessionImpl.java:3513)
	at com.javafullstackfeb.airlinereservationsystem.dao.DaoImpl.cancelTicket(DaoImpl.java:260)
	at com.javafullstackfeb.airlinereservationsystem.service.ServiceImpl.cancelTicket(ServiceImpl.java:69)
	at com.javafullstackfeb.airlinereservationsystem.controller.SubAirlineController.arsController(SubAirlineController.java:592)
	at com.javafullstackfeb.airlinereservationsystem.controller.MainController.main(MainController.java:9)
rolling back
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
HHH000031: Closing
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5a917723] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@539a138b]
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
The Cancel Ticket Id = 1670
1.   Search Flight By Source
2.   Search Flight By Destination
3.   Search Flight By Name
4.   View All Flight Details
5.   Book The Flight
6.   Cancel The Tickets
7.   Logout
************* Welcome To Airline Reservation System *************
1. Search Flight By Source
2. Search Flight By Destination
3. Search Flight By Name
4. View All Flight Details
5. Register
6. Login
Enter registered email to login : 
Enter registered Password to login : 
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=TestPersistence, explicit-provider=null] against incoming persistence unit name [TestPersistence]
No PersistenceProvider explicitly requested, assuming Hibernate
PersistenceUnitInfo [
	name: TestPersistence
	persistence provider classname: null
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/DELL/eclipse-workspace/airlinereservationsystemjpawithhibernate/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: rootpassword
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: update
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate Core {5.4.2.Final}
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@239a307b
Adding type registration boolean -> org.hibernate.type.BooleanType@239a307b
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@239a307b
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5f8e8a9d
Adding type registration true_false -> org.hibernate.type.TrueFalseType@17bffc17
Adding type registration yes_no -> org.hibernate.type.YesNoType@338fc1d8
Adding type registration byte -> org.hibernate.type.ByteType@72c8e7b
Adding type registration byte -> org.hibernate.type.ByteType@72c8e7b
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@72c8e7b
Adding type registration character -> org.hibernate.type.CharacterType@57bc27f5
Adding type registration char -> org.hibernate.type.CharacterType@57bc27f5
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@57bc27f5
Adding type registration short -> org.hibernate.type.ShortType@33ecda92
Adding type registration short -> org.hibernate.type.ShortType@33ecda92
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@33ecda92
Adding type registration integer -> org.hibernate.type.IntegerType@55de24cc
Adding type registration int -> org.hibernate.type.IntegerType@55de24cc
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55de24cc
Adding type registration long -> org.hibernate.type.LongType@25df00a0
Adding type registration long -> org.hibernate.type.LongType@25df00a0
Adding type registration java.lang.Long -> org.hibernate.type.LongType@25df00a0
Adding type registration float -> org.hibernate.type.FloatType@491b9b8
Adding type registration float -> org.hibernate.type.FloatType@491b9b8
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@491b9b8
Adding type registration double -> org.hibernate.type.DoubleType@16150369
Adding type registration double -> org.hibernate.type.DoubleType@16150369
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@16150369
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b1cfb87
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b1cfb87
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6f15d60e
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6f15d60e
Adding type registration string -> org.hibernate.type.StringType@5340477f
Adding type registration java.lang.String -> org.hibernate.type.StringType@5340477f
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@387a8303
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@126253fd
Adding type registration url -> org.hibernate.type.UrlType@1807f5a7
Adding type registration java.net.URL -> org.hibernate.type.UrlType@1807f5a7
Adding type registration Duration -> org.hibernate.type.DurationType@7bbc8656
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7bbc8656
Adding type registration Instant -> org.hibernate.type.InstantType@2f953efd
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2f953efd
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@41330d4f
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@41330d4f
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@37313c65
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@37313c65
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5d908d47
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5d908d47
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@69ee81fc
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@69ee81fc
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3b35a229
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3b35a229
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e3f861
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e3f861
Adding type registration date -> org.hibernate.type.DateType@78452606
Adding type registration java.sql.Date -> org.hibernate.type.DateType@78452606
Adding type registration time -> org.hibernate.type.TimeType@2235eaab
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2235eaab
Adding type registration timestamp -> org.hibernate.type.TimestampType@10289886
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10289886
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10289886
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1a5a4e19
Adding type registration calendar -> org.hibernate.type.CalendarType@24105dc5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@24105dc5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@24105dc5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@50029372
Adding type registration locale -> org.hibernate.type.LocaleType@5038d0b5
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5038d0b5
Adding type registration currency -> org.hibernate.type.CurrencyType@61710c6
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@61710c6
Adding type registration timezone -> org.hibernate.type.TimeZoneType@5f9edf14
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5f9edf14
Adding type registration class -> org.hibernate.type.ClassType@7ac296f6
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7ac296f6
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79defdc
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79defdc
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b86805d
Adding type registration binary -> org.hibernate.type.BinaryType@17d919b6
Adding type registration byte[] -> org.hibernate.type.BinaryType@17d919b6
Adding type registration [B -> org.hibernate.type.BinaryType@17d919b6
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e62d773
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e62d773
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e62d773
Adding type registration row_version -> org.hibernate.type.RowVersionType@47c81abf
Adding type registration image -> org.hibernate.type.ImageType@18ece7f4
Adding type registration characters -> org.hibernate.type.CharArrayType@35b74c5c
Adding type registration char[] -> org.hibernate.type.CharArrayType@35b74c5c
Adding type registration [C -> org.hibernate.type.CharArrayType@35b74c5c
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4808bc9b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4808bc9b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4808bc9b
Adding type registration text -> org.hibernate.type.TextType@1ebea008
Adding type registration ntext -> org.hibernate.type.NTextType@163370c2
Adding type registration blob -> org.hibernate.type.BlobType@7b50df34
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7b50df34
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@64ec96c6
Adding type registration clob -> org.hibernate.type.ClobType@e25951c
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@e25951c
Adding type registration nclob -> org.hibernate.type.NClobType@4bc222e
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4bc222e
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5e17553a
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@74f6c5d8
Adding type registration serializable -> org.hibernate.type.SerializableType@13bc8645
Adding type registration object -> org.hibernate.type.ObjectType@7bf3a5d8
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7bf3a5d8
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2205a05d
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@72ef8d15
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6aa8e115
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5e21e98f
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@51a9ad5e
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5f20155b
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@72ade7e3
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@239105a8
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@59e2d8e3] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2b72cb8a] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7f8a9499]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
HHH10001001: Connection properties: {password=rootpassword, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.47 ( Revision: fe1903b1ecb4a96a917f7ed3190d80c049b1de29 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@22b53226] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1fcb4808]
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name AirlineUsers
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers on table airline_users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=email_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property emailId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:emailId]
building SimpleValue for emailId
Building property emailId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=mobile_no, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property mobileNo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:mobileNo]
building SimpleValue for mobileNo
Building property mobileNo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=role, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property role with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:role]
building SimpleValue for role
Building property role
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name BookingStatus
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus on table booking_status
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=ticket_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property ticketId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:ticketId]
building SimpleValue for ticketId
Building property ticketId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(ticket_id)]), ticketId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=airlineUsers, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property airlineUsers with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:airlineUsers]
building SimpleValue for airlineUsers
Building property airlineUsers
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flightDetails, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightDetails with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightDetails]
building SimpleValue for flightDetails
Building property flightDetails
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightId]
building SimpleValue for flightId
Building property flightId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=no_of_seats_booked, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsbooked with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:noofseatsbooked]
building SimpleValue for noofseatsbooked
Building property noofseatsbooked
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name FlightDetails
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails on table flight_details
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightId]
building SimpleValue for flightId
Building property flightId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(flight_id)]), flightId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalDate]
building SimpleValue for arrivalDate
Building property arrivalDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalTime]
building SimpleValue for arrivalTime
Building property arrivalTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departure_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureDate]
building SimpleValue for departureDate
Building property departureDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departur_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureTime]
building SimpleValue for departureTime
Building property departureTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=destination, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property destination with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:destination]
building SimpleValue for destination
Building property destination
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightName]
building SimpleValue for flightName
Building property flightName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=seats_available, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsavailable with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:noofseatsavailable]
building SimpleValue for noofseatsavailable
Building property noofseatsavailable
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=source, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property source with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:source]
building SimpleValue for source
Building property source
Starting fillSimpleValue for id
Starting fillSimpleValue for emailId
Starting fillSimpleValue for mobileNo
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for role
Starting fillSimpleValue for ticketId
Starting fillSimpleValue for airlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Starting fillSimpleValue for flightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Starting fillSimpleValue for flightId
Starting fillSimpleValue for id
Starting fillSimpleValue for noofseatsbooked
Starting fillSimpleValue for flightId
Starting fillSimpleValue for arrivalDate
Starting fillSimpleValue for arrivalTime
Starting fillSimpleValue for departureDate
Starting fillSimpleValue for departureTime
Starting fillSimpleValue for destination
Starting fillSimpleValue for flightName
Starting fillSimpleValue for noofseatsavailable
Starting fillSimpleValue for source
Forcing column [id] to be non-null as it is part of the primary key for table [airline_users]
Forcing column [ticket_id] to be non-null as it is part of the primary key for table [booking_status]
Forcing column [flight_id] to be non-null as it is part of the primary key for table [flight_details]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: disabled
JPA compliance - query : 
JPA compliance - closed-handling : 
JPA compliance - lists : 
JPA compliance - transactions : 
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate\target\classes;C:\Users\DELL\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\DELL\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\DELL\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\DELL\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\DELL\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\DELL\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\DELL\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\DELL\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\DELL\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\DELL\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\DELL\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\DELL\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\DELL\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\DELL\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-entitymanager\5.4.2.Final\hibernate-entitymanager-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\projectlombok\lombok\1.18.8\lombok-1.18.8.jar;C:\Users\DELL\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, javax.persistence.jdbc.user=****, java.vm.specification.version=14, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.1\bin, sun.java.command=com.javafullstackfeb.airlinereservationsystem.controller.MainController, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\DELL, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=C:\Program Files\Java\jdk-14.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.1+7, user.name=DELL, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=TestPersistence, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\DELL\AppData\Local\Temp\, java.version=14.0.1, user.dir=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@41c62850, java.library.path=C:\Program Files\Java\jdk-14.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_251/bin/server;C:/Program Files/Java/jre1.8.0_251/bin;C:/Program Files/Java/jre1.8.0_251/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_251\bin;C:\Program Files\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\Users\DELL\AppData\Local\Microsoft\WindowsApps;;C:\Users\DELL\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.1+7, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@22b53226] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5d10455d]
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
 Version select: select id from airline_users where id =?
 Snapshot select: select airlineuse_.id, airlineuse_.email_id as email_id2_0_, airlineuse_.mobile_no as mobile_n3_0_, airlineuse_.name as name4_0_, airlineuse_.password as password5_0_, airlineuse_.role as role6_0_ from airline_users airlineuse_ where airlineuse_.id=?
 Insert 0: insert into airline_users (email_id, mobile_no, name, password, role, id) values (?, ?, ?, ?, ?, ?)
 Update 0: update airline_users set email_id=?, mobile_no=?, name=?, password=?, role=? where id=?
 Delete 0: delete from airline_users where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@446c3920]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [NONE]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39e43310]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [READ]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
 Version select: select ticket_id from booking_status where ticket_id =?
 Snapshot select: select bookingsta_.ticket_id, bookingsta_.airlineUsers as airlineU2_1_, bookingsta_.flightDetails as flightDe3_1_, bookingsta_.flight_id as flight_i4_1_, bookingsta_.id as id5_1_, bookingsta_.no_of_seats_booked as no_of_se6_1_ from booking_status bookingsta_ where bookingsta_.ticket_id=?
 Insert 0: insert into booking_status (airlineUsers, flightDetails, flight_id, id, no_of_seats_booked, ticket_id) values (?, ?, ?, ?, ?, ?)
 Update 0: update booking_status set airlineUsers=?, flightDetails=?, flight_id=?, id=?, no_of_seats_booked=? where ticket_id=?
 Delete 0: delete from booking_status where ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21c7208d]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [NONE]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c129ef6]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [READ]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
 Version select: select flight_id from flight_details where flight_id =?
 Snapshot select: select flightdeta_.flight_id, flightdeta_.arrival_date as arrival_2_2_, flightdeta_.arrival_time as arrival_3_2_, flightdeta_.departure_date as departur4_2_, flightdeta_.departur_time as departur5_2_, flightdeta_.destination as destinat6_2_, flightdeta_.flight_name as flight_n7_2_, flightdeta_.seats_available as seats_av8_2_, flightdeta_.source as source9_2_ from flight_details flightdeta_ where flightdeta_.flight_id=?
 Insert 0: insert into flight_details (arrival_date, arrival_time, departure_date, departur_time, destination, flight_name, seats_available, source, flight_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update flight_details set arrival_date=?, arrival_time=?, departure_date=?, departur_time=?, destination=?, flight_name=?, seats_available=?, source=? where flight_id=?
 Delete 0: delete from flight_details where flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a8cbffe]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [NONE]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61e7bf2f]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [READ]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@74dbb1ee] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : airline_users
No alter strings for table : booking_status
No alter strings for table : flight_details
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4b3fe06e
Registering SessionFactory: 30f10e71-7862-4801-b2f0-092cfb4e4fa5 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@64984b0f
parse() - HQL: select u from  com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers u where u.emailId = :emailId and u.password =:password
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'javafullstackfeb'
    |  |     |  |  |  \-[IDENT] Node: 'airlinereservationsystem'
    |  |     |  |  \-[IDENT] Node: 'dto'
    |  |     |  \-[IDENT] Node: 'AirlineUsers'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'u'
          |  |  \-[IDENT] Node: 'emailId'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'emailId'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'u'
             |  \-[IDENT] Node: 'password'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'password'

select << begin [level=1, statement=select]
FromClause{level=1} : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers (u) -> airlineuse0_
Resolved : u -> airlineuse0_.id
Resolved : u -> airlineuse0_.id
getDataType() : emailId -> org.hibernate.type.StringType@5340477f
Resolved : u.emailId -> airlineuse0_.email_id
Resolved : u -> airlineuse0_.id
getDataType() : password -> org.hibernate.type.StringType@5340477f
Resolved : u.password -> airlineuse0_.password
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} airlineuse0_.id ) ( FromClause{level=1} airline_users airlineuse0_ ) ( where ( and ( = ( airlineuse0_.email_id airlineuse0_.id emailId ) ? ) ( = ( airlineuse0_.password airlineuse0_.id password ) ? ) ) ) )
Using FROM fragment [airline_users airlineuse0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (airline_users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'airlineuse0_.id as id1_0_' {alias=u, className=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, tableAlias=airlineuse0_}
    |  \-[SQL_TOKEN] SqlFragment: 'airlineuse0_.email_id as email_id2_0_, airlineuse0_.mobile_no as mobile_n3_0_, airlineuse0_.name as name4_0_, airlineuse0_.password as password5_0_, airlineuse0_.role as role6_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[airlineuse0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'airline_users airlineuse0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=airline_users,tableAlias=airlineuse0_,origin=null,columns={,className=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'airlineuse0_.email_id' {propertyName=emailId,dereferenceType=PRIMITIVE,getPropertyPath=emailId,path=u.emailId,tableAlias=airlineuse0_,className=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers,classAlias=u}
          |  |  +-[ALIAS_REF] IdentNode: 'airlineuse0_.id' {alias=u, className=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, tableAlias=airlineuse0_}
          |  |  \-[IDENT] IdentNode: 'emailId' {originalText=emailId}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=emailId, expectedType=org.hibernate.type.StringType@5340477f}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'airlineuse0_.password' {propertyName=password,dereferenceType=PRIMITIVE,getPropertyPath=password,path=u.password,tableAlias=airlineuse0_,className=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers,classAlias=u}
             |  +-[ALIAS_REF] IdentNode: 'airlineuse0_.id' {alias=u, className=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, tableAlias=airlineuse0_}
             |  \-[IDENT] IdentNode: 'password' {originalText=password}
             \-[NAMED_PARAM] ParameterNode: '?' {name=password, expectedType=org.hibernate.type.StringType@5340477f}

throwQueryException() : no errors
HQL: select u from  com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers u where u.emailId = :emailId and u.password =:password
SQL: select airlineuse0_.id as id1_0_, airlineuse0_.email_id as email_id2_0_, airlineuse0_.mobile_no as mobile_n3_0_, airlineuse0_.name as name4_0_, airlineuse0_.password as password5_0_, airlineuse0_.role as role6_0_ from airline_users airlineuse0_ where airlineuse0_.email_id=? and airlineuse0_.password=?
throwQueryException() : no errors

    select
        airlineuse0_.id as id1_0_,
        airlineuse0_.email_id as email_id2_0_,
        airlineuse0_.mobile_no as mobile_n3_0_,
        airlineuse0_.name as name4_0_,
        airlineuse0_.password as password5_0_,
        airlineuse0_.role as role6_0_ 
    from
        airline_users airlineuse0_ 
    where
        airlineuse0_.email_id=? 
        and airlineuse0_.password=?
Result set row: 0
Result row: EntityKey[com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers#5001]
Resolving associations for [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers#5001]
Done materializing entity [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers#5001]
Initiating JDBC connection release from afterTransaction
HHH000031: Closing
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2264ea32] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5d10455d]
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Logged In Successfully....!!!
1.   Search Flight By Source
2.   Search Flight By Destination
3.   Search Flight By Name
4.   View All Flight Details
5.   Book The Flight
6.   Cancel The Tickets
7.   Logout
Enter User Id : 
Enter Flight Id : 
Enter No of seats : 
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=TestPersistence, explicit-provider=null] against incoming persistence unit name [TestPersistence]
No PersistenceProvider explicitly requested, assuming Hibernate
PersistenceUnitInfo [
	name: TestPersistence
	persistence provider classname: null
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/DELL/eclipse-workspace/airlinereservationsystemjpawithhibernate/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: rootpassword
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: update
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@239a307b
Adding type registration boolean -> org.hibernate.type.BooleanType@239a307b
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@239a307b
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5f8e8a9d
Adding type registration true_false -> org.hibernate.type.TrueFalseType@17bffc17
Adding type registration yes_no -> org.hibernate.type.YesNoType@338fc1d8
Adding type registration byte -> org.hibernate.type.ByteType@72c8e7b
Adding type registration byte -> org.hibernate.type.ByteType@72c8e7b
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@72c8e7b
Adding type registration character -> org.hibernate.type.CharacterType@57bc27f5
Adding type registration char -> org.hibernate.type.CharacterType@57bc27f5
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@57bc27f5
Adding type registration short -> org.hibernate.type.ShortType@33ecda92
Adding type registration short -> org.hibernate.type.ShortType@33ecda92
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@33ecda92
Adding type registration integer -> org.hibernate.type.IntegerType@55de24cc
Adding type registration int -> org.hibernate.type.IntegerType@55de24cc
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55de24cc
Adding type registration long -> org.hibernate.type.LongType@25df00a0
Adding type registration long -> org.hibernate.type.LongType@25df00a0
Adding type registration java.lang.Long -> org.hibernate.type.LongType@25df00a0
Adding type registration float -> org.hibernate.type.FloatType@491b9b8
Adding type registration float -> org.hibernate.type.FloatType@491b9b8
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@491b9b8
Adding type registration double -> org.hibernate.type.DoubleType@16150369
Adding type registration double -> org.hibernate.type.DoubleType@16150369
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@16150369
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b1cfb87
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b1cfb87
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6f15d60e
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6f15d60e
Adding type registration string -> org.hibernate.type.StringType@5340477f
Adding type registration java.lang.String -> org.hibernate.type.StringType@5340477f
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@387a8303
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@126253fd
Adding type registration url -> org.hibernate.type.UrlType@1807f5a7
Adding type registration java.net.URL -> org.hibernate.type.UrlType@1807f5a7
Adding type registration Duration -> org.hibernate.type.DurationType@7bbc8656
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7bbc8656
Adding type registration Instant -> org.hibernate.type.InstantType@2f953efd
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2f953efd
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@41330d4f
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@41330d4f
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@37313c65
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@37313c65
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5d908d47
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5d908d47
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@69ee81fc
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@69ee81fc
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3b35a229
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3b35a229
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e3f861
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e3f861
Adding type registration date -> org.hibernate.type.DateType@78452606
Adding type registration java.sql.Date -> org.hibernate.type.DateType@78452606
Adding type registration time -> org.hibernate.type.TimeType@2235eaab
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2235eaab
Adding type registration timestamp -> org.hibernate.type.TimestampType@10289886
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10289886
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10289886
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1a5a4e19
Adding type registration calendar -> org.hibernate.type.CalendarType@24105dc5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@24105dc5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@24105dc5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@50029372
Adding type registration locale -> org.hibernate.type.LocaleType@5038d0b5
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5038d0b5
Adding type registration currency -> org.hibernate.type.CurrencyType@61710c6
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@61710c6
Adding type registration timezone -> org.hibernate.type.TimeZoneType@5f9edf14
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5f9edf14
Adding type registration class -> org.hibernate.type.ClassType@7ac296f6
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7ac296f6
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79defdc
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79defdc
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b86805d
Adding type registration binary -> org.hibernate.type.BinaryType@17d919b6
Adding type registration byte[] -> org.hibernate.type.BinaryType@17d919b6
Adding type registration [B -> org.hibernate.type.BinaryType@17d919b6
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e62d773
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e62d773
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e62d773
Adding type registration row_version -> org.hibernate.type.RowVersionType@47c81abf
Adding type registration image -> org.hibernate.type.ImageType@18ece7f4
Adding type registration characters -> org.hibernate.type.CharArrayType@35b74c5c
Adding type registration char[] -> org.hibernate.type.CharArrayType@35b74c5c
Adding type registration [C -> org.hibernate.type.CharArrayType@35b74c5c
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4808bc9b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4808bc9b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4808bc9b
Adding type registration text -> org.hibernate.type.TextType@1ebea008
Adding type registration ntext -> org.hibernate.type.NTextType@163370c2
Adding type registration blob -> org.hibernate.type.BlobType@7b50df34
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7b50df34
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@64ec96c6
Adding type registration clob -> org.hibernate.type.ClobType@e25951c
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@e25951c
Adding type registration nclob -> org.hibernate.type.NClobType@4bc222e
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4bc222e
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5e17553a
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@74f6c5d8
Adding type registration serializable -> org.hibernate.type.SerializableType@13bc8645
Adding type registration object -> org.hibernate.type.ObjectType@7bf3a5d8
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7bf3a5d8
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@30ca0779
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@58740366
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@47be0f9b
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2bc426f0
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4bd51d3e
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@33425811
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4b74b35
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@e4e1ef5
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6d11ceef] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4cb2918c] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@72e295cc]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
HHH10001001: Connection properties: {password=rootpassword, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.47 ( Revision: fe1903b1ecb4a96a917f7ed3190d80c049b1de29 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4375b013] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1cf0cacc]
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name AirlineUsers
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers on table airline_users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=email_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property emailId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:emailId]
building SimpleValue for emailId
Building property emailId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=mobile_no, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property mobileNo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:mobileNo]
building SimpleValue for mobileNo
Building property mobileNo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=role, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property role with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:role]
building SimpleValue for role
Building property role
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name BookingStatus
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus on table booking_status
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=ticket_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property ticketId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:ticketId]
building SimpleValue for ticketId
Building property ticketId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(ticket_id)]), ticketId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=airlineUsers, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property airlineUsers with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:airlineUsers]
building SimpleValue for airlineUsers
Building property airlineUsers
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flightDetails, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightDetails with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightDetails]
building SimpleValue for flightDetails
Building property flightDetails
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightId]
building SimpleValue for flightId
Building property flightId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=no_of_seats_booked, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsbooked with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:noofseatsbooked]
building SimpleValue for noofseatsbooked
Building property noofseatsbooked
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name FlightDetails
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails on table flight_details
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightId]
building SimpleValue for flightId
Building property flightId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(flight_id)]), flightId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalDate]
building SimpleValue for arrivalDate
Building property arrivalDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalTime]
building SimpleValue for arrivalTime
Building property arrivalTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departure_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureDate]
building SimpleValue for departureDate
Building property departureDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departur_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureTime]
building SimpleValue for departureTime
Building property departureTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=destination, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property destination with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:destination]
building SimpleValue for destination
Building property destination
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightName]
building SimpleValue for flightName
Building property flightName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=seats_available, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsavailable with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:noofseatsavailable]
building SimpleValue for noofseatsavailable
Building property noofseatsavailable
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=source, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property source with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:source]
building SimpleValue for source
Building property source
Starting fillSimpleValue for id
Starting fillSimpleValue for emailId
Starting fillSimpleValue for mobileNo
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for role
Starting fillSimpleValue for ticketId
Starting fillSimpleValue for airlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Starting fillSimpleValue for flightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Starting fillSimpleValue for flightId
Starting fillSimpleValue for id
Starting fillSimpleValue for noofseatsbooked
Starting fillSimpleValue for flightId
Starting fillSimpleValue for arrivalDate
Starting fillSimpleValue for arrivalTime
Starting fillSimpleValue for departureDate
Starting fillSimpleValue for departureTime
Starting fillSimpleValue for destination
Starting fillSimpleValue for flightName
Starting fillSimpleValue for noofseatsavailable
Starting fillSimpleValue for source
Forcing column [id] to be non-null as it is part of the primary key for table [airline_users]
Forcing column [ticket_id] to be non-null as it is part of the primary key for table [booking_status]
Forcing column [flight_id] to be non-null as it is part of the primary key for table [flight_details]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: disabled
JPA compliance - query : 
JPA compliance - closed-handling : 
JPA compliance - lists : 
JPA compliance - transactions : 
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate\target\classes;C:\Users\DELL\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\DELL\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\DELL\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\DELL\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\DELL\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\DELL\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\DELL\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\DELL\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\DELL\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\DELL\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\DELL\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\DELL\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\DELL\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\DELL\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-entitymanager\5.4.2.Final\hibernate-entitymanager-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\projectlombok\lombok\1.18.8\lombok-1.18.8.jar;C:\Users\DELL\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, javax.persistence.jdbc.user=****, java.vm.specification.version=14, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.1\bin, sun.java.command=com.javafullstackfeb.airlinereservationsystem.controller.MainController, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\DELL, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=C:\Program Files\Java\jdk-14.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.1+7, user.name=DELL, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=TestPersistence, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\DELL\AppData\Local\Temp\, java.version=14.0.1, user.dir=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@432f521f, java.library.path=C:\Program Files\Java\jdk-14.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_251/bin/server;C:/Program Files/Java/jre1.8.0_251/bin;C:/Program Files/Java/jre1.8.0_251/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_251\bin;C:\Program Files\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\Users\DELL\AppData\Local\Microsoft\WindowsApps;;C:\Users\DELL\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.1+7, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4375b013] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2d7a9786]
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
 Version select: select id from airline_users where id =?
 Snapshot select: select airlineuse_.id, airlineuse_.email_id as email_id2_0_, airlineuse_.mobile_no as mobile_n3_0_, airlineuse_.name as name4_0_, airlineuse_.password as password5_0_, airlineuse_.role as role6_0_ from airline_users airlineuse_ where airlineuse_.id=?
 Insert 0: insert into airline_users (email_id, mobile_no, name, password, role, id) values (?, ?, ?, ?, ?, ?)
 Update 0: update airline_users set email_id=?, mobile_no=?, name=?, password=?, role=? where id=?
 Delete 0: delete from airline_users where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67cefd84]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [NONE]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6add8e3f]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [READ]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
 Version select: select ticket_id from booking_status where ticket_id =?
 Snapshot select: select bookingsta_.ticket_id, bookingsta_.airlineUsers as airlineU2_1_, bookingsta_.flightDetails as flightDe3_1_, bookingsta_.flight_id as flight_i4_1_, bookingsta_.id as id5_1_, bookingsta_.no_of_seats_booked as no_of_se6_1_ from booking_status bookingsta_ where bookingsta_.ticket_id=?
 Insert 0: insert into booking_status (airlineUsers, flightDetails, flight_id, id, no_of_seats_booked, ticket_id) values (?, ?, ?, ?, ?, ?)
 Update 0: update booking_status set airlineUsers=?, flightDetails=?, flight_id=?, id=?, no_of_seats_booked=? where ticket_id=?
 Delete 0: delete from booking_status where ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48904d5a]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [NONE]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1491344a]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [READ]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
 Version select: select flight_id from flight_details where flight_id =?
 Snapshot select: select flightdeta_.flight_id, flightdeta_.arrival_date as arrival_2_2_, flightdeta_.arrival_time as arrival_3_2_, flightdeta_.departure_date as departur4_2_, flightdeta_.departur_time as departur5_2_, flightdeta_.destination as destinat6_2_, flightdeta_.flight_name as flight_n7_2_, flightdeta_.seats_available as seats_av8_2_, flightdeta_.source as source9_2_ from flight_details flightdeta_ where flightdeta_.flight_id=?
 Insert 0: insert into flight_details (arrival_date, arrival_time, departure_date, departur_time, destination, flight_name, seats_available, source, flight_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update flight_details set arrival_date=?, arrival_time=?, departure_date=?, departur_time=?, destination=?, flight_name=?, seats_available=?, source=? where flight_id=?
 Delete 0: delete from flight_details where flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1386313f]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [NONE]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@433c6abb]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [READ]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@35e26d05] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : airline_users
No alter strings for table : booking_status
No alter strings for table : flight_details
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 20caf169-2209-4552-a2bf-7de5033647cb (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin

    select
        flightdeta0_.flight_id as flight_i1_2_0_,
        flightdeta0_.arrival_date as arrival_2_2_0_,
        flightdeta0_.arrival_time as arrival_3_2_0_,
        flightdeta0_.departure_date as departur4_2_0_,
        flightdeta0_.departur_time as departur5_2_0_,
        flightdeta0_.destination as destinat6_2_0_,
        flightdeta0_.flight_name as flight_n7_2_0_,
        flightdeta0_.seats_available as seats_av8_2_0_,
        flightdeta0_.source as source9_2_0_ 
    from
        flight_details flightdeta0_ 
    where
        flightdeta0_.flight_id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2001]
Done materializing entity [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2001]
HHH000387: ResultSet's statement was not registered
Done entity load : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails#2001
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails{departureTime=10:00, flightName=AirAsia, arrivalTime=08:00, noofseatsavailable=20, destination=Hyderabd, flightId=2001, departureDate=2020-12-01, source=Vizag, arrivalDate=2020-12-01}
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
begin

    select
        airlineuse0_.id as id1_0_0_,
        airlineuse0_.email_id as email_id2_0_0_,
        airlineuse0_.mobile_no as mobile_n3_0_0_,
        airlineuse0_.name as name4_0_0_,
        airlineuse0_.password as password5_0_0_,
        airlineuse0_.role as role6_0_0_ 
    from
        airline_users airlineuse0_ 
    where
        airlineuse0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers#5001]
Done materializing entity [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers#5001]
HHH000387: ResultSet's statement was not registered
Done entity load : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers#5001
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails{departureTime=10:00, flightName=AirAsia, arrivalTime=08:00, noofseatsavailable=20, destination=Hyderabd, flightId=2001, departureDate=2020-12-01, source=Vizag, arrivalDate=2020-12-01}
com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers{password=@Suni123, role=user, name=sunitha, emailId=sunitha@gmail.com, id=5001, mobileNo=9177897241}
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
begin
Generated identifier: 8749, using strategy: org.hibernate.id.Assigned
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 1 insertions, 0 updates, 0 deletions to 3 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus{noofseatsbooked=3, flightDetails=null, flightId=2001, id=5001, airlineUsers=null, ticketId=8749}
com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails{departureTime=10:00, flightName=AirAsia, arrivalTime=08:00, noofseatsavailable=20, destination=Hyderabd, flightId=2001, departureDate=2020-12-01, source=Vizag, arrivalDate=2020-12-01}
com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers{password=@Suni123, role=user, name=sunitha, emailId=sunitha@gmail.com, id=5001, mobileNo=9177897241}

    insert 
    into
        booking_status
        (airlineUsers, flightDetails, flight_id, id, no_of_seats_booked, ticket_id) 
    values
        (?, ?, ?, ?, ?, ?)
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
HHH000031: Closing
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@70d63e05] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2d7a9786]
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Request placed to Airline Management 
TICKET ID  ---->  8749
FLIGHT ID  ---->  2001
USER ID    ---->  5001
SEATS BOOKED -->  3
1.   Search Flight By Source
2.   Search Flight By Destination
3.   Search Flight By Name
4.   View All Flight Details
5.   Book The Flight
6.   Cancel The Tickets
7.   Logout
Logged Out Successfullyyyyyyyyyy.....!!!
************* Welcome To Airline Reservation System *************
1. Search Flight By Source
2. Search Flight By Destination
3. Search Flight By Name
4. View All Flight Details
5. Register
6. Login
Invalid entry please choose from above options
************* Welcome To Airline Reservation System *************
1. Search Flight By Source
2. Search Flight By Destination
3. Search Flight By Name
4. View All Flight Details
5. Register
6. Login
Enter registered email to login : 
Enter registered Password to login : 
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=TestPersistence, explicit-provider=null] against incoming persistence unit name [TestPersistence]
No PersistenceProvider explicitly requested, assuming Hibernate
PersistenceUnitInfo [
	name: TestPersistence
	persistence provider classname: null
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/DELL/eclipse-workspace/airlinereservationsystemjpawithhibernate/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: rootpassword
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: update
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@239a307b
Adding type registration boolean -> org.hibernate.type.BooleanType@239a307b
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@239a307b
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5f8e8a9d
Adding type registration true_false -> org.hibernate.type.TrueFalseType@17bffc17
Adding type registration yes_no -> org.hibernate.type.YesNoType@338fc1d8
Adding type registration byte -> org.hibernate.type.ByteType@72c8e7b
Adding type registration byte -> org.hibernate.type.ByteType@72c8e7b
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@72c8e7b
Adding type registration character -> org.hibernate.type.CharacterType@57bc27f5
Adding type registration char -> org.hibernate.type.CharacterType@57bc27f5
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@57bc27f5
Adding type registration short -> org.hibernate.type.ShortType@33ecda92
Adding type registration short -> org.hibernate.type.ShortType@33ecda92
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@33ecda92
Adding type registration integer -> org.hibernate.type.IntegerType@55de24cc
Adding type registration int -> org.hibernate.type.IntegerType@55de24cc
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55de24cc
Adding type registration long -> org.hibernate.type.LongType@25df00a0
Adding type registration long -> org.hibernate.type.LongType@25df00a0
Adding type registration java.lang.Long -> org.hibernate.type.LongType@25df00a0
Adding type registration float -> org.hibernate.type.FloatType@491b9b8
Adding type registration float -> org.hibernate.type.FloatType@491b9b8
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@491b9b8
Adding type registration double -> org.hibernate.type.DoubleType@16150369
Adding type registration double -> org.hibernate.type.DoubleType@16150369
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@16150369
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b1cfb87
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b1cfb87
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6f15d60e
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6f15d60e
Adding type registration string -> org.hibernate.type.StringType@5340477f
Adding type registration java.lang.String -> org.hibernate.type.StringType@5340477f
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@387a8303
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@126253fd
Adding type registration url -> org.hibernate.type.UrlType@1807f5a7
Adding type registration java.net.URL -> org.hibernate.type.UrlType@1807f5a7
Adding type registration Duration -> org.hibernate.type.DurationType@7bbc8656
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7bbc8656
Adding type registration Instant -> org.hibernate.type.InstantType@2f953efd
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2f953efd
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@41330d4f
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@41330d4f
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@37313c65
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@37313c65
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5d908d47
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5d908d47
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@69ee81fc
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@69ee81fc
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3b35a229
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3b35a229
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e3f861
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e3f861
Adding type registration date -> org.hibernate.type.DateType@78452606
Adding type registration java.sql.Date -> org.hibernate.type.DateType@78452606
Adding type registration time -> org.hibernate.type.TimeType@2235eaab
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2235eaab
Adding type registration timestamp -> org.hibernate.type.TimestampType@10289886
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10289886
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10289886
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1a5a4e19
Adding type registration calendar -> org.hibernate.type.CalendarType@24105dc5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@24105dc5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@24105dc5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@50029372
Adding type registration locale -> org.hibernate.type.LocaleType@5038d0b5
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5038d0b5
Adding type registration currency -> org.hibernate.type.CurrencyType@61710c6
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@61710c6
Adding type registration timezone -> org.hibernate.type.TimeZoneType@5f9edf14
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5f9edf14
Adding type registration class -> org.hibernate.type.ClassType@7ac296f6
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7ac296f6
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79defdc
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79defdc
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b86805d
Adding type registration binary -> org.hibernate.type.BinaryType@17d919b6
Adding type registration byte[] -> org.hibernate.type.BinaryType@17d919b6
Adding type registration [B -> org.hibernate.type.BinaryType@17d919b6
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e62d773
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e62d773
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e62d773
Adding type registration row_version -> org.hibernate.type.RowVersionType@47c81abf
Adding type registration image -> org.hibernate.type.ImageType@18ece7f4
Adding type registration characters -> org.hibernate.type.CharArrayType@35b74c5c
Adding type registration char[] -> org.hibernate.type.CharArrayType@35b74c5c
Adding type registration [C -> org.hibernate.type.CharArrayType@35b74c5c
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4808bc9b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4808bc9b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4808bc9b
Adding type registration text -> org.hibernate.type.TextType@1ebea008
Adding type registration ntext -> org.hibernate.type.NTextType@163370c2
Adding type registration blob -> org.hibernate.type.BlobType@7b50df34
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7b50df34
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@64ec96c6
Adding type registration clob -> org.hibernate.type.ClobType@e25951c
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@e25951c
Adding type registration nclob -> org.hibernate.type.NClobType@4bc222e
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4bc222e
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5e17553a
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@74f6c5d8
Adding type registration serializable -> org.hibernate.type.SerializableType@13bc8645
Adding type registration object -> org.hibernate.type.ObjectType@7bf3a5d8
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7bf3a5d8
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4a8e6e89
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6fbb4061
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@63d5874f
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@60c73e58
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5984feef
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6c0905f6
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@23a918c7
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7a45d714
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@4483d35] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@204abeff] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4b4ee511]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
HHH10001001: Connection properties: {password=rootpassword, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.47 ( Revision: fe1903b1ecb4a96a917f7ed3190d80c049b1de29 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@41a374be] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@11f9535b]
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name AirlineUsers
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers on table airline_users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=email_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property emailId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:emailId]
building SimpleValue for emailId
Building property emailId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=mobile_no, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property mobileNo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:mobileNo]
building SimpleValue for mobileNo
Building property mobileNo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=role, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property role with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:role]
building SimpleValue for role
Building property role
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name BookingStatus
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus on table booking_status
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=ticket_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property ticketId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:ticketId]
building SimpleValue for ticketId
Building property ticketId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(ticket_id)]), ticketId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=airlineUsers, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property airlineUsers with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:airlineUsers]
building SimpleValue for airlineUsers
Building property airlineUsers
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flightDetails, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightDetails with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightDetails]
building SimpleValue for flightDetails
Building property flightDetails
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightId]
building SimpleValue for flightId
Building property flightId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=no_of_seats_booked, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsbooked with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:noofseatsbooked]
building SimpleValue for noofseatsbooked
Building property noofseatsbooked
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name FlightDetails
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails on table flight_details
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightId]
building SimpleValue for flightId
Building property flightId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(flight_id)]), flightId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalDate]
building SimpleValue for arrivalDate
Building property arrivalDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalTime]
building SimpleValue for arrivalTime
Building property arrivalTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departure_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureDate]
building SimpleValue for departureDate
Building property departureDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departur_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureTime]
building SimpleValue for departureTime
Building property departureTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=destination, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property destination with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:destination]
building SimpleValue for destination
Building property destination
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightName]
building SimpleValue for flightName
Building property flightName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=seats_available, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsavailable with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:noofseatsavailable]
building SimpleValue for noofseatsavailable
Building property noofseatsavailable
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=source, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property source with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:source]
building SimpleValue for source
Building property source
Starting fillSimpleValue for id
Starting fillSimpleValue for emailId
Starting fillSimpleValue for mobileNo
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for role
Starting fillSimpleValue for ticketId
Starting fillSimpleValue for airlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Starting fillSimpleValue for flightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Starting fillSimpleValue for flightId
Starting fillSimpleValue for id
Starting fillSimpleValue for noofseatsbooked
Starting fillSimpleValue for flightId
Starting fillSimpleValue for arrivalDate
Starting fillSimpleValue for arrivalTime
Starting fillSimpleValue for departureDate
Starting fillSimpleValue for departureTime
Starting fillSimpleValue for destination
Starting fillSimpleValue for flightName
Starting fillSimpleValue for noofseatsavailable
Starting fillSimpleValue for source
Forcing column [id] to be non-null as it is part of the primary key for table [airline_users]
Forcing column [ticket_id] to be non-null as it is part of the primary key for table [booking_status]
Forcing column [flight_id] to be non-null as it is part of the primary key for table [flight_details]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: disabled
JPA compliance - query : 
JPA compliance - closed-handling : 
JPA compliance - lists : 
JPA compliance - transactions : 
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate\target\classes;C:\Users\DELL\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\DELL\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\DELL\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\DELL\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\DELL\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\DELL\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\DELL\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\DELL\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\DELL\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\DELL\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\DELL\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\DELL\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\DELL\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\DELL\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-entitymanager\5.4.2.Final\hibernate-entitymanager-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\projectlombok\lombok\1.18.8\lombok-1.18.8.jar;C:\Users\DELL\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, javax.persistence.jdbc.user=****, java.vm.specification.version=14, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.1\bin, sun.java.command=com.javafullstackfeb.airlinereservationsystem.controller.MainController, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\DELL, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=C:\Program Files\Java\jdk-14.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.1+7, user.name=DELL, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=TestPersistence, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\DELL\AppData\Local\Temp\, java.version=14.0.1, user.dir=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@341b13a8, java.library.path=C:\Program Files\Java\jdk-14.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_251/bin/server;C:/Program Files/Java/jre1.8.0_251/bin;C:/Program Files/Java/jre1.8.0_251/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_251\bin;C:\Program Files\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\Users\DELL\AppData\Local\Microsoft\WindowsApps;;C:\Users\DELL\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.1+7, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@41a374be] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@692dba54]
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
 Version select: select id from airline_users where id =?
 Snapshot select: select airlineuse_.id, airlineuse_.email_id as email_id2_0_, airlineuse_.mobile_no as mobile_n3_0_, airlineuse_.name as name4_0_, airlineuse_.password as password5_0_, airlineuse_.role as role6_0_ from airline_users airlineuse_ where airlineuse_.id=?
 Insert 0: insert into airline_users (email_id, mobile_no, name, password, role, id) values (?, ?, ?, ?, ?, ?)
 Update 0: update airline_users set email_id=?, mobile_no=?, name=?, password=?, role=? where id=?
 Delete 0: delete from airline_users where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3382cf68]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [NONE]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d8796c1]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [READ]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
 Version select: select ticket_id from booking_status where ticket_id =?
 Snapshot select: select bookingsta_.ticket_id, bookingsta_.airlineUsers as airlineU2_1_, bookingsta_.flightDetails as flightDe3_1_, bookingsta_.flight_id as flight_i4_1_, bookingsta_.id as id5_1_, bookingsta_.no_of_seats_booked as no_of_se6_1_ from booking_status bookingsta_ where bookingsta_.ticket_id=?
 Insert 0: insert into booking_status (airlineUsers, flightDetails, flight_id, id, no_of_seats_booked, ticket_id) values (?, ?, ?, ?, ?, ?)
 Update 0: update booking_status set airlineUsers=?, flightDetails=?, flight_id=?, id=?, no_of_seats_booked=? where ticket_id=?
 Delete 0: delete from booking_status where ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27be17c8]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [NONE]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d21852b]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [READ]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
 Version select: select flight_id from flight_details where flight_id =?
 Snapshot select: select flightdeta_.flight_id, flightdeta_.arrival_date as arrival_2_2_, flightdeta_.arrival_time as arrival_3_2_, flightdeta_.departure_date as departur4_2_, flightdeta_.departur_time as departur5_2_, flightdeta_.destination as destinat6_2_, flightdeta_.flight_name as flight_n7_2_, flightdeta_.seats_available as seats_av8_2_, flightdeta_.source as source9_2_ from flight_details flightdeta_ where flightdeta_.flight_id=?
 Insert 0: insert into flight_details (arrival_date, arrival_time, departure_date, departur_time, destination, flight_name, seats_available, source, flight_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update flight_details set arrival_date=?, arrival_time=?, departure_date=?, departur_time=?, destination=?, flight_name=?, seats_available=?, source=? where flight_id=?
 Delete 0: delete from flight_details where flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f6c6077]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [NONE]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@286090c]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [READ]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4baed682] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : airline_users
No alter strings for table : booking_status
No alter strings for table : flight_details
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 8a0e85dd-e86d-4d7c-a2fe-63c11de25f5f (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@64984b0f
parse() - HQL: select u from  com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers u where u.emailId = :emailId and u.password =:password
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'javafullstackfeb'
    |  |     |  |  |  \-[IDENT] Node: 'airlinereservationsystem'
    |  |     |  |  \-[IDENT] Node: 'dto'
    |  |     |  \-[IDENT] Node: 'AirlineUsers'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'u'
          |  |  \-[IDENT] Node: 'emailId'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'emailId'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'u'
             |  \-[IDENT] Node: 'password'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'password'

select << begin [level=1, statement=select]
FromClause{level=1} : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers (u) -> airlineuse0_
Resolved : u -> airlineuse0_.id
Resolved : u -> airlineuse0_.id
getDataType() : emailId -> org.hibernate.type.StringType@5340477f
Resolved : u.emailId -> airlineuse0_.email_id
Resolved : u -> airlineuse0_.id
getDataType() : password -> org.hibernate.type.StringType@5340477f
Resolved : u.password -> airlineuse0_.password
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} airlineuse0_.id ) ( FromClause{level=1} airline_users airlineuse0_ ) ( where ( and ( = ( airlineuse0_.email_id airlineuse0_.id emailId ) ? ) ( = ( airlineuse0_.password airlineuse0_.id password ) ? ) ) ) )
Using FROM fragment [airline_users airlineuse0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (airline_users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'airlineuse0_.id as id1_0_' {alias=u, className=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, tableAlias=airlineuse0_}
    |  \-[SQL_TOKEN] SqlFragment: 'airlineuse0_.email_id as email_id2_0_, airlineuse0_.mobile_no as mobile_n3_0_, airlineuse0_.name as name4_0_, airlineuse0_.password as password5_0_, airlineuse0_.role as role6_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[airlineuse0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'airline_users airlineuse0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=airline_users,tableAlias=airlineuse0_,origin=null,columns={,className=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'airlineuse0_.email_id' {propertyName=emailId,dereferenceType=PRIMITIVE,getPropertyPath=emailId,path=u.emailId,tableAlias=airlineuse0_,className=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers,classAlias=u}
          |  |  +-[ALIAS_REF] IdentNode: 'airlineuse0_.id' {alias=u, className=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, tableAlias=airlineuse0_}
          |  |  \-[IDENT] IdentNode: 'emailId' {originalText=emailId}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=emailId, expectedType=org.hibernate.type.StringType@5340477f}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'airlineuse0_.password' {propertyName=password,dereferenceType=PRIMITIVE,getPropertyPath=password,path=u.password,tableAlias=airlineuse0_,className=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers,classAlias=u}
             |  +-[ALIAS_REF] IdentNode: 'airlineuse0_.id' {alias=u, className=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, tableAlias=airlineuse0_}
             |  \-[IDENT] IdentNode: 'password' {originalText=password}
             \-[NAMED_PARAM] ParameterNode: '?' {name=password, expectedType=org.hibernate.type.StringType@5340477f}

throwQueryException() : no errors
HQL: select u from  com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers u where u.emailId = :emailId and u.password =:password
SQL: select airlineuse0_.id as id1_0_, airlineuse0_.email_id as email_id2_0_, airlineuse0_.mobile_no as mobile_n3_0_, airlineuse0_.name as name4_0_, airlineuse0_.password as password5_0_, airlineuse0_.role as role6_0_ from airline_users airlineuse0_ where airlineuse0_.email_id=? and airlineuse0_.password=?
throwQueryException() : no errors

    select
        airlineuse0_.id as id1_0_,
        airlineuse0_.email_id as email_id2_0_,
        airlineuse0_.mobile_no as mobile_n3_0_,
        airlineuse0_.name as name4_0_,
        airlineuse0_.password as password5_0_,
        airlineuse0_.role as role6_0_ 
    from
        airline_users airlineuse0_ 
    where
        airlineuse0_.email_id=? 
        and airlineuse0_.password=?
Result set row: 0
Result row: EntityKey[com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers#1001]
Resolving associations for [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers#1001]
Done materializing entity [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers#1001]
Initiating JDBC connection release from afterTransaction
HHH000031: Closing
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3458eca5] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@692dba54]
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Logged in successfullyyy...!!!
1.   Add Flights
2.   Remove Flight
3.   View All FlightDetails
4.   Booking Status 
5.   Logout
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=TestPersistence, explicit-provider=null] against incoming persistence unit name [TestPersistence]
No PersistenceProvider explicitly requested, assuming Hibernate
PersistenceUnitInfo [
	name: TestPersistence
	persistence provider classname: null
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/DELL/eclipse-workspace/airlinereservationsystemjpawithhibernate/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: rootpassword
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: update
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@239a307b
Adding type registration boolean -> org.hibernate.type.BooleanType@239a307b
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@239a307b
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5f8e8a9d
Adding type registration true_false -> org.hibernate.type.TrueFalseType@17bffc17
Adding type registration yes_no -> org.hibernate.type.YesNoType@338fc1d8
Adding type registration byte -> org.hibernate.type.ByteType@72c8e7b
Adding type registration byte -> org.hibernate.type.ByteType@72c8e7b
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@72c8e7b
Adding type registration character -> org.hibernate.type.CharacterType@57bc27f5
Adding type registration char -> org.hibernate.type.CharacterType@57bc27f5
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@57bc27f5
Adding type registration short -> org.hibernate.type.ShortType@33ecda92
Adding type registration short -> org.hibernate.type.ShortType@33ecda92
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@33ecda92
Adding type registration integer -> org.hibernate.type.IntegerType@55de24cc
Adding type registration int -> org.hibernate.type.IntegerType@55de24cc
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55de24cc
Adding type registration long -> org.hibernate.type.LongType@25df00a0
Adding type registration long -> org.hibernate.type.LongType@25df00a0
Adding type registration java.lang.Long -> org.hibernate.type.LongType@25df00a0
Adding type registration float -> org.hibernate.type.FloatType@491b9b8
Adding type registration float -> org.hibernate.type.FloatType@491b9b8
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@491b9b8
Adding type registration double -> org.hibernate.type.DoubleType@16150369
Adding type registration double -> org.hibernate.type.DoubleType@16150369
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@16150369
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b1cfb87
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b1cfb87
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6f15d60e
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6f15d60e
Adding type registration string -> org.hibernate.type.StringType@5340477f
Adding type registration java.lang.String -> org.hibernate.type.StringType@5340477f
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@387a8303
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@126253fd
Adding type registration url -> org.hibernate.type.UrlType@1807f5a7
Adding type registration java.net.URL -> org.hibernate.type.UrlType@1807f5a7
Adding type registration Duration -> org.hibernate.type.DurationType@7bbc8656
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7bbc8656
Adding type registration Instant -> org.hibernate.type.InstantType@2f953efd
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2f953efd
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@41330d4f
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@41330d4f
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@37313c65
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@37313c65
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5d908d47
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5d908d47
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@69ee81fc
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@69ee81fc
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3b35a229
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3b35a229
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e3f861
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e3f861
Adding type registration date -> org.hibernate.type.DateType@78452606
Adding type registration java.sql.Date -> org.hibernate.type.DateType@78452606
Adding type registration time -> org.hibernate.type.TimeType@2235eaab
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2235eaab
Adding type registration timestamp -> org.hibernate.type.TimestampType@10289886
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10289886
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10289886
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1a5a4e19
Adding type registration calendar -> org.hibernate.type.CalendarType@24105dc5
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@24105dc5
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@24105dc5
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@50029372
Adding type registration locale -> org.hibernate.type.LocaleType@5038d0b5
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5038d0b5
Adding type registration currency -> org.hibernate.type.CurrencyType@61710c6
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@61710c6
Adding type registration timezone -> org.hibernate.type.TimeZoneType@5f9edf14
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5f9edf14
Adding type registration class -> org.hibernate.type.ClassType@7ac296f6
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7ac296f6
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@79defdc
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@79defdc
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b86805d
Adding type registration binary -> org.hibernate.type.BinaryType@17d919b6
Adding type registration byte[] -> org.hibernate.type.BinaryType@17d919b6
Adding type registration [B -> org.hibernate.type.BinaryType@17d919b6
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e62d773
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e62d773
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e62d773
Adding type registration row_version -> org.hibernate.type.RowVersionType@47c81abf
Adding type registration image -> org.hibernate.type.ImageType@18ece7f4
Adding type registration characters -> org.hibernate.type.CharArrayType@35b74c5c
Adding type registration char[] -> org.hibernate.type.CharArrayType@35b74c5c
Adding type registration [C -> org.hibernate.type.CharArrayType@35b74c5c
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4808bc9b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4808bc9b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4808bc9b
Adding type registration text -> org.hibernate.type.TextType@1ebea008
Adding type registration ntext -> org.hibernate.type.NTextType@163370c2
Adding type registration blob -> org.hibernate.type.BlobType@7b50df34
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7b50df34
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@64ec96c6
Adding type registration clob -> org.hibernate.type.ClobType@e25951c
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@e25951c
Adding type registration nclob -> org.hibernate.type.NClobType@4bc222e
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4bc222e
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5e17553a
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@74f6c5d8
Adding type registration serializable -> org.hibernate.type.SerializableType@13bc8645
Adding type registration object -> org.hibernate.type.ObjectType@7bf3a5d8
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7bf3a5d8
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2c991465
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5fef2aac
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7f973a14
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@76130a29
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@124d02b2
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3451f01d
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@72503b19
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1cfc2538
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@66deec87] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5d342959] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2ecf5915]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
HHH10001001: Connection properties: {password=rootpassword, user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.47 ( Revision: fe1903b1ecb4a96a917f7ed3190d80c049b1de29 )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3138953b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@27df95e]
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name AirlineUsers
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers on table airline_users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=email_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property emailId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:emailId]
building SimpleValue for emailId
Building property emailId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=mobile_no, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property mobileNo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:mobileNo]
building SimpleValue for mobileNo
Building property mobileNo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(airline_users), mappingColumn=role, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property role with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers:role]
building SimpleValue for role
Building property role
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name BookingStatus
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus on table booking_status
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=ticket_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property ticketId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:ticketId]
building SimpleValue for ticketId
Building property ticketId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(ticket_id)]), ticketId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=airlineUsers, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property airlineUsers with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:airlineUsers]
building SimpleValue for airlineUsers
Building property airlineUsers
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flightDetails, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightDetails with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightDetails]
building SimpleValue for flightDetails
Building property flightDetails
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:flightId]
building SimpleValue for flightId
Building property flightId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(booking_status), mappingColumn=no_of_seats_booked, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsbooked with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus:noofseatsbooked]
building SimpleValue for noofseatsbooked
Building property noofseatsbooked
Binding entity from annotated class: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name FlightDetails
Bind entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails on table flight_details
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightId]
building SimpleValue for flightId
Building property flightId
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(flight_id)]), flightId, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalDate]
building SimpleValue for arrivalDate
Building property arrivalDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=arrival_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property arrivalTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:arrivalTime]
building SimpleValue for arrivalTime
Building property arrivalTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departure_date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureDate]
building SimpleValue for departureDate
Building property departureDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=departur_time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departureTime with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:departureTime]
building SimpleValue for departureTime
Building property departureTime
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=destination, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property destination with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:destination]
building SimpleValue for destination
Building property destination
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=flight_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property flightName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:flightName]
building SimpleValue for flightName
Building property flightName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=seats_available, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property noofseatsavailable with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:noofseatsavailable]
building SimpleValue for noofseatsavailable
Building property noofseatsavailable
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(flight_details), mappingColumn=source, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property source with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails:source]
building SimpleValue for source
Building property source
Starting fillSimpleValue for id
Starting fillSimpleValue for emailId
Starting fillSimpleValue for mobileNo
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for role
Starting fillSimpleValue for ticketId
Starting fillSimpleValue for airlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Starting fillSimpleValue for flightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Starting fillSimpleValue for flightId
Starting fillSimpleValue for id
Starting fillSimpleValue for noofseatsbooked
Starting fillSimpleValue for flightId
Starting fillSimpleValue for arrivalDate
Starting fillSimpleValue for arrivalTime
Starting fillSimpleValue for departureDate
Starting fillSimpleValue for departureTime
Starting fillSimpleValue for destination
Starting fillSimpleValue for flightName
Starting fillSimpleValue for noofseatsavailable
Starting fillSimpleValue for source
Forcing column [id] to be non-null as it is part of the primary key for table [airline_users]
Forcing column [ticket_id] to be non-null as it is part of the primary key for table [booking_status]
Forcing column [flight_id] to be non-null as it is part of the primary key for table [flight_details]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: disabled
JPA compliance - query : 
JPA compliance - closed-handling : 
JPA compliance - lists : 
JPA compliance - transactions : 
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate\target\classes;C:\Users\DELL\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\DELL\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\DELL\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\DELL\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\DELL\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\DELL\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\DELL\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\DELL\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\DELL\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\DELL\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\DELL\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\DELL\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\DELL\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\DELL\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\DELL\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\DELL\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\DELL\.m2\repository\org\hibernate\hibernate-entitymanager\5.4.2.Final\hibernate-entitymanager-5.4.2.Final.jar;C:\Users\DELL\.m2\repository\org\projectlombok\lombok\1.18.8\lombok-1.18.8.jar;C:\Users\DELL\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, javax.persistence.jdbc.user=****, java.vm.specification.version=14, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.1\bin, sun.java.command=com.javafullstackfeb.airlinereservationsystem.controller.MainController, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\DELL, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=C:\Program Files\Java\jdk-14.0.1, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.1+7, user.name=DELL, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=TestPersistence, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\DELL\AppData\Local\Temp\, java.version=14.0.1, user.dir=C:\Users\DELL\eclipse-workspace\airlinereservationsystemjpawithhibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@777d0bc3, java.library.path=C:\Program Files\Java\jdk-14.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_251/bin/server;C:/Program Files/Java/jre1.8.0_251/bin;C:/Program Files/Java/jre1.8.0_251/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_251\bin;C:\Program Files\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\Users\DELL\AppData\Local\Microsoft\WindowsApps;;C:\Users\DELL\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.1+7, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3138953b] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3178219a]
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Not known whether passed class name [com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers
 Version select: select id from airline_users where id =?
 Snapshot select: select airlineuse_.id, airlineuse_.email_id as email_id2_0_, airlineuse_.mobile_no as mobile_n3_0_, airlineuse_.name as name4_0_, airlineuse_.password as password5_0_, airlineuse_.role as role6_0_ from airline_users airlineuse_ where airlineuse_.id=?
 Insert 0: insert into airline_users (email_id, mobile_no, name, password, role, id) values (?, ?, ?, ?, ?, ?)
 Update 0: update airline_users set email_id=?, mobile_no=?, name=?, password=?, role=? where id=?
 Delete 0: delete from airline_users where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bdf]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [NONE]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c63762b]
Visiting attribute path : emailId
Visiting attribute path : mobileNo
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : role
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers)
          - SQL table alias mapping - airlineuse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers [READ]: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.AirlineUsers: select airlineuse0_.id as id1_0_0_, airlineuse0_.email_id as email_id2_0_0_, airlineuse0_.mobile_no as mobile_n3_0_0_, airlineuse0_.name as name4_0_0_, airlineuse0_.password as password5_0_0_, airlineuse0_.role as role6_0_0_ from airline_users airlineuse0_ where airlineuse0_.id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus
 Version select: select ticket_id from booking_status where ticket_id =?
 Snapshot select: select bookingsta_.ticket_id, bookingsta_.airlineUsers as airlineU2_1_, bookingsta_.flightDetails as flightDe3_1_, bookingsta_.flight_id as flight_i4_1_, bookingsta_.id as id5_1_, bookingsta_.no_of_seats_booked as no_of_se6_1_ from booking_status bookingsta_ where bookingsta_.ticket_id=?
 Insert 0: insert into booking_status (airlineUsers, flightDetails, flight_id, id, no_of_seats_booked, ticket_id) values (?, ?, ?, ?, ?, ?)
 Update 0: update booking_status set airlineUsers=?, flightDetails=?, flight_id=?, id=?, no_of_seats_booked=? where ticket_id=?
 Delete 0: delete from booking_status where ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78422efb]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [NONE]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68e02f33]
Visiting attribute path : airlineUsers
Visiting attribute path : flightDetails
Visiting attribute path : flightId
Visiting attribute path : id
Visiting attribute path : noofseatsbooked
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus)
          - SQL table alias mapping - bookingsta0_
          - alias suffix - 0_
          - suffixed key columns - {ticket_i1_1_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus [READ]: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus: select bookingsta0_.ticket_id as ticket_i1_1_0_, bookingsta0_.airlineUsers as airlineU2_1_0_, bookingsta0_.flightDetails as flightDe3_1_0_, bookingsta0_.flight_id as flight_i4_1_0_, bookingsta0_.id as id5_1_0_, bookingsta0_.no_of_seats_booked as no_of_se6_1_0_ from booking_status bookingsta0_ where bookingsta0_.ticket_id=?
Static SQL for entity: com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails
 Version select: select flight_id from flight_details where flight_id =?
 Snapshot select: select flightdeta_.flight_id, flightdeta_.arrival_date as arrival_2_2_, flightdeta_.arrival_time as arrival_3_2_, flightdeta_.departure_date as departur4_2_, flightdeta_.departur_time as departur5_2_, flightdeta_.destination as destinat6_2_, flightdeta_.flight_name as flight_n7_2_, flightdeta_.seats_available as seats_av8_2_, flightdeta_.source as source9_2_ from flight_details flightdeta_ where flightdeta_.flight_id=?
 Insert 0: insert into flight_details (arrival_date, arrival_time, departure_date, departur_time, destination, flight_name, seats_available, source, flight_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update flight_details set arrival_date=?, arrival_time=?, departure_date=?, departur_time=?, destination=?, flight_name=?, seats_available=?, source=? where flight_id=?
 Delete 0: delete from flight_details where flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d48e998]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [NONE]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@158ae284]
Visiting attribute path : arrivalDate
Visiting attribute path : arrivalTime
Visiting attribute path : departureDate
Visiting attribute path : departureTime
Visiting attribute path : destination
Visiting attribute path : flightName
Visiting attribute path : noofseatsavailable
Visiting attribute path : source
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - Returns
       - EntityReturnImpl(entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails, querySpaceUid=<gen:0>, path=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails)
          - SQL table alias mapping - flightdeta0_
          - alias suffix - 0_
          - suffixed key columns - {flight_i1_2_0_}

Static select for entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails [READ]: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_MERGE on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
Static select for action ACTION_REFRESH on entity com.javafullstackfeb.airlinereservationsystem.dto.FlightDetails: select flightdeta0_.flight_id as flight_i1_2_0_, flightdeta0_.arrival_date as arrival_2_2_0_, flightdeta0_.arrival_time as arrival_3_2_0_, flightdeta0_.departure_date as departur4_2_0_, flightdeta0_.departur_time as departur5_2_0_, flightdeta0_.destination as destinat6_2_0_, flightdeta0_.flight_name as flight_n7_2_0_, flightdeta0_.seats_available as seats_av8_2_0_, flightdeta0_.source as source9_2_0_ from flight_details flightdeta0_ where flightdeta0_.flight_id=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7885776b] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : airline_users
No alter strings for table : booking_status
No alter strings for table : flight_details
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 70be67fb-860f-461c-b4d9-103403ce7f85 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@64984b0f
parse() - HQL: select b from com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus b
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'javafullstackfeb'
       |     |  |  |  \-[IDENT] Node: 'airlinereservationsystem'
       |     |  |  \-[IDENT] Node: 'dto'
       |     |  \-[IDENT] Node: 'BookingStatus'
       |     \-[ALIAS] Node: 'b'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'b'

select << begin [level=1, statement=select]
FromClause{level=1} : com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus (b) -> bookingsta0_
Resolved : b -> bookingsta0_.ticket_id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} bookingsta0_.ticket_id ) ( FromClause{level=1} booking_status bookingsta0_ ) )
Using FROM fragment [booking_status bookingsta0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (booking_status)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'bookingsta0_.ticket_id as ticket_i1_1_' {alias=b, className=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus, tableAlias=bookingsta0_}
    |  \-[SQL_TOKEN] SqlFragment: 'bookingsta0_.airlineUsers as airlineU2_1_, bookingsta0_.flightDetails as flightDe3_1_, bookingsta0_.flight_id as flight_i4_1_, bookingsta0_.id as id5_1_, bookingsta0_.no_of_seats_booked as no_of_se6_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[bookingsta0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'booking_status bookingsta0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=booking_status,tableAlias=bookingsta0_,origin=null,columns={,className=com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus}}

throwQueryException() : no errors
HQL: select b from com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus b
SQL: select bookingsta0_.ticket_id as ticket_i1_1_, bookingsta0_.airlineUsers as airlineU2_1_, bookingsta0_.flightDetails as flightDe3_1_, bookingsta0_.flight_id as flight_i4_1_, bookingsta0_.id as id5_1_, bookingsta0_.no_of_seats_booked as no_of_se6_1_ from booking_status bookingsta0_
throwQueryException() : no errors

    select
        bookingsta0_.ticket_id as ticket_i1_1_,
        bookingsta0_.airlineUsers as airlineU2_1_,
        bookingsta0_.flightDetails as flightDe3_1_,
        bookingsta0_.flight_id as flight_i4_1_,
        bookingsta0_.id as id5_1_,
        bookingsta0_.no_of_seats_booked as no_of_se6_1_ 
    from
        booking_status bookingsta0_
Result set row: 0
Result row: EntityKey[com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus#1555]
Result set row: 1
Result row: EntityKey[com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus#2642]
Result set row: 2
Result row: EntityKey[com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus#8749]
Resolving associations for [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus#1555]
Done materializing entity [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus#1555]
Resolving associations for [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus#2642]
Done materializing entity [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus#2642]
Resolving associations for [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus#8749]
Done materializing entity [com.javafullstackfeb.airlinereservationsystem.dto.BookingStatus#8749]
Initiating JDBC connection release from afterTransaction
HHH000031: Closing
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7dcb42a9] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3178219a]
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/airline_reservation_system_db?useSSL=false]
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Request placed to Airline Management 
TICKET ID  ---->  1555
FLIGHT ID  ---->  2000
USER ID    ---->  1000
SEATS BOOKED -->  3
Request placed to Airline Management 
TICKET ID  ---->  2642
FLIGHT ID  ---->  2000
USER ID    ---->  5001
SEATS BOOKED -->  5
Request placed to Airline Management 
TICKET ID  ---->  8749
FLIGHT ID  ---->  2001
USER ID    ---->  5001
SEATS BOOKED -->  3
1.   Add Flights
2.   Remove Flight
3.   View All FlightDetails
4.   Booking Status 
5.   Logout
